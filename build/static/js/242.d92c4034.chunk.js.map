{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","extensions/extensionsHeader.js","extensions/import-export/ExportSelected.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","ExtensionsHeader","sm","data-tour","title","link","href","target","rel","subTitle","Export","state","data","id","name","username","email","website","filteredData","dataToExport","modal","fileName","fileFormat","selectedRows","selectAll","toggleModal","setState","handleFilter","e","length","filter","col","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleExport","map","item","push","wb","XLSX","utils","json_to_sheet","wbout","book_new","book_append_sheet","writeFile","handleSelect","splice","indexOf","handleSelectAll","i","renderTableData","key","classnames","selected","IconTag","Minus","Check","Fragment","Ripple","responsive","isOpen","toggle","placeholder","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/242.d92c4034.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import { Star } from \"react-feather\"\r\n\r\nclass ExtensionsHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"mb-2\">\r\n        <Col sm=\"12\" className=\"ml-50\">\r\n          <p\r\n            className=\"font-medium-5 mt-1 extension-title\"\r\n            data-tour=\"extension-title\"\r\n          >\r\n            {this.props.title}\r\n          </p>\r\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {this.props.subTitle}\r\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default ExtensionsHeader\r\n","import React from \"react\";\r\nimport ExtensionsHeader from \"../extensionsHeader\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport XLSX from \"xlsx\";\r\nimport { Check, Minus, Search } from \"react-feather\";\r\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\n\r\nimport \"../../assets/scss/pages/import-export.scss\";\r\nclass Export extends React.Component {\r\n  state = {\r\n    data: [\r\n      {\r\n        id: 1,\r\n        name: \"Leanne Graham\",\r\n        username: \"Bret\",\r\n        email: \"Sincere@april.biz\",\r\n        website: \"hildegard.org\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Ervin Howell\",\r\n        username: \"Antonette\",\r\n        email: \"Shanna@melissa.tv\",\r\n        website: \"anastasia.net\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Clementine Bauch\",\r\n        username: \"Samantha\",\r\n        email: \"Nathan@yesenia.net\",\r\n        website: \"ramiro.info\",\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Patricia Lebsack\",\r\n        username: \"Karianne\",\r\n        email: \"Julianne.OConner@kory.org\",\r\n        website: \"kale.biz\",\r\n      },\r\n      {\r\n        id: 5,\r\n        name: \"Chelsey Dietrich\",\r\n        username: \"Kamren\",\r\n        email: \"Lucio_Hettinger@annie.ca\",\r\n        website: \"demarco.info\",\r\n      },\r\n      {\r\n        id: 6,\r\n        name: \"Mrs. Dennis Schulist\",\r\n        username: \"Leopoldo_Corkery\",\r\n        email: \"Karley_Dach@jasper.info\",\r\n        website: \"ola.org\",\r\n      },\r\n      {\r\n        id: 7,\r\n        name: \"Kurtis Weissnat\",\r\n        username: \"Elwyn.Skiles\",\r\n        email: \"Telly.Hoeger@billy.biz\",\r\n        website: \"elvis.io\",\r\n      },\r\n      {\r\n        id: 8,\r\n        name: \"Nicholas Runolfsdottir V\",\r\n        username: \"Maxime_Nienow\",\r\n        email: \"Sherwood@rosamond.me\",\r\n        website: \"jacynthe.com\",\r\n      },\r\n      {\r\n        id: 9,\r\n        name: \"Glenna Reichert\",\r\n        username: \"Delphine\",\r\n        email: \"Chaim_McDermott@dana.io\",\r\n        website: \"conrad.com\",\r\n      },\r\n      {\r\n        id: 10,\r\n        name: \"Clementina DuBuque\",\r\n        username: \"Moriah.Stanton\",\r\n        email: \"Rey.Padberg@karina.biz\",\r\n        website: \"ambrose.net\",\r\n      },\r\n    ],\r\n    filteredData: [],\r\n    dataToExport: [],\r\n    value: \"\",\r\n    modal: false,\r\n    fileName: \"\",\r\n    fileFormat: \"xlsx\",\r\n    selectedRows: [],\r\n    selectAll: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    let data = this.state.data;\r\n    let filteredData = [];\r\n    let value = e.target.value;\r\n    this.setState({ value });\r\n    if (value.length) {\r\n      filteredData = data.filter((col) => {\r\n        let startsWithCondition =\r\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase());\r\n\r\n        let includesCondition =\r\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.id.toString().toLowerCase().includes(value.toLowerCase());\r\n\r\n        if (startsWithCondition) return startsWithCondition;\r\n        else if (!startsWithCondition && includesCondition)\r\n          return includesCondition;\r\n        else return null;\r\n      });\r\n      this.setState({ value, filteredData });\r\n    }\r\n  };\r\n\r\n  handleExport = () => {\r\n    this.toggleModal();\r\n    let dataToExport = this.state.dataToExport;\r\n    this.state.data.map((item) => {\r\n      if (this.state.selectedRows.includes(item.id)) {\r\n        return dataToExport.push(item);\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    this.setState({ dataToExport });\r\n    let fileName =\r\n      this.state.fileName.length && this.state.fileFormat.length\r\n        ? `${this.state.fileName}.${this.state.fileFormat}`\r\n        : \"excel-sheet.xlsx\";\r\n    let wb = XLSX.utils.json_to_sheet(dataToExport);\r\n    let wbout = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wbout, wb, \"test\");\r\n    XLSX.writeFile(wbout, fileName);\r\n  };\r\n\r\n  handleSelect = (id) => {\r\n    let selectedRows = this.state.selectedRows;\r\n    if (!selectedRows.includes(id)) {\r\n      selectedRows.push(id);\r\n    } else if (selectedRows.includes(id)) {\r\n      selectedRows.splice(selectedRows.indexOf(id), 1);\r\n    } else {\r\n      return null;\r\n    }\r\n    this.setState({ selectedRows });\r\n  };\r\n\r\n  handleSelectAll = () => {\r\n    let selectedRows = this.state.selectedRows;\r\n    let data = this.state.data;\r\n    if (selectedRows.length < data.length) {\r\n      let ids = data.map((i) => i.id);\r\n      selectedRows = ids;\r\n    } else if (selectedRows.length === data.length) {\r\n      selectedRows = [];\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    this.setState({ selectedRows });\r\n  };\r\n\r\n  render() {\r\n    let array = this.state.value ? this.state.filteredData : this.state.data;\r\n    let renderTableData = array.map((col) => {\r\n      return (\r\n        <tr\r\n          key={col.id}\r\n          className={classnames({\r\n            selected: this.state.selectedRows.includes(col.id),\r\n          })}\r\n        >\r\n          <td>\r\n            <Checkbox\r\n              size=\"sm\"\r\n              color=\"primary\"\r\n              icon={<Check className=\"vx-icon\" size={12} />}\r\n              label=\"\"\r\n              checked={this.state.selectedRows.includes(col.id)}\r\n              onChange={() => this.handleSelect(col.id)}\r\n            />\r\n          </td>\r\n          <td>{col.email}</td>\r\n          <td>{col.name}</td>\r\n          <td>{col.website}</td>\r\n          <td>{col.id}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    let IconTag =\r\n      this.state.selectedRows.length !== this.state.data.length &&\r\n      this.state.selectedRows.length\r\n        ? Minus\r\n        : Check;\r\n    return (\r\n      <React.Fragment>\r\n        <ExtensionsHeader\r\n          title=\"XLSX\"\r\n          subTitle=\"Xlsx is a parser and writer for various spreadsheet formats\"\r\n          link=\"https://github.com/AdeleD/react-paginate\"\r\n        />\r\n        <Row className=\"export-component\">\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm=\"12\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between\">\r\n                      <Button.Ripple color=\"primary\" onClick={this.toggleModal}>\r\n                        Export Selected\r\n                      </Button.Ripple>\r\n                      <div className=\"filter position-relative has-icon-left\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          value={this.state.value}\r\n                          onChange={(e) => this.handleFilter(e)}\r\n                        />\r\n                        <div className=\"form-control-position\">\r\n                          <Search size={15} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col sm=\"12\">\r\n                    <Table className=\"table-hover-animation mt-2\" responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>\r\n                            <Checkbox\r\n                              size=\"sm\"\r\n                              color=\"primary\"\r\n                              icon={<IconTag className=\"vx-icon\" size={12} />}\r\n                              checked={this.state.selectedRows.length}\r\n                              onChange={(e) => this.handleSelectAll()}\r\n                            />\r\n                          </th>\r\n                          <th>Email</th>\r\n                          <th>Name</th>\r\n                          <th>Website</th>\r\n                          <th>Rank</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>{renderTableData}</tbody>\r\n                    </Table>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggleModal}\r\n          className=\"modal-dialog-centered\"\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>Export To Excel</ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                value={this.state.fileName}\r\n                onChange={(e) => this.setState({ fileName: e.target.value })}\r\n                placeholder=\"Enter File Name\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <CustomInput\r\n                type=\"select\"\r\n                id=\"selectFileFormat\"\r\n                name=\"customSelect\"\r\n                value={this.state.fileFormat}\r\n                onChange={(e) => this.setState({ fileFormat: e.target.value })}\r\n              >\r\n                <option>xlsx</option>\r\n                <option></option>\r\n                <option>txt</option>\r\n              </CustomInput>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.handleExport}>\r\n              Export\r\n            </Button>\r\n            <Button color=\"flat-danger\" onClick={this.toggleModal}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Export;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}