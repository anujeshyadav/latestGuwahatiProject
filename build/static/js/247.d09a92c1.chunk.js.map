{"version":3,"sources":["extensions/extensionsHeader.js","../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js","extensions/pagination/BasicPagination.js","extensions/pagination/SepratedPagination.js","extensions/pagination/PaginationIconText.js","extensions/pagination/PaginationIcon.js","extensions/pagination/PaginationSuccess.js","extensions/pagination/PaginationDanger.js","extensions/pagination/PaginationInfo.js","extensions/pagination/PaginationWarning.js","extensions/pagination/PaginationPositions.js","extensions/pagination/PaginationSizes.js","extensions/pagination/Pagination.js"],"names":["ExtensionsHeader","className","sm","data-tour","this","props","title","link","href","target","rel","subTitle","React","Component","PaginationBoxView","_classCallCheck","_this","handlePreviousPage","evt","selected","state","preventDefault","returnValue","handlePageSelected","handleNextPage","pageCount","setState","callCallback","handleBreakClick","index","getForwardJump","getBackwardJump","selectedItem","onPageChange","pagination","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","length","_react2","_BreakView2","key","onClick","bind","initialSelected","initialPage","forcePage","disableInitialCallback","extraAriaContext","console","warn","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","_PageView2","ariaLabel","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","tabIndex","role","onKeyPress","aria-disabled","propTypes","PropTypes","number","isRequired","node","oneOfType","string","func","bool","defaultProps","PageView","ariaCurrent","aria-label","aria-current","BreakView","BasicPagination","Card","CardHeader","CardTitle","CardBody","SepratedPagination","size","Previous","Fragment","Next","IconTextPagination","IconPagination","PaginationSuccess","PaginationDanger","PaginationInfo","PaginationWarning","PaginationPositions","Row","Col","xl","md","PaginationSizes","lg","ReactPaginate","PaginationIconText","PaginationIcon"],"mappings":"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","file":"static/js/247.d09a92c1.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import { Star } from \"react-feather\"\r\n\r\nclass ExtensionsHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"mb-2\">\r\n        <Col sm=\"12\" className=\"ml-50\">\r\n          <p\r\n            className=\"font-medium-5 mt-1 extension-title\"\r\n            data-tour=\"extension-title\"\r\n          >\r\n            {this.props.title}\r\n          </p>\r\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {this.props.subTitle}\r\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default ExtensionsHeader\r\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nclass BasicPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Basic</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.basic-pagination</code> to create a\r\n            basic pagination.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={\"previous\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination basic-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default BasicPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\nclass SepratedPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Seprated</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.separated-pagination</code> to\r\n            create a separated pagination.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size=\"15\" />}\r\n            nextLabel={<ChevronRight size=\"15\" />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination separated-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SepratedPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronsLeft, ChevronsRight } from \"react-feather\"\r\n\r\nconst Previous = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <ChevronsLeft size={15} /> {\"\"}\r\n      <span className=\"align-middle d-none d-md-inline-block\">Prev</span>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst Next = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <span className=\"align-middle d-none d-md-inline-block\">Next </span>\r\n      <ChevronsRight size={15} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nclass IconTextPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>With icon and text</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.icon-text-pagination</code> to\r\n            create a pagination with icon and text.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<Previous />}\r\n            nextLabel={<Next />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-text-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default IconTextPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass IconPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Icon Only</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.icon-pagination</code> to create a\r\n            pagination with only icon.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default IconPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationSuccess extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Success</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-success</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-success pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationSuccess\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationDanger extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Danger</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-danger</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-danger pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationDanger\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationInfo extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Info</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-info</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-info pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationInfo\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationWarning extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Warning</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-warning</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-warning pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationWarning\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationPositions extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Positions</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes{\" \"}\r\n            <code>.vx-pagination.pagination-[start|center|end]</code> to\r\n            position your pagination.\r\n          </p>\r\n          <Row>\r\n            <Col xl=\"4\" md=\"12\">\r\n              <h5 className=\"text-left\">Left Aligned</h5>\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-start mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col xl=\"4\" md=\"12\">\r\n              <h5 className=\"text-center\">Center Aligned</h5>\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-center mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col xl=\"4\" md=\"12\">\r\n              <h5 className=\"text-right\">Right Aligned</h5>\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-end mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationPositions\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationSizes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Sizes</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-[lg|sm]</code> to change\r\n            size of your pagination.\r\n          </p>\r\n          <Row>\r\n            <Col lg=\"4\" sm=\"12\">\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-lg mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col lg=\"4\" sm=\"12\">\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\"vx-pagination icon-pagination mt-2\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col lg=\"4\" sm=\"12\">\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-sm mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationSizes\r\n","import React from \"react\"\r\nimport ExtensionsHeader from \"../extensionsHeader\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport BasicPagination from \"./BasicPagination\"\r\nimport SepratedPagination from \"./SepratedPagination\"\r\nimport PaginationIconText from \"./PaginationIconText\"\r\nimport PaginationIcon from \"./PaginationIcon\"\r\nimport PaginationSuccess from \"./PaginationSuccess\"\r\nimport PaginationDanger from \"./PaginationDanger\"\r\nimport PaginationInfo from \"./PaginationInfo\"\r\nimport PaginationWarning from \"./PaginationWarning\"\r\nimport PaginationPositions from \"./PaginationPositions\"\r\nimport PaginationSizes from \"./PaginationSizes\"\r\n\r\nimport \"../../assets/scss/plugins/extensions/react-paginate.scss\"\r\nclass ReactPaginate extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ExtensionsHeader\r\n          title=\"React Paginate\"\r\n          subTitle=\"A ReactJS component that creates a pagination\"\r\n          link=\"https://github.com/AdeleD/react-paginate\"\r\n        />\r\n\r\n        <Row>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <BasicPagination />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <SepratedPagination />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationIconText />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationIcon />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationSuccess />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationDanger />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationInfo />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationWarning />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <PaginationPositions />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <PaginationSizes />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReactPaginate\r\n"],"sourceRoot":""}