{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","redux/actions/todo/index.js","views/apps/todo/TodoSidebar.js","views/apps/todo/TodoList.js","views/apps/todo/TaskSidebar.js","views/apps/todo/Todo.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","_this","call","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","sidebarClassName","ref","sidebarId","overlayClassName","overlayId","contentClassName","contentId","children","defaultProps","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule","getTodos","routeParams","dispatch","axios","get","params","then","result","todos","data","catch","err","console","log","completeTask","todo","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","TodoSidebar","Fragment","mainSidebar","Button","Ripple","block","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","routerProps","location","pathname","connect","history","TodoList","handleUpdateTask","currentLocation","handleOnChange","e","searchTask","match","app","routerFilter","todosArr","filteredTodos","renderTodos","map","stopPropagation","title","tags","tag","trashTask","desc","FormGroup","Input","placeholder","routeParam","todoApp","getState","post","response","val","TaskSidebar","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","updateLabel","rows","updateTask","addNewTask","outline","task","mql","matchMedia","TODO","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","mediaQueryChanged","handleAddTask","status","undefined","handleUndoChanges","arr","addListener","removeListener","Consumer","context","direction","_excluded","propTypes","PropTypes","row","bool","check","inline","tagPropType","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends"],"mappings":"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","file":"static/js/249.2d12a46f.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty.js\");\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import axios from \"axios\"\r\nimport { history } from \"../../../history\"\r\n\r\nexport const getTodos = routeParams => {\r\n  return async dispatch => {\r\n    await axios\r\n      .get(\"api/apps/todo\", {\r\n        params: routeParams\r\n      })\r\n      .then(result => {\r\n        dispatch({\r\n          type: \"GET_TODOS\",\r\n          todos: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = todo => {\r\n  return dispatch => {\r\n    dispatch({ type: \"COMPLETE_TASK\", id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = todo => {\r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"STAR_TASK\", id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = todo => {\r\n  \r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"IMPORTANT_TASK\", id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = id => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post(\"/api/app/todo/trash-todo\", id)\r\n      .then(response => dispatch({ type: \"TRASH_TASK\", id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = todo => {\r\n  const request = axios.post(\"/api/apps/todo/update-todo\", todo)\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then(response => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: \"UPDATE_TODO\",\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (id, title, desc) => {\r\n  return dispatch => {\r\n    dispatch({ type: \"UPDATE_TASK\", id, title, desc })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: \"UPDATE_LABEL\", label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = task => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios.post(\"/api/apps/todo/new-task\", { task }).then(response => {\r\n      dispatch({ type: \"ADD_TASK\", task })\r\n      dispatch(getTodos(params))\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchTask = val => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_TASK\",\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = filter => {\r\n  return dispatch => {\r\n    dispatch({ type: \"CHANGE_FILTER\", filter })\r\n    history.push(`/todo/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Button, ListGroup, ListGroupItem } from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { X, Layers, Star, Info, Check, Trash } from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeFilter } from \"../../../redux/actions/todo/index\"\r\nclass TodoSidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block my-1\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.props.addTask(\"open\")\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Task\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"all\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/all\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"starred\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/starred\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Starred</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"important\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/important\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Info size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"completed\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/completed\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"trashed\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/trashed\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"frontend\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/frontend\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Frontend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"backend\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/backend\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Backend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"doc\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/doc\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Doc</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"bug\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/bug\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">Bug</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(TodoSidebar)\r\n","import React from \"react\"\r\nimport { FormGroup, Input } from \"reactstrap\"\r\nimport { Menu, Search, Check, Info, Star, Trash } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from \"../../../redux/actions/todo/index\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nclass TodoList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props.routerProps.location.pathname,\r\n    value: \"\"\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getTodos(this.props.routerProps.match.params)\r\n    this.setState({\r\n      todos: this.props.app.todo.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          return (\r\n            <li\r\n              className={`todo-item ${todo.isCompleted ? \"completed\" : \"\"}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                <div className=\"todo-title-area d-flex align-items-center\">\r\n                  <div className=\"title-wrapper d-flex\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={\"\"}\r\n                      checked={todo.isCompleted}\r\n                      size=\"sm\"\r\n                      onClick={e => {\r\n                        e.stopPropagation()\r\n                        this.props.completeTask(todo)\r\n                      }}\r\n                      onChange={e => e.stopPropagation()}\r\n                    />\r\n                    <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                  </div>\r\n                  {todo.tags.length > 0 ? (\r\n                    <div className=\"chip-wrapper\">\r\n                      {todo.tags.map((tag, i) => (\r\n                        <div className=\"chip mb-0\" key={i}>\r\n                          <div className=\"chip-body\">\r\n                            <span className=\"chip-text\">\r\n                              <span\r\n                                className={`bullet bullet-${\r\n                                  tag === \"backend\"\r\n                                    ? \"warning\"\r\n                                    : tag === \"doc\"\r\n                                    ? \"success\"\r\n                                    : tag === \"bug\"\r\n                                    ? \"danger\"\r\n                                    : \"primary\"\r\n                                } bullet-xs`}\r\n                              />\r\n                              <span className=\"text-capitalize ml-25\">\r\n                                {tag}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div\r\n                  className={`todo-item-action d-flex ${\r\n                    routerFilter === \"trashed\" ? \"justify-content-end\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`todo-item-info d-inline-block ${\r\n                      routerFilter === \"trashed\" ? \"mr-1\" : \"mr-1 mr-sm-0\"\r\n                    }`}\r\n                    onClick={e => {\r\n                      e.stopPropagation()\r\n                      this.props.importantTask(todo)\r\n                    }}\r\n                  >\r\n                    <Info\r\n                      size={17}\r\n                      className={`${todo.isImportant ? \"text-success\" : \"\"}`}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                    onClick={e => {\r\n                      e.stopPropagation()\r\n                      this.props.starTask(todo)\r\n                    }}\r\n                  >\r\n                    <Star\r\n                      size={17}\r\n                      className={`${todo.isStarred ? \"text-warning\" : \"\"}`}\r\n                    />\r\n                  </div>\r\n                  {routerFilter !== \"trashed\" ? (\r\n                    <div\r\n                      className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={e => {\r\n                        e.stopPropagation()\r\n                        this.props.trashTask(todo.id)\r\n                      }}\r\n                    >\r\n                      <Trash size={17} />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              {todo.desc.length > 0 ? (\r\n                <p className=\"todo-desc truncate mb-0\">{todo.desc}</p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={e => this.handleOnChange(e)}\r\n                    value={value}\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Search size={15} />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(TodoList)\r\n","import React from \"react\"\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from \"reactstrap\"\r\nimport { X, Info, Star, Tag, Check } from \"react-feather\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from \"../../../redux/actions/todo/index\"\r\nclass TaskSidebar extends React.Component {\r\n\r\n  // static getDerivedStateFromProps (props, state){\r\n  //   if (\r\n  //    ( props.taskToUpdate !== null &&\r\n  //     props.taskToUpdate.title !== state.taskTitle) ||\r\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\r\n  //   ) {\r\n  //     let todosArr = props.app.todo.todos\r\n  //     let receivedTask =\r\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\r\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\r\n  //     let taskToUpdate, taskTitle, taskDesc\r\n  //     filteredTask.map(task => {\r\n  //       return (\r\n  //         (taskToUpdate = task),\r\n  //         (taskTitle = task.title),\r\n  //         (taskDesc = task.desc)\r\n  //       )\r\n  //     })\r\n  //     return {\r\n  //       taskToUpdate,\r\n  //       taskTitle,\r\n  //       taskDesc\r\n  //     }\r\n  //   }\r\n  //   return null\r\n  // }\r\n\r\n  state = {\r\n    taskToUpdate: null,\r\n    taskTitle: \"\",\r\n    taskDesc: \"\",\r\n    taskStatus : false,\r\n    taskStarred : false,\r\n    taskImportant  : false,\r\n    newTask: {\r\n      title: \"\",\r\n      desc: \"\",\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(\r\n      (this.props.taskToUpdate !== null && this.state.taskToUpdate !== this.props.taskToUpdate) || \r\n      (this.props.taskToUpdate !== null && this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null && this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null && this.state.taskImportant !== this.props.taskToUpdate.isImportant) \r\n      ){\r\n      this.setState({ \r\n        taskToUpdate : this.props.taskToUpdate, \r\n        taskTitle :  this.props.taskToUpdate.title,\r\n        taskDesc :  this.props.taskToUpdate.desc,\r\n        taskStatus : this.props.taskToUpdate.isCompleted,\r\n        taskStarred : this.props.taskToUpdate.isStarred,\r\n        taskImportant : this.props.taskToUpdate.isImportant\r\n      })\r\n    }\r\n    else{\r\n      return \r\n    }\r\n  }\r\n  \r\n\r\n\r\n  handleNewTaskTags = tag => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = taskArr => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === \"backend\"\r\n                  ? \"warning\"\r\n                  : tag === \"doc\"\r\n                  ? \"success\"\r\n                  : tag === \"bug\"\r\n                  ? \"danger\"\r\n                  : \"primary\"\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } = this.state\r\n\r\n    return (\r\n      <div\r\n        className={`task-sidebar ${\r\n          this.props.addTaskState === true ? \"show\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? \"Update Task\"\r\n                  : \"Add Task\"}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => this.props.addTask(\"close\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && <Checkbox\r\n                  color=\"primary\"\r\n                  className=\"user-checkbox\"\r\n                  icon={<Check className=\"vx-icon\" size={15} />}\r\n                  label={\"\"}\r\n                  checked={ taskStatus }                  \r\n                  onChange={e =>  {\r\n                    this.props.completeTask(this.props.taskToUpdate)\r\n                  }}\r\n                />}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Info\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                      (this.props.taskToUpdate !== null && this.state.taskImportant) ||\r\n                      newTask.isImportant \r\n                      ? \"text-success\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null){\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    }\r\n                    else{\r\n                      this.setState({\r\n                        newTask : {\r\n                          ...this.state.newTask,\r\n                          isImportant : !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                      \r\n                  }}\r\n                />\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                      (this.props.taskToUpdate !== null  && this.state.taskStarred) ||\r\n                      newTask.isStarred \r\n                      ? \"text-warning\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null){\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    }\r\n                    else{\r\n                      this.setState({\r\n                        newTask : {\r\n                          ...this.state.newTask,\r\n                          isStarred : !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                    \r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Frontend\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"frontend\") )||\r\n                            (newTask.tags.includes(\"frontend\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"frontend\")\r\n                          else this.handleNewTaskTags(\"frontend\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Backend\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"backend\"))||\r\n                            (newTask.tags.includes(\"backend\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"backend\")\r\n                            else this.handleNewTaskTags(\"backend\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Doc\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"doc\"))||\r\n                            (newTask.tags.includes(\"doc\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"doc\")\r\n                          else this.handleNewTaskTags(\"doc\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Bug\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"bug\"))||\r\n                            (newTask.tags.includes(\"bug\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"bug\")\r\n                          else this.handleNewTaskTags(\"bug\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={e => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle : e.target.value\r\n                    })\r\n                  }else{\r\n                    this.setState({ newTask : {\r\n                      ...this.state.newTask,\r\n                      title : e.target.value\r\n                    } })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={e => {\r\n                  if (this.props.taskToUpdate !== null){\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  }\r\n                  else{\r\n                    this.setState({ newTask : {\r\n                      ...this.state.newTask,\r\n                      desc : e.target.value\r\n                    } })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n\r\n            <hr className=\"my-2\" />\r\n            <div className=\"d-flex justify-content-end\">\r\n              <Button.Ripple\r\n                className=\"mr-50\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.props.updateTask(taskToUpdate.id, taskTitle, taskDesc)\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask(\"close\")\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: \"\",\r\n                      desc: \"\",\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? \"Update\"\r\n                  : \"Add\"}\r\n              </Button.Ripple>\r\n              <Button.Ripple\r\n                color=\"light\"\r\n                outline\r\n                onClick={() => {\r\n                  this.props.addTask(\"close\")\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: \"\",\r\n                      desc: \"\",\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>\r\n            </div> \r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from \"react\"\r\nimport Sidebar from \"react-sidebar\"\r\nimport { ContextLayout } from \"../../../utility/context/Layout\"\r\nimport TodoSidebar from \"./TodoSidebar\"\r\nimport TodoList from \"./TodoList\"\r\nimport TaskSidebar from \"./TaskSidebar\"\r\nimport \"../../../assets/scss/pages/app-todo.scss\"\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass TODO extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = status => {\r\n    status === \"open\"\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = todo => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = arr => {\r\n    this.setState({\r\n      prevState: arr\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-application position-relative\">\r\n        <div\r\n          className={`app-content-overlay ${\r\n            this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\r\n          }`}\r\n          onClick={() => {\r\n            this.handleAddTask(\"close\")\r\n            this.onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {context => (\r\n            <Sidebar\r\n              sidebar={\r\n                <TodoSidebar\r\n                  routerProps={this.props}\r\n                  addTask={this.handleAddTask}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n              touch={false}\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}>\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <TodoList\r\n          routerProps={this.props}\r\n          handleUpdateTask={this.handleUpdateTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          prevState={this.state.prevState}\r\n        />\r\n        <TaskSidebar\r\n          addTask={this.handleAddTask}\r\n          addTaskState={this.state.addTask}\r\n          taskToUpdate={this.state.taskToUpdate}\r\n          newTask={this.state.newTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          handleUndoChanges={this.handleUndoChanges}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TODO\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}