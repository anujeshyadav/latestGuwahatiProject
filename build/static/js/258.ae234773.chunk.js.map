{"version":3,"sources":["views/forms/form-elements/datepicker/Timepicker.js","views/forms/form-elements/datepicker/Datepickers.js","views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/accounts/EditPromotionalActivity.js"],"names":["Timepickers","state","basic","Date","timeLimit","preloaded","this","className","md","sm","value","options","enableTime","noCalendar","dateFormat","onChange","date","setState","minTime","maxTime","defaultDate","React","Component","Datepickers","basicPicker","dateTimePicker","humanFriendly","minMax","disabledRange","multipleDates","rangePicker","weekNum","inlinePicker","Card","CardHeader","CardTitle","CardBody","Row","Col","minDate","altInput","altFormat","data-enable-time","maxDate","fp_incr","disable","from","to","mode","preloadRange","weekNumbers","inline","Pickers","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Timepicker","i","GrandTotal","SelectedITems","CreatePromotionalActivity","args","useState","setIndex","DiscountType","setDiscountType","startdate","setStartDate","FreeNumberofProduct","setFreeNumberofProduct","Enddate","setEnddate","FreeSelectedProduct","setFreeSelectedProduct","AddAnotherProduct","setAddAnotherProduct","NumberofProduct","setNumberofProduct","error","Status","setStatus","Promocode","setPromocode","ProductList","setProductList","Salesperson","setSalesperson","grandTotalAmt","setGrandTotalAmt","TotalAmount","setTotalAmount","Discountpercent","setDiscountpercentage","Discount","setDiscount","setUserInfo","modal","setModal","toggle","location","useLocation","useEffect","key","data","totalAmount","localStorage","setItem","JSON","stringify","product","productId","availableQty","qty","price","totalprice","Salespersonname","targetstartDate","targetEndDate","discount","Shipping","tax","grandTotal","setProduct","handleProductChangeProduct","e","index","target","name","list","handleRemoveSelected","selectedList","selectedItem","splice","amt","map","ele","console","log","Product_MRP","indextotal","reduce","a","b","handleSelection","push","prevProductList","updatedProductList","updatedProduct","_id","userdata","parse","getItem","ProductListView","database","then","res","Product","catch","err","userInfo","addMoreProduct","removeMoreProduct","newFormValues","handleSubmitPromocode","preventDefault","pageparmission","mypromot","promoCodeWise","promoCode","promoAmount","startDate","endDate","status","created_by","SavePromotionsActivity","swal","submitHandler","payload","percentageWise","percentageDiscount","amountWise","percentageAmount","productWise","productQty","discountAmount","discountPercentage","freeSameProductQty","myproduct","freeProductQty","freeOtherProducts","Allproduct","qtyAssign","totalPrice","salesPersonId","products","render","history","style","cursor","color","onClick","goBack","lg","onSubmit","checked","marginRight","type","placeholder","required","onWheel","length","selectionLimit","isObject","onSelect","onRemove","removedItem","displayValue","Ripple","isOpen","toUpperCase"],"mappings":"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","file":"static/js/258.ae234773.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Timepickers extends React.Component{\r\n  state ={\r\n    basic : new Date(),\r\n    timeLimit : new Date(),\r\n    preloaded : new Date()\r\n  }\r\n\r\n  render(){\r\n    let { basic, timeLimit } = this.state\r\n    return(\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Timepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic 24hrs</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basic}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ basic : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Limit</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={timeLimit}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  minTime: \"16:00\",\r\n                  maxTime: \"22:30\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ timeLimit : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  defaultDate: \"13:45\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ preloaded : date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timepickers","import React from \"react\";\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\n\r\nclass Datepickers extends React.Component {\r\n  state = {\r\n    basicPicker: new Date(),\r\n    dateTimePicker: new Date(),\r\n    humanFriendly: new Date(),\r\n    minMax: new Date(),\r\n    disabledRange: new Date(),\r\n    multipleDates: new Date(),\r\n    rangePicker: new Date(),\r\n    weekNum: new Date(),\r\n    inlinePicker: new Date(),\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basicPicker,\r\n      dateTimePicker,\r\n      humanFriendly,\r\n      minMax,\r\n      disabledRange,\r\n      multipleDates,\r\n      rangePicker,\r\n      weekNum,\r\n      inlinePicker,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Datepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basicPicker}\r\n                onChange={(date) => {\r\n                  this.setState({ basicPicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Date & Time</h5>\r\n              <Flatpickr\r\n                options={{\r\n                  minDate: \"today\",\r\n                  altInput: true,\r\n                  // altFormat: \"j-m-Y H:i:S\",\r\n                  altFormat: \"m-j-Y H:i:S\",\r\n                }}\r\n                className=\"form-control\"\r\n                data-enable-time\r\n                value={dateTimePicker}\r\n                onChange={(date) => {\r\n                  this.setState({ dateTimePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Human Friendly</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={humanFriendly}\r\n                options={{\r\n                  altInput: true,\r\n                  altFormat: \"F j, Y\",\r\n                  dateFormat: \"Y-m-d\",\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ humanFriendly: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Min & Max Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={minMax}\r\n                options={{ minDate: \"today\", maxDate: new Date().fp_incr(14) }}\r\n                onChange={(date) => {\r\n                  this.setState({ minMax: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Disabled Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={disabledRange}\r\n                options={{\r\n                  dateFormat: \"Y-m-d\",\r\n                  disable: [\r\n                    {\r\n                      from: \"2020-02-01\",\r\n                      to: \"2020-02-10\",\r\n                    },\r\n                    {\r\n                      from: \"2020-02-20\",\r\n                      to: \"2020-02-25\",\r\n                    },\r\n                  ],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ disabledRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Multiple Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={multipleDates}\r\n                options={{ mode: \"multiple\" }}\r\n                onChange={(date) => {\r\n                  this.setState({ multipleDates: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  mode: \"range\",\r\n                  defaultDate: [\"2020-02-01\", \"2020-02-15\"],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ preloadRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-md-0 mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Week Numbers</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={weekNum}\r\n                options={{ weekNumbers: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ weekNum: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Inline</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={inlinePicker}\r\n                options={{ inline: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ inlinePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datepickers;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Datepickers from \"./Datepickers\";\r\nimport Timepickers from \"./Timepicker\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\nclass Pickers extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Date & Time Picker\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Date & Time Picker\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Datepickers />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Timepickers />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Pickers;\r\n// import { useState, useRef } from \"react\";\r\n// import Tesseract from \"tesseract.js\";\r\n\r\n// function anuj() {\r\n//   const [imagePath, setImagePath] = useState(\"\");\r\n//   const [text, setText] = useState(\"aa\");\r\n\r\n//   const handleChange = (event) => {\r\n//     setImage(URL.createObjectURL(event.target.files[0]));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <main className=\"App-main\">\r\n//         <h3>Actual image uploaded</h3>\r\n//         {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n//         <h3>Extracted text</h3>\r\n//         <div className=\"text-box\">\r\n//           <p> {text} </p>\r\n//         </div>\r\n//         <input type=\"file\" onChange={handleChange} />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default anuj;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill, BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  CreatePartyList,\r\n  SavePromotionsActivity,\r\n  CreateCustomerList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport Timepickers from \"../../../forms/form-elements/datepicker/Timepicker\";\r\nimport Pickers from \"../../../forms/form-elements/datepicker/Pickers\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst CreatePromotionalActivity = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [Index, setIndex] = useState(\"\");\r\n  // const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [DiscountType, setDiscountType] = useState(\"\");\r\n  const [startdate, setStartDate] = useState(\"\");\r\n  const [FreeNumberofProduct, setFreeNumberofProduct] = useState(\"\");\r\n  const [Enddate, setEnddate] = useState(\"\");\r\n  const [addonproductQty, setaddonproductQty] = useState(\"\");\r\n  const [FreeSelectedProduct, setFreeSelectedProduct] = useState(false);\r\n  const [AddAnotherProduct, setAddAnotherProduct] = useState(false);\r\n  const [NumberofProduct, setNumberofProduct] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Promocode, setPromocode] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [TotalAmount, setTotalAmount] = useState(\"\");\r\n  const [Discountpercent, setDiscountpercentage] = useState(\"\");\r\n  const [Discount, setDiscount] = useState(\"\");\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [items, setItems] = useState(\"\");\r\n  const [audit, setAudit] = useState(false);\r\n\r\n  let location = useLocation();\r\n\r\n  const audittoggle = () => {\r\n    setAudit(!audit);\r\n    // setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    if (location?.state.key == \"percentageWise\") {\r\n      setDiscountType(\"Percentage Wise\");\r\n      setFreeSelectedProduct(false);\r\n      setAddAnotherProduct(false);\r\n      setTotalAmount(location?.state?.data?.totalAmount);\r\n    } else if (location?.state.key == \"amountWise\") {\r\n      setDiscountType(\"Amount Wise\");\r\n      setFreeSelectedProduct(false);\r\n      setAddAnotherProduct(false);\r\n    } else if (location?.state.key == \"productWise\") {\r\n      setDiscountType(\"Product Wise\");\r\n    } else {\r\n      toggle();\r\n    }\r\n    localStorage.setItem(\"Promotionedit\", JSON.stringify(location?.state));\r\n  }, []);\r\n\r\n  const handleHistory = () => {\r\n    audittoggle();\r\n  };\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\", //\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1, //\r\n      price: \"\", //\r\n      totalprice: \"\", //\r\n      Salespersonname: \"\",\r\n      targetstartDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    let amt = 0;\r\n\r\n    setProduct(list);\r\n  };\r\n\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      // updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    product.map((value) => console.log(value.totalprice));\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // handleInputChange;\r\n  useEffect(() => {\r\n    console.log(product);\r\n    console.log(GrandTotal);\r\n    // console.log(Salesperson);\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    // Create_Sales_personList()\r\n    //   .then((res) => {\r\n    //     console.log(res?.SalesPerson);\r\n    //     setSalesPersonList(res?.SalesPerson);\r\n    //   })\r\n    //   .catch((err) => console.log(err));\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        console.log(res?.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // CreateCustomerList(userdata?._id, userdata?.database)\r\n    //   .then((res) => {\r\n    //     let value = res?.Customer;\r\n    //     if (value?.length) {\r\n    //       setPartyList(value);\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n    // CreateOrder_ID()\r\n    //   .then((res) => {\r\n    //     const lastElement = res?.Order[res?.Order?.length - 1].id;\r\n    //     const prefix = lastElement?.substring(0, 5);\r\n    //     const number = parseInt(lastElement?.match(/\\d+$/)[0], 10) + 1;\r\n    //     const concatenatedString = prefix + number;\r\n    //     setOrderID(concatenatedString);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    // CreateOrder_ViewData()\r\n    //   .then((res) => {\r\n    //     const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n    //     setCreatAccountView(JSON.parse(jsonData));\r\n    //     setStatusDropDown(\r\n    //       JSON.parse(jsonData)?.createOrder.CurrentStatus?.MyDropDown?.dropdown\r\n    //     );\r\n    //     setdropdownValue(JSON.parse(jsonData));\r\n    //     setPartDetails(JSON.parse(jsonData)?.createOrder.PartDetails);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1, //\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Salespersonname: \"\",\r\n        targetstartDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    // GrandTotal.splice(i, 1);\r\n    // let amt = GrandTotal.reduce((a, b) => a + b);\r\n    // setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const handleSubmitPromocode = async (e) => {\r\n    e.preventDefault();\r\n    // SavePromotionsActivity()\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let promo = [\r\n      {\r\n        promoCode: Promocode,\r\n        promoAmount: Discount,\r\n        startDate: startdate,\r\n        endDate: Enddate,\r\n        status: Status,\r\n      },\r\n    ];\r\n    let mypromot = {\r\n      promoCodeWise: promo,\r\n      created_by: pageparmission?._id,\r\n      status: Status,\r\n    };\r\n    await SavePromotionsActivity(mypromot)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"success\", \"Promotion Code Submitted Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Error\", \"Something went wrong\");\r\n      });\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    // SavePromotionsActivity();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    if (DiscountType == \"Percentage Wise\") {\r\n      let percentage = [\r\n        {\r\n          totalAmount: TotalAmount,\r\n          percentageDiscount: Discountpercent,\r\n          startDate: startdate,\r\n          endDate: Enddate,\r\n          status: Status,\r\n        },\r\n      ];\r\n      let payload = {\r\n        percentageWise: percentage,\r\n        created_by: pageparmission?._id,\r\n\r\n        status: Status,\r\n      };\r\n      await SavePromotionsActivity(payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"success\", \"Promotion Code Submitted Successfully\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Error\", \"Something went wrong\");\r\n        });\r\n    } else if (DiscountType == \"Amount Wise\") {\r\n      let amount = [\r\n        {\r\n          totalAmount: TotalAmount,\r\n          percentageAmount: Discount,\r\n          startDate: startdate,\r\n          endDate: Enddate,\r\n          status: Status,\r\n        },\r\n      ];\r\n      let payload = {\r\n        amountWise: amount,\r\n        status: Status,\r\n        created_by: pageparmission?._id,\r\n      };\r\n      await SavePromotionsActivity(payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"success\", \"Submitted Successfully\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Error\", \"Something went wrong\");\r\n        });\r\n    } else {\r\n      if (FreeSelectedProduct) {\r\n        let productWise = [\r\n          {\r\n            productId: Salesperson[0]?._id,\r\n            productQty: NumberofProduct,\r\n            discountAmount: Discount,\r\n            discountPercentage: Discountpercent,\r\n            startDate: startdate,\r\n            endDate: Enddate,\r\n            freeSameProductQty: FreeNumberofProduct,\r\n          },\r\n        ];\r\n        let payload = {\r\n          productWise: productWise,\r\n          created_by: pageparmission?._id,\r\n\r\n          status: Status,\r\n        };\r\n        await SavePromotionsActivity(payload)\r\n          .then((res) => {\r\n            console.log(res);\r\n            swal(\"success\", \"Submitted Successfully\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            swal(\"Error\", \"Something went wrong\");\r\n          });\r\n      } else {\r\n        let myproduct = product?.map((ele, i) => {\r\n          return { productId: ele?.productId, freeProductQty: ele?.qty };\r\n        });\r\n        let productWise = [\r\n          {\r\n            productId: Salesperson[0]?._id,\r\n            productQty: NumberofProduct,\r\n            discountAmount: Discount,\r\n            discountPercentage: Discountpercent,\r\n            startDate: startdate,\r\n            endDate: Enddate,\r\n            freeOtherProducts: myproduct,\r\n          },\r\n        ];\r\n        let payload = {\r\n          productWise: productWise,\r\n          created_by: pageparmission?._id,\r\n          status: Status,\r\n        };\r\n\r\n        await SavePromotionsActivity(payload)\r\n          .then((res) => {\r\n            console.log(res);\r\n            swal(\"success\", \"Submitted Successfully\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            swal(\"Error\", \"Something went wrong\");\r\n          });\r\n      }\r\n    }\r\n\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        qtyAssign: ele?.qty,\r\n        price: ele?.price,\r\n        totalPrice: ele?.totalprice,\r\n      };\r\n    });\r\n    let payload = {\r\n      grandTotal: grandTotalAmt,\r\n      salesPersonId: Salesperson[0]?._id,\r\n      products: Allproduct,\r\n    };\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    setSalesperson(selectedList);\r\n    // console.log(index);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let arr = selectedList.map((ele) => ele.id);\r\n    // setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // if (uniqueChars.length === 1) {\r\n    //   let value = uniqueChars[0];\r\n    //   const formdata = new FormData();\r\n    //   formdata.append(\"state_id\", value);\r\n    //   axiosConfig\r\n    //     .post(`/getcity`, formdata)\r\n    //     .then((res) => {\r\n    //       setCityList(res?.data?.cities);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   setCityList([]);\r\n    // }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n\r\n    // setmultiSelect(selectedList);\r\n\r\n    // let arr = selectedList.map((ele) => ele.id);\r\n    // console.log(arr);\r\n    // setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Promotional Activity</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Badge\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.goBack()}>\r\n                      {\" \"}\r\n                      Back\r\n                    </Badge>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col lg=\"1\" md=\"1\" sm=\"12\">\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Badge\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\" mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={toggle}>\r\n                      {\" \"}\r\n                      +Promocode\r\n                    </Badge>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form className=\"p-1\" onSubmit={submitHandler}>\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <div className=\"form-label-group\">\r\n                <input\r\n                  checked={DiscountType && DiscountType == \"Percentage Wise\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"Product Quantity\"\r\n                  value={DiscountType}\r\n                  onChange={(e) => {\r\n                    setDiscountType(\"Percentage Wise\");\r\n                    setFreeSelectedProduct(false);\r\n                    setAddAnotherProduct(false);\r\n                  }}\r\n                />\r\n                <span style={{ marginRight: \"60px\" }}>Percentage Wise</span>\r\n\r\n                <input\r\n                  checked={DiscountType && DiscountType == \"Amount Wise\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"Product Quantity\"\r\n                  value={DiscountType}\r\n                  onChange={(e) => {\r\n                    setDiscountType(\"Amount Wise\");\r\n                    setFreeSelectedProduct(false);\r\n                    setAddAnotherProduct(false);\r\n                  }}\r\n                />\r\n                <span style={{ marginRight: \"60px\" }}>Amount Wise</span>\r\n                <input\r\n                  checked={DiscountType && DiscountType == \"Product Wise\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"Product Quantity\"\r\n                  placeholder=\"Product Quantity\"\r\n                  value={DiscountType}\r\n                  onChange={(e) => setDiscountType(\"Product Wise\")}\r\n                />\r\n                <span style={{ marginRight: \"60px\" }}>Product Wise</span>\r\n              </div>\r\n            </Col>\r\n\r\n            <Row className=\"p-1\">\r\n              {DiscountType && DiscountType == \"Percentage Wise\" ? (\r\n                <>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"Totalamount\"\r\n                        placeholder=\"Total amount\"\r\n                        value={TotalAmount}\r\n                        onChange={(e) => setTotalAmount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount in Percentage</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"DiscountinPercentage\"\r\n                        placeholder=\"Discount in Percentage %\"\r\n                        value={Discountpercent}\r\n                        onChange={(e) => {\r\n                          if (e.target.value.length < 3) {\r\n                            setDiscountpercentage(e.target.value);\r\n                          } else {\r\n                          }\r\n                        }}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </>\r\n              ) : null}\r\n              {DiscountType && DiscountType == \"Amount Wise\" ? (\r\n                <>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"Totalamount\"\r\n                        placeholder=\"Total amount\"\r\n                        value={TotalAmount}\r\n                        onChange={(e) => setTotalAmount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"DiscountinPercentage\"\r\n                        placeholder=\"Discount Amount\"\r\n                        value={Discount}\r\n                        onChange={(e) => setDiscount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </>\r\n              ) : null}\r\n              {DiscountType && DiscountType == \"Product Wise\" ? (\r\n                <>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Choose Product *</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectionLimit={1}\r\n                        // showCheckbox=\"true\"\r\n                        isObject=\"false\"\r\n                        options={ProductList} // Options to display in the dropdown\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={onSelect1} // Function will trigger on select event\r\n                        onRemove={onRemove1} // Function will trigger on remove event\r\n                        displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Product Quantity</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"TotalAmount\"\r\n                        placeholder=\"Product Total Amount\"\r\n                        value={NumberofProduct}\r\n                        onChange={(e) => setNumberofProduct(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount Amount</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"DiscountAmount\"\r\n                        placeholder=\"Discount Amount\"\r\n                        value={Discount}\r\n                        onChange={(e) => setDiscount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label> or Discount %</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"DiscountAmount\"\r\n                        placeholder=\"Discount Percentage %\"\r\n                        value={Discountpercent}\r\n                        onChange={(e) => setDiscountpercentage(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <div className=\"p-1\">\r\n                    <Row>\r\n                      <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"\">\r\n                        <div className=\"form-label-group\">\r\n                          <input\r\n                            style={{ marginRight: \"3px\" }}\r\n                            type=\"radio\"\r\n                            name=\"ProductQuantity1\"\r\n                            placeholder=\"Product Quantity\"\r\n                            onChange={(e) => {\r\n                              setFreeSelectedProduct(true);\r\n                              setAddAnotherProduct(false);\r\n                            }}\r\n                          />\r\n                          <span style={{ marginRight: \"60px\" }}>\r\n                            or Free selected Product Quantity\r\n                          </span>\r\n\r\n                          <input\r\n                            style={{ marginRight: \"3px\" }}\r\n                            type=\"radio\"\r\n                            name=\"ProductQuantity1\"\r\n                            placeholder=\"Product Quantity\"\r\n                            // value={targetStartDate}\r\n                            onChange={(e) => {\r\n                              setFreeSelectedProduct(false);\r\n\r\n                              setAddAnotherProduct(true);\r\n                            }}\r\n                          />\r\n                          <span style={{ marginRight: \"60px\" }}>\r\n                            Want to Add Another Product\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </>\r\n              ) : null}\r\n              <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                <Row>\r\n                  {AddAnotherProduct && (\r\n                    <>\r\n                      {product &&\r\n                        product?.map((product, index) => (\r\n                          <Row className=\"\" key={index}>\r\n                            <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Product Name</Label>\r\n                                <Multiselect\r\n                                  required\r\n                                  selectionLimit={1}\r\n                                  isObject=\"false\"\r\n                                  options={ProductList}\r\n                                  onSelect={(selectedList, selectedItem) =>\r\n                                    handleSelection(\r\n                                      selectedList,\r\n                                      selectedItem,\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                  onRemove={(selectedList, selectedItem) => {\r\n                                    handleRemoveSelected(\r\n                                      selectedList,\r\n                                      selectedItem,\r\n                                      index\r\n                                    );\r\n                                  }}\r\n                                  displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Quantity</Label>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  name=\"qty\"\r\n                                  placeholder=\"Req_Qty\"\r\n                                  value={product?.qty}\r\n                                  onChange={(e) =>\r\n                                    handleProductChangeProduct(e, index)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Price</Label>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  name=\"price\"\r\n                                  readOnly\r\n                                  placeholder=\"Price\"\r\n                                  value={product.price}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Total Price</Label>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  name=\"totalprice\"\r\n                                  readOnly\r\n                                  placeholder=\"TtlPrice\"\r\n                                  value={product.price * product?.qty}\r\n                                />\r\n                              </div>\r\n                            </Col> */}\r\n\r\n                            <Col\r\n                              className=\"d-flex mt-1 abb\"\r\n                              lg=\"3\"\r\n                              md=\"3\"\r\n                              sm=\"12\">\r\n                              <div className=\"btnStyle\">\r\n                                {index ? (\r\n                                  <Button\r\n                                    type=\"button\"\r\n                                    color=\"danger\"\r\n                                    className=\"button remove \"\r\n                                    onClick={() => removeMoreProduct(index)}>\r\n                                    - Remove\r\n                                  </Button>\r\n                                ) : null}\r\n                              </div>\r\n\r\n                              <div className=\"btnStyle\">\r\n                                <Button\r\n                                  className=\"ml-1 mb-1\"\r\n                                  color=\"primary\"\r\n                                  type=\"button\"\r\n                                  onClick={() => addMoreProduct()}>\r\n                                  + Add\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                      {/* <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Add another Product *</Label>\r\n\r\n                          <Multiselect\r\n                            required\r\n                            selectionLimit={1}\r\n                            // showCheckbox=\"true\"\r\n                            isObject=\"false\"\r\n                            options={ProductList} // Options to display in the dropdown\r\n                            // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                            onSelect={onSelect1} // Function will trigger on select event\r\n                            onRemove={onRemove1} // Function will trigger on remove event\r\n                            displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Quantity</Label>\r\n                          <Input\r\n                            required\r\n                            type=\"number\"\r\n                            name=\"targetEndDate\"\r\n                            placeholder=\"Number of Quantity\"\r\n                            value={addonproductQty}\r\n                            onChange={(e) => setaddonproductQty(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col> */}\r\n                    </>\r\n                  )}\r\n                  {FreeSelectedProduct && (\r\n                    <>\r\n                      {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                     <Label>Choose Warehouse (to be Transfer) * </Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={SalesPersonList} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                    </div>\r\n                     </Col> */}\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Free Selected Product Quantity</Label>\r\n                          <Input\r\n                            required\r\n                            type=\"number\"\r\n                            placeholder=\"Number of Quantity\"\r\n                            value={FreeNumberofProduct}\r\n                            onChange={(e) =>\r\n                              setFreeNumberofProduct(e.target.value)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n              {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Warehouse(from where) *</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={SalesPersonList} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Warehouse (to be Transfer) * </Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={SalesPersonList} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Stock Transfer date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetEndDate\"\r\n                      placeholder=\"Date of Delivery\"\r\n                      value={targetStartDate}\r\n                      onChange={(e) => settargetStartDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col> */}\r\n            </Row>\r\n            {/* {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Product Name</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            handleRemoveSelected(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            );\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Quantity To be Transfer</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.qty}\r\n                          onChange={(e) => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            - Remove\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          + Add\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))} */}\r\n\r\n            {/* <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total : <stron>{grandTotalAmt}</stron>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <Label className=\"mb-0\">Status</Label>\r\n              <div\r\n                className=\"form-label-group mt-1\"\r\n                onChange={(e) => {\r\n                  setStatus(e.target.value);\r\n                }}>\r\n                <input\r\n                  checked={Status == \"Active\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Active\"\r\n                />\r\n                <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                <input\r\n                  // checked={status == \"Inactive\"}\r\n                  checked={Status == \"Deactive\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Deactive\"\r\n                />\r\n                <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n              </div>\r\n            </Col>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Modal isOpen={modal} toggle={toggle} {...args}>\r\n            <ModalHeader toggle={toggle}>Add Promotion Code here</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={handleSubmitPromocode}>\r\n                <Row>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label>Promo code</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"targetEndDate\"\r\n                      placeholder=\"Enter Promotion Code\"\r\n                      value={Promocode}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value.toUpperCase());\r\n                        setPromocode(e.target.value.toUpperCase());\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label>Amount</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      placeholder=\"Enter Amount\"\r\n                      value={Discount}\r\n                      onChange={(e) => setDiscount(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                    <Label className=\"mb-0\">Status</Label>\r\n                    <div\r\n                      className=\"form-label-group mt-1\"\r\n                      onChange={(e) => {\r\n                        setStatus(e.target.value);\r\n                      }}>\r\n                      <input\r\n                        checked={Status == \"Active\"}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        // checked={status == \"Inactive\"}\r\n                        checked={Status == \"Deactive\"}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mt-2\">\r\n                        Submit\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatePromotionalActivity;\r\n"],"sourceRoot":""}