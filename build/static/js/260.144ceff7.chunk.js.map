{"version":3,"sources":["views/forms/form-elements/datepicker/Timepicker.js","views/forms/form-elements/datepicker/Datepickers.js","views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/customer/warehouse/AddDamage.js"],"names":["Timepickers","state","basic","Date","timeLimit","preloaded","this","className","md","sm","value","options","enableTime","noCalendar","dateFormat","onChange","date","setState","minTime","maxTime","defaultDate","React","Component","Datepickers","basicPicker","dateTimePicker","humanFriendly","minMax","disabledRange","multipleDates","rangePicker","weekNum","inlinePicker","Card","CardHeader","CardTitle","CardBody","Row","Col","minDate","altInput","altFormat","data-enable-time","maxDate","fp_incr","disable","from","to","mode","preloadRange","weekNumbers","inline","Pickers","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Timepicker","i","GrandTotal","SelectedITems","SelectedSize","CreateTarget","args","useState","setIndex","ProductWTWList","setProductWTWList","WareHouseone","setWareHouseone","grandTotalAmt","setGrandTotalAmt","UnitList","setUnitList","setUserInfo","WareHouselist","setWarehouseList","product","productId","Reason","Damaged_Percent","AvailaleQty","availableQty","transferQty","price","totalprice","Size","unitType","stockTrxDate","targetEndDate","discount","Shipping","tax","grandTotal","setProduct","handleProductChangeProduct","e","index","avalaibleSize","target","name","list","includes","Number","console","log","available","Askingfor","swal","amt","length","map","val","reduce","a","b","handleRemoveSelected","selectedList","selectedItem","splice","ele","qty","Product_MRP","indextotal","handleRemoveSelectedone","unitQty","useEffect","userData","JSON","parse","localStorage","getItem","_Get","Create_Warehouse_List","database","then","res","Warehouse","catch","err","UnitListView","_id","Unit","AllUnit","primaryUnit","secondaryUnit","userInfo","removeMoreProduct","newFormValues","DamagedStockSubmitHandler","preventDefault","payload","typeStatus","warehouse","demagePercentage","reason","totalPrice","currentStock","Save_Damagedstock","lg","render","history","style","cursor","color","onClick","goBack","onSubmit","required","selectionLimit","isObject","onSelect","productItems","myproduct","Product_Title","MIN_stockalert","onRemove","removedItem","displayValue","key","push","prevProductList","updatedProductList","updatedProduct","handleSelection","handleSelectionone","type","placeholder","min","disabled","readOnly","Ripple"],"mappings":"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","file":"static/js/260.144ceff7.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Timepickers extends React.Component{\r\n  state ={\r\n    basic : new Date(),\r\n    timeLimit : new Date(),\r\n    preloaded : new Date()\r\n  }\r\n\r\n  render(){\r\n    let { basic, timeLimit } = this.state\r\n    return(\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Timepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic 24hrs</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basic}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ basic : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Limit</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={timeLimit}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  minTime: \"16:00\",\r\n                  maxTime: \"22:30\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ timeLimit : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  defaultDate: \"13:45\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ preloaded : date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timepickers","import React from \"react\";\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\n\r\nclass Datepickers extends React.Component {\r\n  state = {\r\n    basicPicker: new Date(),\r\n    dateTimePicker: new Date(),\r\n    humanFriendly: new Date(),\r\n    minMax: new Date(),\r\n    disabledRange: new Date(),\r\n    multipleDates: new Date(),\r\n    rangePicker: new Date(),\r\n    weekNum: new Date(),\r\n    inlinePicker: new Date(),\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basicPicker,\r\n      dateTimePicker,\r\n      humanFriendly,\r\n      minMax,\r\n      disabledRange,\r\n      multipleDates,\r\n      rangePicker,\r\n      weekNum,\r\n      inlinePicker,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Datepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basicPicker}\r\n                onChange={(date) => {\r\n                  this.setState({ basicPicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Date & Time</h5>\r\n              <Flatpickr\r\n                options={{\r\n                  minDate: \"today\",\r\n                  altInput: true,\r\n                  // altFormat: \"j-m-Y H:i:S\",\r\n                  altFormat: \"m-j-Y H:i:S\",\r\n                }}\r\n                className=\"form-control\"\r\n                data-enable-time\r\n                value={dateTimePicker}\r\n                onChange={(date) => {\r\n                  this.setState({ dateTimePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Human Friendly</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={humanFriendly}\r\n                options={{\r\n                  altInput: true,\r\n                  altFormat: \"F j, Y\",\r\n                  dateFormat: \"Y-m-d\",\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ humanFriendly: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Min & Max Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={minMax}\r\n                options={{ minDate: \"today\", maxDate: new Date().fp_incr(14) }}\r\n                onChange={(date) => {\r\n                  this.setState({ minMax: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Disabled Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={disabledRange}\r\n                options={{\r\n                  dateFormat: \"Y-m-d\",\r\n                  disable: [\r\n                    {\r\n                      from: \"2020-02-01\",\r\n                      to: \"2020-02-10\",\r\n                    },\r\n                    {\r\n                      from: \"2020-02-20\",\r\n                      to: \"2020-02-25\",\r\n                    },\r\n                  ],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ disabledRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Multiple Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={multipleDates}\r\n                options={{ mode: \"multiple\" }}\r\n                onChange={(date) => {\r\n                  this.setState({ multipleDates: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  mode: \"range\",\r\n                  defaultDate: [\"2020-02-01\", \"2020-02-15\"],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ preloadRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-md-0 mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Week Numbers</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={weekNum}\r\n                options={{ weekNumbers: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ weekNum: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Inline</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={inlinePicker}\r\n                options={{ inline: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ inlinePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datepickers;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Datepickers from \"./Datepickers\";\r\nimport Timepickers from \"./Timepicker\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\nclass Pickers extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Date & Time Picker\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Date & Time Picker\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Datepickers />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Timepickers />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Pickers;\r\n// import { useState, useRef } from \"react\";\r\n// import Tesseract from \"tesseract.js\";\r\n\r\n// function anuj() {\r\n//   const [imagePath, setImagePath] = useState(\"\");\r\n//   const [text, setText] = useState(\"aa\");\r\n\r\n//   const handleChange = (event) => {\r\n//     setImage(URL.createObjectURL(event.target.files[0]));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <main className=\"App-main\">\r\n//         <h3>Actual image uploaded</h3>\r\n//         {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n//         <h3>Extracted text</h3>\r\n//         <div className=\"text-box\">\r\n//           <p> {text} </p>\r\n//         </div>\r\n//         <input type=\"file\" onChange={handleChange} />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default anuj;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill, BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\n\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  CreatePartyList,\r\n  Create_Sales_personList,\r\n  Create_Targetsave,\r\n  CreateWarehouseList,\r\n  UnitListView,\r\n  StocktrxFtoW,\r\n  WarehousetoWareHouseTrx,\r\n  Warehouse_Temporarlylist,\r\n  Save_Damagedstock,\r\n  CreateAccountList,\r\n  _Get,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport Timepickers from \"../../../../forms/form-elements/datepicker/Timepicker\";\r\nimport Pickers from \"../../../../forms/form-elements/datepicker/Pickers\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Create_Warehouse_List } from \"../../../../../ApiEndPoint/Api\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreateTarget = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [StockTrxdate, setStockTrxDate] = useState(\"\");\r\n  const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [ProductWTWList, setProductWTWList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [WareHouseone, setWareHouseone] = useState([]);\r\n  const [WareHousetwo, setWareHousetwo] = useState([]);\r\n  const [TypeOfTrx, setTypeOfTrx] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [items, setItems] = useState(\"\");\r\n  const [audit, setAudit] = useState(false);\r\n  const [WareHouselist, setWarehouseList] = useState([]);\r\n  const toggle = (item) => {\r\n    setItems(item);\r\n    setModal(!modal);\r\n  };\r\n  const audittoggle = () => {\r\n    setAudit(!audit);\r\n    // setModal(!modal);\r\n  };\r\n  const handleopentoggle = (iteam) => {\r\n    toggle(iteam);\r\n  };\r\n  const handleHistory = () => {\r\n    audittoggle();\r\n  };\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      Reason: \"\",\r\n      Damaged_Percent: null,\r\n      AvailaleQty: null,\r\n      availableQty: \"\",\r\n      transferQty: 1,\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      stockTrxDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, avalaibleSize) => {\r\n    const { name, value } = e.target;\r\n\r\n    const list = [...product];\r\n    if (name.includes(\"Damaged_Percent\") || name.includes(\"Reason\")) {\r\n      list[index][name] = value;\r\n    }\r\n    if (avalaibleSize >= Number(e.target.value)) {\r\n      setIndex(index);\r\n      console.log(product);\r\n      if (name.includes(\"transferQty\")) {\r\n        // list[index][\"Size\"] = Number(value);\r\n        let available = Number(list[index][\"AvailaleQty\"]);\r\n        let Askingfor = Number(value);\r\n        if (available >= Askingfor) {\r\n          list[index][name] = Askingfor;\r\n        } else {\r\n          swal(\"Can not Transfer More then Stock\");\r\n          list[index][name] = available - 1;\r\n        }\r\n      } else {\r\n        list[index][name] = value;\r\n      }\r\n      console.log(GrandTotal);\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map((val) => {\r\n          GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n          list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n          return val.Size * val.price * val.transferQty;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      // console.log(list)\r\n      setGrandTotalAmt(amt);\r\n    }\r\n    setProduct(list);\r\n  };\r\n  const handleProductChangeProductone = (e, index) => {\r\n    setIndex(index);\r\n    console.log(product);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    if (name.includes(\"transferQty\")) {\r\n      list[index][name] = Number(value);\r\n    } else {\r\n      list[index][name] = value;\r\n    }\r\n    console.log(GrandTotal);\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n        list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n        return val.Size * val.price * val.transferQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    // console.log(list)\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(selectedItem); // removed item\r\n    // console.log(product);\r\n    // console.log(index);\r\n    // console.log(SelectedITems);\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleRemoveSelectedone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.Size * ele?.price * SelectedSize[i]?.unitQty);\r\n      let indextotal = ele?.Size * SelectedSize[i]?.unitQty;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    // product[index][\"AvailaleQty\"] = myproduct?.Size;\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?.productId?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionProduct = (selectedList, selectedItem, index) => {\r\n    // product[index][\"AvailaleQty\"] = myproduct?.Size;\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem?.unitQty; // Update the price of the copied product\r\n      updatedProduct.unitType = selectedItem?.primaryUnit;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty);\r\n        let indextotal =\r\n          ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // handleInputChange;\r\n  // useEffect(() => {\r\n  //   console.log(window);\r\n  //   console.log(product);\r\n  //   console.log(GrandTotal);\r\n  //   console.log(Salesperson);\r\n  //   console.log(StockTrxdate);\r\n  //   console.log(targetEndDate);\r\n  // }, [product, targetEndDate]);\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    _Get(Create_Warehouse_List, userData?.database)\r\n      .then((res) => {\r\n        let value = res?.Warehouse;\r\n        console.log(value);\r\n        if (value?.length > 0) {\r\n          setWarehouseList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    UnitListView(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        console.log(res?.Unit);\r\n        let customADD = {\r\n          primaryUnit: \"PIECES(Pcs)\",\r\n          secondaryUnit: \"PIECES(Pcs) 1\",\r\n          unitQty: 1,\r\n        };\r\n        let AllUnit = [...res?.Unit, customADD];\r\n        setUnitList(AllUnit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n    // CreateOrder_ID()\r\n    //   .then((res) => {\r\n    //     const lastElement = res?.Order[res?.Order?.length - 1].id;\r\n    //     const prefix = lastElement?.substring(0, 5);\r\n    //     const number = parseInt(lastElement?.match(/\\d+$/)[0], 10) + 1;\r\n    //     const concatenatedString = prefix + number;\r\n    //     setOrderID(concatenatedString);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    // CreateOrder_ViewData()\r\n    //   .then((res) => {\r\n    //     const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n    //     setCreatAccountView(JSON.parse(jsonData));\r\n    //     setStatusDropDown(\r\n    //       JSON.parse(jsonData)?.createOrder.CurrentStatus?.MyDropDown?.dropdown\r\n    //     );\r\n    //     setdropdownValue(JSON.parse(jsonData));\r\n    //     setPartDetails(JSON.parse(jsonData)?.createOrder.PartDetails);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\",\r\n        productId: \"\",\r\n        Reason: \"\",\r\n        Damaged_Percent: null,\r\n        AvailaleQty: null,\r\n        availableQty: \"\",\r\n        transferQty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        Size: \"\",\r\n        unitType: \"\",\r\n        stockTrxDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const DamagedStockSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    // body: warehouse, productId, Size, unitType, transferQty, price, totalPrice;\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let payload = {\r\n      typeStatus: \"Damaged\",\r\n      warehouse: WareHouseone[0]?._id,\r\n      productId: product[0]?.productId,\r\n      demagePercentage: product[0]?.Damaged_Percent,\r\n      reason: product[0]?.Reason,\r\n      Size: product[0]?.Size,\r\n      unitType: product[0]?.unitType,\r\n      transferQty: product[0]?.transferQty,\r\n      price: product[0]?.price,\r\n      totalPrice:\r\n        product[0]?.transferQty * product[0]?.Size * product[0]?.price,\r\n      currentStock: product[0]?.transferQty * product[0]?.Size,\r\n    };\r\n\r\n    await Save_Damagedstock(payload)\r\n      .then((res) => {\r\n        //   window.location.reload();\r\n        // history.goBack();\r\n        swal(\"Damadged Stock Created\");\r\n\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(product);\r\n    // console.log(GrandTotal);\r\n    // console.log(Salesperson[0]?._id);\r\n    // console.log(targetStartDate);\r\n    // console.log(targetEndDate);\r\n    // console.log(grandTotalAmt);\r\n\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        unitType: ele?.unitType,\r\n        price: ele?.price,\r\n        Size: ele?.Size,\r\n        transferQty: ele?.transferQty,\r\n        totalPrice: ele?.totalprice,\r\n        currentStock: ele?.transferQty * ele?.Size,\r\n      };\r\n    });\r\n    let payload = {\r\n      productItems: Allproduct,\r\n      warehouseToId: WareHouseone[0]?._id,\r\n      stockTransferDate: StockTrxdate,\r\n      grandTotal: grandTotalAmt,\r\n      transferStatus: \"InProcess\",\r\n      created_by: userdata?._id,\r\n    };\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      StocktrxFtoW(payload)\r\n        .then((res) => {\r\n          // if (res.status) {\r\n          //   setFormData({});\r\n          //   window.location.reload();\r\n          swal(\"Stock Assigned to WareHouse\");\r\n          // }\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n    setWareHouseone(selectedList);\r\n    // setProductList(selectedList[0].productItems);\r\n  };\r\n  const onSelectone = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n\r\n    setWareHouseone(selectedList);\r\n    // const list = [...product];\r\n\r\n    let MySelectedwarehouseProduct = selectedList[0].productItems?.map(\r\n      (ele, i) => {\r\n        let myproduct = ele?.productId;\r\n        ele[\"Product_Title\"] = myproduct?.Product_Title;\r\n        ele[\"Product_id\"] = myproduct?._id;\r\n        ele[\"Product_MRP\"] = myproduct?.Product_MRP;\r\n        ele[\"discount\"] = myproduct?.discount;\r\n        ele[\"transferQty\"] = myproduct?.transferQty;\r\n        ele[\"MIN_stockalert\"] = myproduct?.MIN_stockalert;\r\n      }\r\n    );\r\n\r\n    console.log(selectedList[0]?.productItems);\r\n    let list = selectedList[0]?.productItems;\r\n\r\n    if (list?.length > 0) {\r\n      setProductWTWList(selectedList[0]?.productItems);\r\n    } else {\r\n      setProductWTWList(null);\r\n    }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onRemoveone = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onSelect2 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n    setWareHousetwo(selectedList);\r\n  };\r\n  const onRemove2 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col lg=\"8\" md=\"8\" sm=\"8\" className=\"mb-2 mt-1\">\r\n            <div>\r\n              <h1 className=\"\">Add Stock to Damage</h1>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"float-right\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"float-right mr-1\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.goBack()}>\r\n                    {\" \"}\r\n                    Back\r\n                    {/* <FaPlus size={15} /> Create User */}\r\n                  </Button>\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form className=\"mx-1\" onSubmit={DamagedStockSubmitHandler}>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Choose Warehouse(from where) *</Label>\r\n                  <Multiselect\r\n                    required\r\n                    selectionLimit={1}\r\n                    // showCheckbox=\"true\"\r\n                    isObject=\"false\"\r\n                    options={WareHouselist} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                    onSelect={onSelectone} // Function will trigger on select event\r\n                    onRemove={onRemoveone} // Function will trigger on remove event\r\n                    displayValue=\"warehouseName\" // Property name to display in the dropdown options\r\n                  />\r\n                </div>\r\n              </Col>\r\n              {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Choose Warehouse (to be Transfer) * </Label>\r\n\r\n                  <Multiselect\r\n                    required\r\n                    selectionLimit={1}\r\n                    // showCheckbox=\"true\"\r\n                    isObject=\"false\"\r\n                    options={WareHouselist} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                    onSelect={onSelect2} // Function will trigger on select event\r\n                    onRemove={onRemove2} // Function will trigger on remove event\r\n                    displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                  />\r\n                </div>\r\n              </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Stock Transfer date</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"date\"\r\n                    name=\"targetEndDate\"\r\n                    placeholder=\"Date of Delivery\"\r\n                    value={StockTrxdate}\r\n                    onChange={(e) => setStockTrxDate(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col> */}\r\n            </Row>\r\n            {product &&\r\n              product?.map((product, index) => (\r\n                <Row className=\"\" key={index}>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Product Name</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectionLimit={1}\r\n                        // showCheckbox=\"true\"\r\n                        isObject=\"true\"\r\n                        options={ProductWTWList}\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={(selectedList, selectedItem) =>\r\n                          handleSelection(selectedList, selectedItem, index)\r\n                        }\r\n                        onRemove={(selectedList, selectedItem) => {\r\n                          handleRemoveSelected(\r\n                            selectedList,\r\n                            selectedItem,\r\n                            index\r\n                          );\r\n                        }}\r\n                        displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                      />\r\n                      {/* <CustomInput\r\n                          name=\"productId\"\r\n                          onChange={(e) => handleProductChangeProduct(e, index)}\r\n                          type=\"select\">\r\n                          <option>--Select--</option>\r\n                          {ProductWTWList &&\r\n                            ProductWTWList?.map((ele, i) => {\r\n                              return (\r\n                                <option value={ele?.productId?._id}>\r\n                                  {ele?.productId.Product_Title}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                        </CustomInput> */}\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Size</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectionLimit={1}\r\n                        // showCheckbox=\"true\"\r\n                        isObject=\"false\"\r\n                        options={UnitList}\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={(selectedList, selectedItem) =>\r\n                          handleSelectionone(selectedList, selectedItem, index)\r\n                        }\r\n                        onRemove={(selectedList, selectedItem) => {\r\n                          handleRemoveSelectedone(\r\n                            selectedList,\r\n                            selectedItem,\r\n                            index\r\n                          );\r\n                        }}\r\n                        displayValue=\"primaryUnit\" // Property name to display in the dropdown options\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Damadge %</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"Damaged_Percent\"\r\n                        placeholder=\"Damage %\"\r\n                        value={product?.Damaged_Percent}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProduct(\r\n                            e,\r\n                            index,\r\n                            product?.AvailaleQty\r\n                          )\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Damadge Qty</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        min={0}\r\n                        name=\"transferQty\"\r\n                        placeholder=\"Req_Qty\"\r\n                        value={product?.transferQty}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProduct(\r\n                            e,\r\n                            index,\r\n                            product?.AvailaleQty\r\n                          )\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Reason</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"Reason\"\r\n                        placeholder=\"Reason\"\r\n                        value={product?.Reason}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProduct(\r\n                            e,\r\n                            index,\r\n                            product?.AvailaleQty\r\n                          )\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Available Qty</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"number\"\r\n                        min={0}\r\n                        name=\"AvailaleQty\"\r\n                        placeholder=\"Available Qty\"\r\n                        value={product?.AvailaleQty}\r\n                        // onChange={(e) => handleProductChangeProduct(e, index)}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Price</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        readOnly\r\n                        placeholder=\"Price\"\r\n                        value={product.price}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total Price</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"totalprice\"\r\n                        readOnly\r\n                        placeholder=\"TtlPrice\"\r\n                        value={\r\n                          product.Size * product.price * product.transferQty\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"btnStyle\">\r\n                      {index ? (\r\n                        <Badge\r\n                          type=\"button\"\r\n                          color=\"danger\"\r\n                          className=\"button remove \"\r\n                          onClick={() => removeMoreProduct(index)}>\r\n                          - Remove\r\n                        </Badge>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    {/* <div className=\"btnStyle\">\r\n                      <Badge\r\n                        className=\"ml-1 mb-1\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => addMoreProduct()}>\r\n                        + Add\r\n                      </Badge>\r\n                    </div> */}\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                <div className=\" d-flex justify-content-end\">\r\n                  <Label className=\"pr-5\">\r\n                    Grand Total :{\" \"}\r\n                    <strong>\r\n                      {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                        ? 0\r\n                        : grandTotalAmt}{\" \"}\r\n                    </strong>\r\n                  </Label>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateTarget;\r\n"],"sourceRoot":""}