{"version":3,"sources":["views/forms/form-elements/datepicker/Timepicker.js","views/forms/form-elements/datepicker/Datepickers.js","views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/parts/Terrance.js","views/apps/freshlist/parts/Scheduler.js"],"names":["Timepickers","state","basic","Date","timeLimit","preloaded","this","className","md","sm","value","options","enableTime","noCalendar","dateFormat","onChange","date","setState","minTime","maxTime","defaultDate","React","Component","Datepickers","basicPicker","dateTimePicker","humanFriendly","minMax","disabledRange","multipleDates","rangePicker","weekNum","inlinePicker","Card","CardHeader","CardTitle","CardBody","Row","Col","minDate","altInput","altFormat","data-enable-time","maxDate","fp_incr","disable","from","to","mode","preloadRange","weekNumbers","inline","Pickers","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Timepicker","terrance","importData","Scheduler","useState","scheduler","setScheduler","Adhocfile","setAdhocfile","loading","setLoading","modal","setModal","toggle","Role","setRole","allPart","setAllPart","useEffect","console","log","handleInputChange","e","target","name","checked","Form","onSubmit","preventDefault","JSON","parse","localStorage","getItem","lg","FormGroup","Label","Input","required","type","StartDate","Start_Time","style","marginRight","Pattern","width","placeholder","Every_Interval","Recurrence","marginTop","marginBottom","Occurance_frequency","marginLeft","End_by_date","Button","Ripple","color","InputGroup","disabled","onClick","fill","multiple","files","selectType","selectTypes","formdata","FormData","split","join","includes","adhodfile","append","SpareParts","then","res","message","swal","catch","err","Orders","PartCatelougue","ProdctsUpload","InspectionUpload","InvoiceUpload","SupporttUpload","ServicingUpload","WareHouseUpload","DistributorUpload","DealerUpload","SupplierUpload","ServiceCenterUpload","CustomerDataUpload","CampaignUpload","ServiceRate","handleSubmit","Modal","fullscreen","size","backdrop","isOpen","ModalHeader","ModalBody","Table","bordered","hover","responsive","map","ele","i","key","cursor","scope","ModalFooter"],"mappings":"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","file":"static/js/270.44389c8e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Timepickers extends React.Component{\r\n  state ={\r\n    basic : new Date(),\r\n    timeLimit : new Date(),\r\n    preloaded : new Date()\r\n  }\r\n\r\n  render(){\r\n    let { basic, timeLimit } = this.state\r\n    return(\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Timepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic 24hrs</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basic}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ basic : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Limit</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={timeLimit}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  minTime: \"16:00\",\r\n                  maxTime: \"22:30\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ timeLimit : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  defaultDate: \"13:45\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ preloaded : date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timepickers","import React from \"react\";\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\n\r\nclass Datepickers extends React.Component {\r\n  state = {\r\n    basicPicker: new Date(),\r\n    dateTimePicker: new Date(),\r\n    humanFriendly: new Date(),\r\n    minMax: new Date(),\r\n    disabledRange: new Date(),\r\n    multipleDates: new Date(),\r\n    rangePicker: new Date(),\r\n    weekNum: new Date(),\r\n    inlinePicker: new Date(),\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basicPicker,\r\n      dateTimePicker,\r\n      humanFriendly,\r\n      minMax,\r\n      disabledRange,\r\n      multipleDates,\r\n      rangePicker,\r\n      weekNum,\r\n      inlinePicker,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Datepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basicPicker}\r\n                onChange={(date) => {\r\n                  this.setState({ basicPicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Date & Time</h5>\r\n              <Flatpickr\r\n                options={{\r\n                  minDate: \"today\",\r\n                  altInput: true,\r\n                  // altFormat: \"j-m-Y H:i:S\",\r\n                  altFormat: \"m-j-Y H:i:S\",\r\n                }}\r\n                className=\"form-control\"\r\n                data-enable-time\r\n                value={dateTimePicker}\r\n                onChange={(date) => {\r\n                  this.setState({ dateTimePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Human Friendly</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={humanFriendly}\r\n                options={{\r\n                  altInput: true,\r\n                  altFormat: \"F j, Y\",\r\n                  dateFormat: \"Y-m-d\",\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ humanFriendly: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Min & Max Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={minMax}\r\n                options={{ minDate: \"today\", maxDate: new Date().fp_incr(14) }}\r\n                onChange={(date) => {\r\n                  this.setState({ minMax: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Disabled Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={disabledRange}\r\n                options={{\r\n                  dateFormat: \"Y-m-d\",\r\n                  disable: [\r\n                    {\r\n                      from: \"2020-02-01\",\r\n                      to: \"2020-02-10\",\r\n                    },\r\n                    {\r\n                      from: \"2020-02-20\",\r\n                      to: \"2020-02-25\",\r\n                    },\r\n                  ],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ disabledRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Multiple Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={multipleDates}\r\n                options={{ mode: \"multiple\" }}\r\n                onChange={(date) => {\r\n                  this.setState({ multipleDates: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  mode: \"range\",\r\n                  defaultDate: [\"2020-02-01\", \"2020-02-15\"],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ preloadRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-md-0 mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Week Numbers</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={weekNum}\r\n                options={{ weekNumbers: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ weekNum: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Inline</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={inlinePicker}\r\n                options={{ inline: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ inlinePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datepickers;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Datepickers from \"./Datepickers\";\r\nimport Timepickers from \"./Timepicker\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\nclass Pickers extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Date & Time Picker\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Date & Time Picker\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Datepickers />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Timepickers />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Pickers;\r\n// import { useState, useRef } from \"react\";\r\n// import Tesseract from \"tesseract.js\";\r\n\r\n// function anuj() {\r\n//   const [imagePath, setImagePath] = useState(\"\");\r\n//   const [text, setText] = useState(\"aa\");\r\n\r\n//   const handleChange = (event) => {\r\n//     setImage(URL.createObjectURL(event.target.files[0]));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <main className=\"App-main\">\r\n//         <h3>Actual image uploaded</h3>\r\n//         {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n//         <h3>Extracted text</h3>\r\n//         <div className=\"text-box\">\r\n//           <p> {text} </p>\r\n//         </div>\r\n//         <input type=\"file\" onChange={handleChange} />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default anuj;\r\n","import { useState, useRef } from \"react\";\r\nimport preprocessImage from \"./preprocessImage \";\r\nimport Tesseract from \"tesseract.js\";\r\n\r\nfunction terrance() {\r\n  const [image, setImage] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const canvasRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n\r\n  const handleChange = (event) => {\r\n    setImage(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(imageRef.current, 0, 0);\r\n    ctx.putImageData(preprocessImage(canvas), 0, 0);\r\n    const dataUrl = canvas.toDataURL(\"image/jpeg\");\r\n\r\n    Tesseract.recognize(dataUrl, \"eng\", {\r\n      logger: (m) => console.log(m),\r\n    })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      })\r\n      .then((result) => {\r\n        // Get Confidence score\r\n        let confidence = result.confidence;\r\n        console.log(confidence);\r\n        // Get full output\r\n        let text = result.text;\r\n\r\n        setText(text);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <main className=\"App-main\">\r\n          <h3>Actual image uploaded</h3>\r\n          <img src={image} className=\"App-logo\" alt=\"logo\" ref={imageRef} />\r\n          <h3>Canvas</h3>\r\n          {/* <canvas ref={canvasRef} width={700} height={250}></canvas> */}\r\n          <h3>Extracted text</h3>\r\n          <div className=\"pin-box\">\r\n            <p> {text} </p>\r\n          </div>\r\n          <input type=\"file\" onChange={handleChange} />\r\n          <button onClick={() => handleClick} style={{ height: 50 }}>\r\n            Convert to text\r\n          </button>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default terrance;\r\n","// import React, { Component, useDebugValue } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Row,\r\n  FormGroup,\r\n  CustomInput,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  InputGroup,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Terrance from \"./Terrance\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { timers } from \"jquery\";\r\nimport {\r\n  CampaignUpload,\r\n  CustomerDataUpload,\r\n  DealerUpload,\r\n  DistributorUpload,\r\n  InspectionUpload,\r\n  InvoiceUpload,\r\n  Orders,\r\n  PartCatelougue,\r\n  ProdctsUpload,\r\n  ServiceCenterUpload,\r\n  ServiceRate,\r\n  ServicingUpload,\r\n  SpareParts,\r\n  SupplierUpload,\r\n  SupporttUpload,\r\n  WareHouseUpload,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n// import { dummytest } from \"./test\";\r\nimport HtmlParser from \"react-html-parser\";\r\nimport Pickers from \"../../../forms/form-elements/datepicker/Pickers\";\r\n// const selectItem1 = [];\r\n\r\n// const Selectedarray = [];\r\n\r\nconst importData = [\r\n  \"Product Registration\",\r\n  \"SpareParts\",\r\n  \"Orders\",\r\n  \"PartsCatalogue\",\r\n  \"Scrutiny / Inspections\",\r\n  \"Invoices / Billing\",\r\n  \"Support\",\r\n  \"Service Rate\",\r\n  \"Servicing\",\r\n  \"Warehouse\",\r\n  \"Distributors\",\r\n  \"Dealers\",\r\n  \"Suppliers\",\r\n  \"Service Centers\",\r\n  \"Customer Data\",\r\n  \"Campaigns\",\r\n];\r\nconst Scheduler = () => {\r\n  const [scheduler, setScheduler] = useState({});\r\n  const [Adhocfile, setAdhocfile] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const [Role, setRole] = useState(\"\");\r\n  const [allPart, setAllPart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log(dummytest);\r\n    // console.log(\"answer_steps--->\", JSON.parse(dummytest?.answer_steps));\r\n    // console.log(\"plan--->\", dummytest?.plan);\r\n    // console.log(\"question_text-->\", dummytest?.question_text);\r\n    setAllPart(importData);\r\n    // let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // let newparmisson = pageparmission?.role?.find(\r\n    //   (value) => value?.pageName === \"Create Account\"\r\n    // );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(scheduler);\r\n    console.log(Adhocfile);\r\n  }, [scheduler, Adhocfile]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, checked } = e.target;\r\n    setScheduler({\r\n      ...scheduler,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handleopentoggle = () => {\r\n    toggle();\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // let uniqueChars = [...new Set(selectItem1)];\r\n    // let selectedOption = [...new Set(selectedOptions)];\r\n  };\r\n\r\n  const HandleSelectRole = (val) => {\r\n    setRole(val);\r\n    toggle();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    var selectType;\r\n    var selectTypes;\r\n    // debugger;\r\n    console.log(Role.split(\" \").join(\"\"));\r\n    if (Role.split(\" \").join(\"\").includes(\"/\")) {\r\n      selectType = Role.split(\"/\").join(\"\").split(\" \")[0];\r\n      selectTypes = Role.split(\"/\").join(\"\").split(\" \")[1];\r\n    } else {\r\n      selectType = Role.split(\" \").join(\"\");\r\n    }\r\n    let adhodfile = Adhocfile[0].name.split(\".\")[0];\r\n    // console.log(adhodfile.includes(selectType));\r\n    if (adhodfile.includes(selectType) || adhodfile.includes(selectTypes)) {\r\n      formdata.append(\"file\", Adhocfile[0]);\r\n      formdata.append(\"partType\", selectType);\r\n\r\n      if (Role == \"SpareParts\") {\r\n        SpareParts(formdata)\r\n          .then((res) => {\r\n            console.log(res.message);\r\n            swal(`${Role} ${res.message}`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Orders\") {\r\n        Orders(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"PartsCatalogue\") {\r\n        PartCatelougue(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Product Registration\") {\r\n        ProdctsUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Scrutiny / Inspections\") {\r\n        InspectionUpload(formdata)\r\n          .then((res) => {\r\n            console.log(res);\r\n            setLoading(false);\r\n\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Invoices / Billing\") {\r\n        InvoiceUpload(formdata)\r\n          .then((res) => {\r\n            console.log(res);\r\n            setLoading(false);\r\n\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Support\") {\r\n        SupporttUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Servicing\") {\r\n        ServicingUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Warehouse\") {\r\n        WareHouseUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Distributors\") {\r\n        DistributorUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Dealers\") {\r\n        DealerUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Suppliers\") {\r\n        SupplierUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Service Centers\") {\r\n        ServiceCenterUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Customer Data\") {\r\n        CustomerDataUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Campaigns\") {\r\n        CampaignUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Service Rate\") {\r\n        ServiceRate(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    } else {\r\n      swal(\r\n        \"Error!\",\r\n        `Note: ${selectType} Name and ${adhodfile} Name Prefix Should be Match`,\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Row>\r\n          <Col>{/* <Pickers /> */}</Col>\r\n        </Row>\r\n        <Card>\r\n          {/* <Row className=\"p-3\">\r\n            <Col>\r\n              {JSON.parse(dummytest?.answer_steps)?.map((ele) => {\r\n                console.log(ele);\r\n                return (\r\n                  <>\r\n                    <div>{ele?.sequence}</div>\r\n                    <div>{ele?.header}</div>\r\n                    <div>{HtmlParser(ele?.text)}</div>\r\n                  </>\r\n                );\r\n              })}\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: dummytest?.plan.replace(/\\n/g, \"<br/>\"),\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row> */}\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Scheduler Time</h1>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Start Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"StartDate\"\r\n                      value={scheduler?.StartDate}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Start Time </Label>\r\n                    <Input\r\n                      required\r\n                      type=\"time\"\r\n                      name=\"Start_Time\"\r\n                      value={scheduler?.Start_Time}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Recurrence Pattern</Label>\r\n                  <div className=\"form-label-group mt-2\">\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Yearly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Yearly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Monthly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Monthly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Weekly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Weekly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Daily\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Daily</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Hourly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Hourly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Minuts\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Minuts</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Second\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Second</span>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  {scheduler?.Pattern && scheduler?.Pattern && (\r\n                    <>\r\n                      <Label className=\"mb-1\">\r\n                        If you want to Repeated Time\r\n                      </Label>\r\n\r\n                      <FormGroup className=\"d-flex\">\r\n                        <div className=\"mx-2\">\r\n                          <Input\r\n                            type=\"radio\"\r\n                            name=\"Repeat_time\"\r\n                            value=\"Every\"\r\n                            onChange={(e) => handleInputChange(e)}\r\n                          />\r\n                          <span style={{ marginRight: \"3px\" }}>Every</span>\r\n                        </div>\r\n                        <div>\r\n                          <Input\r\n                            className=\"every\"\r\n                            style={{ marginRight: \"3px\", width: \"80px\" }}\r\n                            type=\"text\"\r\n                            placeholder={scheduler?.Pattern}\r\n                            name=\"Every_Interval\"\r\n                            value={scheduler?.Every_Interval}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                            // value=\"\"\r\n                          />\r\n                        </div>\r\n                      </FormGroup>\r\n                    </>\r\n                  )}\r\n                </Col>\r\n                <hr />\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label className=\"my-1\">Range Of Recurrence </Label>\r\n                    <div className=\"ml-2 \">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"No_End_Date\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>No End Date</span>\r\n                    </div>\r\n                    <div className=\"ml-2 \">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"End_After\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>End After</span>\r\n                    </div>\r\n                    {scheduler?.Recurrence == \"End_After\" && (\r\n                      <div className=\"d-flex py-1\">\r\n                        <div\r\n                          className=\"OccurrencesStyle\"\r\n                          style={{ marginTop: \"-5px\" }}\r\n                        >\r\n                          <Input\r\n                            style={{\r\n                              marginRight: \"3px\",\r\n                              width: \"100px\",\r\n                              marginBottom: \"2px\",\r\n                            }}\r\n                            value={scheduler?.Occurance_frequency}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                            type=\"number\"\r\n                            name=\"Occurance_frequency\"\r\n                            placeholder=\"Occurrences Time\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <span style={{ marginLeft: \"10px\" }}>\r\n                            <b>Occurrences</b>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"ml-2\">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"End_by\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>End by</span>\r\n                    </div>\r\n                    {scheduler?.Recurrence == \"End_by\" && (\r\n                      <Input\r\n                        value={scheduler?.End_by_date}\r\n                        type=\"date\"\r\n                        name=\"End_by_date\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n\r\n            <hr />\r\n            <Row>{/* <Terrance /> */}</Row>\r\n            <Form>\r\n              <Row className=\"mt-2\">\r\n                <Col>\r\n                  <Label>Import Type</Label>\r\n                  <InputGroup className=\"maininput\">\r\n                    <Input\r\n                      disabled\r\n                      name=\"Role\"\r\n                      value={Role}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                      type=\"text\"\r\n                      placeholder=\"Import Search\"\r\n                      className=\"form-control inputs\"\r\n                    />\r\n                    <Button\r\n                      onClick={handleopentoggle}\r\n                      color=\"primary\"\r\n                      className=\"mybtn primary\"\r\n                    >\r\n                      <AiOutlineSearch\r\n                        onClick={(e) => e.preventDefault()}\r\n                        fill=\"white\"\r\n                      />\r\n                    </Button>\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Adhoc Upload</h4>\r\n                  </Label>\r\n\r\n                  <input\r\n                    multiple\r\n                    className=\"form-control\"\r\n                    style={{ marginRight: \"3px\" }}\r\n                    name=\"adhocfiles\"\r\n                    type=\"file\"\r\n                    onChange={(e) => setAdhocfile(e.target.files)}\r\n                  />\r\n                </Col>\r\n                <Col\r\n                  lg=\"6\"\r\n                  md=\"6\"\r\n                  sm=\"6\"\r\n                  className=\"mb-2 d-flex justify-content-center\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <>\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          // onClick={(e) => handleSubmit(e)}\r\n                          className=\"mr-1 mt-2 mx-2\"\r\n                        >\r\n                          Loading..\r\n                        </Button.Ripple>\r\n                      </>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                        className=\"mr-1 mt-2 mx-2\"\r\n                      >\r\n                        Upload\r\n                      </Button.Ripple>\r\n                    </>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Modal\r\n          fullscreen=\"xl\"\r\n          size=\"lg\"\r\n          backdrop={false}\r\n          isOpen={modal}\r\n          toggle={toggle}\r\n          // {...args}\r\n        >\r\n          <ModalHeader toggle={toggle}>Import Type List</ModalHeader>\r\n          <ModalBody className=\"table-body shedulemodalbody\">\r\n            <div className=\"modalheaderaddrol p-1\">\r\n              <h3 className=\"table-item\">Import Type</h3>\r\n\r\n              <Table\r\n                className=\"scheduletble_heading\"\r\n                bordered\r\n                hover\r\n                responsive\r\n                size=\"sm\"\r\n              >\r\n                <thead className=\"tableRowStyle\">\r\n                  <tr className=\"tableRowStyle\">\r\n                    <th>S.No.</th>\r\n                    <th>Import Type Name</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {allPart.map((ele, i) => {\r\n                    return (\r\n                      <tr\r\n                        className=\"tableRowStyles\"\r\n                        key={i}\r\n                        name=\"Role\"\r\n                        onClick={(e) => HandleSelectRole(ele)}\r\n                        // onClick={(e) => {\r\n                        //   setScheduler({ ...scheduler, [\"Role\"]: ele });\r\n                        //   HandleSelectRole(ele);\r\n                        // }}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        <th scope=\"row\" className=\"tableRowStyles\">\r\n                          {i + 1}\r\n                        </th>\r\n                        <td className=\"tableRowStyles\"> {ele}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={toggle}>\r\n              Submit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Scheduler;\r\n"],"sourceRoot":""}