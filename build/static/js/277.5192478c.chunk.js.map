{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","views/pages/profile/UserProfile.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","i","UserProfile","toggleModal","setState","prevState","modal","onChangeHandler","event","selectedFile","target","files","selectedName","name","handleCountryChange","selectedOption","selectedCountry","handleStateChange","selectedState","handleCityChange","selectedCity","changeHandler","e","submitHandler","preventDefault","Loading","userData","JSON","parse","localStorage","getItem","data","FormData","append","state","email","password","cnfmPassword","EditUserProfile","accountId","then","response","console","log","updateUser","user","context","setUserInformatio","setItem","stringify","status","swal","catch","error","HandleUploadLogo","pageparmission","formData","_id","companyName","CompanyNumber","Companylogo","gstNumber","Prefix","Suffix","CompanyAddress","Signature","redate","Create_CompanyDetails","res","err","firstName","lastName","Createmode","LoginData","CompanyDetails","prevProps","isoCode","State","getStatesOfCountry","Userinfo","ViewCompanyDetails","database","CompanyDetail","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","id","lg","md","xl","sm","style","listStyleType","UserInformatio","Country","City","Addcolor","cursor","SetmyCustomColor","rolename","position","onSubmit","placeholder","options","getAllCountries","getOptionLabel","option","getOptionValue","getCitiesOfState","countryCode","Ripple","isOpen","toggle","maxWidth","gstNo","address","mobileNo","logo","width","height","src","Image_URL","alt","signature","required","minLength","maxLength","length","_Get","GST_Verification_Api","flag","pradr","adr","tradeNam","rgdt","message","readOnly","newValue","replace","contextType","UserContext","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/277.5192478c.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardTitle,\r\n  CustomInput,\r\n  FormGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport CheckBoxesVuexy from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Check, CloudLightning } from \"react-feather\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  Create_CompanyDetails,\r\n  EditUserProfile,\r\n  ViewCompanyDetails,\r\n  _Get,\r\n} from \"../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../assets/scss/pages/users-profile.scss\";\r\nimport UserContext from \"../../../context/Context\";\r\nimport moment from \"moment-timezone\";\r\nimport { GST_Verification_Api, Image_URL } from \"../../../ApiEndPoint/Api\";\r\n\r\nclass UserProfile extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      modal: false,\r\n      Prefix: \"\",\r\n      Suffix: \"\",\r\n      Createmode: false,\r\n      // formData: {\r\n      //   Country: '',\r\n      //   State: '',\r\n      //   City: '',\r\n      // },\r\n      Loading: \"Submit\",\r\n      selectedCountry: null,\r\n      selectedState: null,\r\n      selectedCity: null,\r\n      name: \"\",\r\n      LoginData: {},\r\n      Companylogo: {},\r\n      CompanyDetails: {},\r\n      CompanyAddress: \"\",\r\n      Signature: {},\r\n      formData: \"\",\r\n      CompanyNumber: \"\",\r\n      gstNumber: \"\",\r\n      companyName: \"\",\r\n      email: \"\",\r\n      cnfmPassword: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  //Image Submit Handler\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    // console.log(event.target.files[0]);\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.selectedCountry !== prevState.selectedCountry) {\r\n      console.log(this.state.selectedCountry);\r\n      console.log(this.state.selectedCountry?.isoCode);\r\n      console.log(\r\n        State?.getStatesOfCountry(this.state.selectedCountry?.isoCode)\r\n      );\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    let pageparmission = await JSON.parse(localStorage.getItem(\"userData\"));\r\n    this.setState({ LoginData: pageparmission });\r\n    this.setState({\r\n      // data: response.data.data,\r\n      name: pageparmission?.name,\r\n      email: pageparmission?.email,\r\n      cnfmPassword: pageparmission?.Userinfo?.password,\r\n    });\r\n    await ViewCompanyDetails(pageparmission?._id, pageparmission?.database)\r\n      .then((res) => {\r\n        this.setState({ CompanyDetails: res?.CompanyDetail });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // const countries = Country.getAllCountries();\r\n    // this.setState({ countries });\r\n    // const UserInformation = this.context;\r\n    // console.log(UserInformation?.CompanyDetails);\r\n\r\n    // console.log(pageparmission);\r\n\r\n    // console.log(this.context);\r\n  }\r\n\r\n  // handleCountryChange = (selectedOption) => {\r\n  //   this.setState({\r\n  //     selectedCountry: selectedOption,\r\n  //     formData: {\r\n  //       ...this.state.formData,\r\n  //       Country: selectedOption ? selectedOption.name : '',\r\n  //     },\r\n  //     selectedState: null,\r\n  //     selectedCity: null,\r\n  //   });\r\n  // };\r\n\r\n  // handleStateChange = (selectedOption) => {\r\n  //   this.setState({\r\n  //     selectedState: selectedOption,\r\n  //     formData: {\r\n  //       ...this.state.formData,\r\n  //       State: selectedOption ? selectedOption.name : '',\r\n  //     },\r\n  //     selectedCity: null,\r\n  //   });\r\n  // };\r\n\r\n  // handleCityChange = (selectedOption) => {\r\n  //   this.setState({\r\n  //     selectedCity: selectedOption,\r\n  //     formData: {\r\n  //       ...this.state.formData,\r\n  //       City: selectedOption ? selectedOption.name : '',\r\n  //     },\r\n  //   });\r\n  // };\r\n  handleCountryChange = (selectedOption) => {\r\n    this.setState({ selectedCountry: selectedOption });\r\n  };\r\n\r\n  handleStateChange = (selectedOption) => {\r\n    this.setState({ selectedState: selectedOption });\r\n  };\r\n\r\n  handleCityChange = (selectedOption) => {\r\n    this.setState({ selectedCity: selectedOption });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ Loading: \"Loading...\" });\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const data = new FormData();\r\n    data.append(\"name\", this.state.name);\r\n    data.append(\"email\", this.state.email);\r\n    if (this.state.password) {\r\n      data.append(\"Password\", this.state.password);\r\n    }\r\n    data.append(\"cnfmPassword\", this.state.cnfmPassword);\r\n    // data.append(\"dateFormat\", this.state.Date_format);\r\n    // data.append(\"dateTimeFormat\", this.state.Date_Time_format);\r\n    // data.append(\"locale\", this.state.Locale);\r\n    // data.append(\"timeZone\", this.state.T_Zone);\r\n    // data.append(\"currency\", this.state.Currency);\r\n    // if (this.state.selectedFile !== null) {\r\n    //   data.append(\"file\", this.state.selectedFile);\r\n    // }\r\n    if (this.state.password) {\r\n      if (this.state.password == this.state.cnfmPassword) {\r\n        EditUserProfile(userData?.accountId, data)\r\n          .then((response) => {\r\n            console.log(response);\r\n            let userData = { ...response?.updateUser[0], ...response?.user };\r\n            this.context?.setUserInformatio(userData);\r\n            localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n\r\n            if (response?.status) {\r\n              swal(\"Success!\", \"Updated Successfully\", \"success\");\r\n              this.setState({ Loading: \"Submit\" });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            swal(\"Error!\", \"Something went Wrong\", \"error\");\r\n            this.setState({ Loading: \"Submit\" });\r\n            console.log(error.response);\r\n          });\r\n      } else {\r\n        swal(\"Password Does Not Match\");\r\n        this.setState({ Loading: \"Submit\" });\r\n      }\r\n    } else {\r\n      EditUserProfile(userData?.accountId, data)\r\n        .then((response) => {\r\n          console.log(response);\r\n          let userData = { ...response?.updateUser[0], ...response?.user };\r\n          this.context?.setUserInformatio(userData);\r\n          localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n\r\n          if (response?.status) {\r\n            swal(\"Success!\", \"Updated Successfully\", \"success\");\r\n            this.setState({ Loading: \"Submit\" });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"object\");\r\n          swal(\"Error!\", \"Something went Wrong\", \"error\");\r\n          console.log(error.response);\r\n          this.setState({ Loading: \"Submit\" });\r\n        });\r\n    }\r\n  };\r\n  HandleUploadLogo = async (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let formData = new FormData();\r\n    formData.append(\"created_by\", pageparmission?._id);\r\n    formData.append(\"email\", this.state.email);\r\n    formData.append(\"name\", this.state.companyName);\r\n    formData.append(\"mobileNo\", this.state.CompanyNumber);\r\n    formData.append(\"file\", this.state.Companylogo);\r\n    formData.append(\"gstNo\", this.state.gstNumber);\r\n    formData.append(\"Prefix\", this.state.Prefix);\r\n    formData.append(\"Suffix\", this.state.Suffix);\r\n    formData.append(\"address\", this.state.CompanyAddress);\r\n    formData.append(\"signature\", this.state.Signature);\r\n    formData.append(\"reDate\", this.state.redate);\r\n\r\n    await Create_CompanyDetails(formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"Company Details are Added Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    console.log(this.state.Loading);\r\n    this.toggleModal();\r\n  };\r\n  render() {\r\n    console.log(this.context);\r\n    const { selectedCountry, selectedState, selectedCity } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Profile\"\r\n          breadCrumbParent=\"Pages\"\r\n          breadCrumbActive=\"Profile\"\r\n        />\r\n        <div id=\"user-profile\">\r\n          <Row className=\"m-0 justify-content-center\">\r\n            <Col lg=\"4\" md=\"4\" xl=\"4\" sm=\"12\">\r\n              <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n                <div className=\"profile-img text-center st-1\">\r\n                  <ul\r\n                    style={{ listStyleType: \"none\" }}\r\n                    className=\"lst-1 usrdatlist\">\r\n                    <li className=\"lst-2 p-1\">\r\n                      FirstName:\r\n                      <span className=\"lst-3\">\r\n                        <strong>\r\n                          {this.context?.UserInformatio.firstName}\r\n                        </strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      LastName:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio.lastName}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      Email:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.email}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      Country:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.Country}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      State:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.State}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      City:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.City}</strong>\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              sm=\"12\"\r\n              xl=\"8\"\r\n              lg=\"8\"\r\n              md=\"8\"\r\n              className=\"d-flex justify-content-center\">\r\n              <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n                <Row className=\"container p-2\">\r\n                  <Col>\r\n                    <span className=\"mb-2 mt-2\">Edit Profile</span>\r\n                  </Col>\r\n                  <Col>\r\n                    <Badge\r\n                      color=\"primary\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({ Addcolor: true });\r\n                      }}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"mb-1\">\r\n                      Choose Background color\r\n                    </Badge>\r\n                    {this.state.Addcolor && this.state.Addcolor && (\r\n                      <>\r\n                        <div className=\"mt-1\">\r\n                          <input\r\n                            onChange={(e) => {\r\n                              localStorage.setItem(\r\n                                \"UserDefinedcoler\",\r\n                                e.target.value\r\n                              );\r\n                              this.context?.SetmyCustomColor(e.target.value);\r\n                            }}\r\n                            type=\"color\"\r\n                            className=\"\"\r\n                          />\r\n                          <Badge\r\n                            className=\"mx-3\"\r\n                            color=\"primary\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              this.setState({ Addcolor: false });\r\n                            }}>\r\n                            Submit\r\n                          </Badge>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </Col>\r\n                  {this.state.LoginData?.rolename?.position == 1 ? (\r\n                    <>\r\n                      <Col>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                          <Badge\r\n                            style={{ cursor: \"pointer\" }}\r\n                            className=\"\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              this.toggleModal();\r\n                              this.setState({ Createmode: false });\r\n                            }}\r\n                            color=\"primary\">\r\n                            Add Company Details\r\n                          </Badge>\r\n                          <Badge\r\n                            onClick={async (e) => {\r\n                              e.preventDefault();\r\n                              this.toggleModal();\r\n                              this.setState({ Createmode: true });\r\n                            }}\r\n                            color=\"primary\"\r\n                            className=\" ml-3\">\r\n                            View\r\n                          </Badge>\r\n                        </div>\r\n                      </Col>\r\n                    </>\r\n                  ) : null}\r\n                </Row>\r\n                <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                  <div className=\"st-2\">\r\n                    <CardTitle></CardTitle>\r\n\r\n                    <Row className=\"m-0\">\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>FirstName</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          placeholder=\"FirstName\"\r\n                          value={this.state.firstName}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>LastName</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          placeholder=\"LastName\"\r\n                          value={this.state.name}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Email</Label>\r\n                        <Input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Select Country</Label>\r\n                          <Select\r\n                            options={Country.getAllCountries()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={selectedCountry}\r\n                            onChange={this.handleCountryChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Select State</Label>\r\n                          <Select\r\n                            options={State?.getStatesOfCountry(\r\n                              selectedCountry?.isoCode\r\n                            )}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={selectedState}\r\n                            onChange={this.handleStateChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Select City</Label>\r\n                          <Select\r\n                            options={City.getCitiesOfState(\r\n                              selectedState?.countryCode,\r\n                              selectedState?.isoCode\r\n                            )}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={selectedCity}\r\n                            onChange={this.handleCityChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Password</Label>\r\n                        <Input\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"Password\"\r\n                          value={this.state.password}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Confirm Password</Label>\r\n                        <Input\r\n                          type=\"password\"\r\n                          name=\"cnfmPassword\"\r\n                          placeholder=\"Reset password\"\r\n                          value={this.state.cnfmPassword}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <CheckBoxesVuexy\r\n                          color=\"primary\"\r\n                          className=\"mb-1 mx-1\"\r\n                          icon={<Check className=\"vx-icon\" size={16} />}\r\n                          label=\" I accept the terms & conditions.\"\r\n                          defaultChecked={true}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <Button.Ripple color=\"primary\" type=\"submit\">\r\n                        {this.state.Loading}\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggleModal}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.toggleModal}>\r\n            Add Company Details\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            {this.state.Createmode && this.state.Createmode ? (\r\n              <>\r\n                <h2>Existing Details</h2>\r\n                <div className=\"p-1\">\r\n                  Name: {this.state.CompanyDetails?.name}\r\n                </div>\r\n                <div className=\"p-1\">\r\n                  GST Number: {this.state.CompanyDetails?.gstNo}\r\n                </div>\r\n                <div className=\"p-1\">\r\n                  Address: {this.state.CompanyDetails?.address}\r\n                </div>\r\n                <div className=\"p-1\">\r\n                  mobileNo: {this.state.CompanyDetails?.mobileNo}\r\n                </div>\r\n                <div className=\"p-1\">\r\n                  Email: {this.state.CompanyDetails?.email}\r\n                </div>\r\n                <div className=\"p-1\">\r\n                  Logo:{\" \"}\r\n                  {this.state.CompanyDetails?.logo && (\r\n                    <img\r\n                      width={100}\r\n                      className=\"mx-1\"\r\n                      height={80}\r\n                      src={`${Image_URL}/Images/${this.state.CompanyDetails?.logo}`}\r\n                      alt=\"NA\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"p-1\">\r\n                  signature:{\" \"}\r\n                  {this.state.CompanyDetails?.signature &&\r\n                    this.state.CompanyDetails?.signature && (\r\n                      <img\r\n                        className=\"mx-1\"\r\n                        width={60}\r\n                        height={60}\r\n                        src={`${Image_URL}/Images/${this.state.CompanyDetails?.signature}`}\r\n                        alt=\"NA\"\r\n                      />\r\n                    )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {this.state.LoginData?.rolename?.position == 1 ? (\r\n                  <>\r\n                    <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n                      <Form className=\"p-1\" onSubmit={this.HandleUploadLogo}>\r\n                        <div className=\"st-2\">\r\n                          <CardTitle>\r\n                            <h4 className=\"mb-3\">Add Company Details</h4>\r\n                          </CardTitle>\r\n\r\n                          <Row className=\"m-0\">\r\n                            <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                              <Label>signature</Label>\r\n                              <CustomInput\r\n                                required\r\n                                type=\"file\"\r\n                                placeholder=\"Signature\"\r\n                                onChange={(e) =>\r\n                                  this.setState({\r\n                                    Signature: e.target.files[0],\r\n                                  })\r\n                                }\r\n                              />\r\n                            </Col>\r\n                            <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                              <Label>Company Logo</Label>\r\n                              <CustomInput\r\n                                required\r\n                                type=\"file\"\r\n                                placeholder=\"Companylogo\"\r\n                                onChange={(e) =>\r\n                                  this.setState({\r\n                                    Companylogo: e.target.files[0],\r\n                                  })\r\n                                }\r\n                              />\r\n                            </Col>\r\n                            <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                              <Label>GST Number *</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                required\r\n                                minLength={15}\r\n                                maxLength={15}\r\n                                name=\"gstNumber\"\r\n                                className=\"from-control\"\r\n                                placeholder=\" Enter Coorrect GST Number\"\r\n                                value={this.state.gstNumber}\r\n                                onChange={(e) => {\r\n                                  let value = e.target.value;\r\n                                  this.setState({ gstNumber: value });\r\n\r\n                                  if (value?.length == 15) {\r\n                                    (async () => {\r\n                                      await _Get(GST_Verification_Api, value)\r\n                                        .then((res) => {\r\n                                          console.log(res);\r\n                                          if (res?.flag) {\r\n                                            this.setState({\r\n                                              CompanyAddress:\r\n                                                res?.data?.pradr?.adr,\r\n                                              companyName: res?.data?.tradeNam,\r\n                                              redate: res?.data?.rgdt,\r\n                                            });\r\n                                          } else {\r\n                                            swal(\"Error\", res?.message);\r\n                                            this.setState({\r\n                                              CompanyAddress: \"\",\r\n                                              companyName: \"\",\r\n                                              redate: \"\",\r\n                                            });\r\n                                          }\r\n                                        })\r\n                                        .catch((err) => {\r\n                                          swal(\"error\", \"somthing went Wrong\");\r\n                                          console.log(err);\r\n                                        });\r\n                                    })();\r\n                                  }\r\n                                }}\r\n                                // onChange={this.changeHandler}\r\n                              />\r\n                            </Col>\r\n                            {this.state.redate && (\r\n                              <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                                <Label>Registration Date</Label>\r\n                                <Input\r\n                                  readOnly\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"redate\"\r\n                                  placeholder=\"18/12/2024\"\r\n                                  value={this.state.redate}\r\n                                  onChange={this.changeHandler}\r\n                                />\r\n                              </Col>\r\n                            )}\r\n                            {this.state.companyName && (\r\n                              <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                                <Label>Company Name</Label>\r\n                                <input\r\n                                  readOnly\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"companyName\"\r\n                                  placeholder=\"Company Address\"\r\n                                  value={this.state.companyName}\r\n                                  // onChange={this.changeHandler}\r\n                                />\r\n                              </Col>\r\n                            )}\r\n                            {this.state.CompanyAddress && (\r\n                              <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                                <Label>Company Address</Label>\r\n                                <textarea\r\n                                  readOnly\r\n                                  type=\"textarea\"\r\n                                  className=\"form-control\"\r\n                                  name=\"CompanyAddress\"\r\n                                  placeholder=\"Company Address\"\r\n                                  value={this.state.CompanyAddress}\r\n                                  // onChange={this.changeHandler}\r\n                                />\r\n                              </Col>\r\n                            )}\r\n\r\n                            <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                              <Label>Company Number</Label>\r\n                              <Input\r\n                                required\r\n                                type=\"text\"\r\n                                className=\"formControl\"\r\n                                name=\"CompanyNumber\"\r\n                                placeholder=\"Company Number\"\r\n                                value={this.state.CompanyNumber}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                              <Label>Company Email</Label>\r\n                              <Input\r\n                                required\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"container\">\r\n                            {/* <div className=\"d-flex justify-content-center\">\r\n                              <h3>Add Bills Prefix and Suffix</h3>\r\n                            </div> */}\r\n                            <Row>\r\n                              <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                                <Label>Bill Prefix</Label>\r\n                                <Input\r\n                                  required\r\n                                  type=\"text\"\r\n                                  name=\"Prefix\"\r\n                                  className=\"from-control\"\r\n                                  placeholder=\"Prefix Enter here\"\r\n                                  value={this.state.Prefix}\r\n                                  onChange={this.changeHandler}\r\n                                />\r\n                              </Col>\r\n                              <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                                <Label>Bill Postfix</Label>\r\n                                <Input\r\n                                  required\r\n                                  type=\"text\"\r\n                                  name=\"Suffix\"\r\n                                  className=\"from-control\"\r\n                                  placeholder=\"suffix Enter here\"\r\n                                  value={this.state.Suffix}\r\n                                  onChange={(e) => {\r\n                                    const newValue = e.target.value.replace(\r\n                                      /[^0-9]/g,\r\n                                      \"\"\r\n                                    );\r\n                                    this.setState({ Suffix: newValue });\r\n                                  }}\r\n                                  // onChange={this.changeHandler}\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                          <Row>\r\n                            <Col>\r\n                              <CheckBoxesVuexy\r\n                                color=\"primary\"\r\n                                className=\"mb-1 mx-1\"\r\n                                icon={<Check className=\"vx-icon\" size={16} />}\r\n                                label=\" I accept the terms & conditions.\"\r\n                                defaultChecked={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"d-flex justify-content-center\">\r\n                            <Button.Ripple color=\"primary\" type=\"submit\">\r\n                              {this.state.Loading}\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </Form>\r\n                    </Card>\r\n                  </>\r\n                ) : null}\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default UserProfile;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}