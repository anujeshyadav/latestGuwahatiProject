{"version":3,"sources":["../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Collapse.js","../node_modules/reactstrap/es/UncontrolledCollapse.js","components/reactstrap/collapse/CollapseSourceCode.js","components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/Accordion.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js"],"names":["t","n","util","clone","languages","javascript","e","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","content","map","join","g","length","o","i","type","tagName","pop","push","openedBraces","r","splice","Token","hooks","add","language","tokens","Prism","_transitionStatusToCl","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","Transition","isOpen","PropTypes","bool","children","oneOfType","arrayOf","node","tagPropType","className","navbar","cssModule","innerRef","func","string","defaultProps","appear","enter","exit","timeout","TransitionTimeouts","Collapse","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","props","_this","call","this","state","height","name","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","onEntering","isAppearing","setState","onEntered","onExit","onExiting","offsetHeight","onExited","render","_this2","_this$props","Tag","otherProps","_objectWithoutPropertiesLoose","transitionProps","pick","TransitionPropTypeKeys","childProps","omit","React","createElement","_extends","in","status","collapseClass","getTransitionClass","classes","mapToCssModules","classNames","style","ref","Component","omitKeys","defaultOpen","toggler","isRequired","toggleEvents","defaultToggleEvents","UncontrolledCollapse","togglers","removeEventListeners","toggle","componentDidMount","findDOMElements","addMultipleEventListeners","componentWillUnmount","_ref","preventDefault","accordion","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault","collapseItems","id","title","CollapseDefault","activeTab","toggleTab","tab","toggleCollapse","collapseID","index","indexOf","items","includes","renderCollapse","collapseItem","Card","onClick","classnames","closing","opening","CardHeader","CardTitle","size","CardBody","Fragment","Nav","tabs","NavItem","NavLink","active","TabContent","TabPane","tabId","CollapseUncontrolled","Accordion","prevState","accordionItems","AccordionShadow","accordionShadowItems","open","AccordionBorder","accordionBorderItems","AccordionMargin","accordionMarginItems","AccordionHover","accordionHoverItems","onMouseEnter","Collaspe","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg"],"mappings":"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","file":"static/js/296.08770811.chunk.js","sourcesContent":["!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar _transitionStatusToCl;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread(_objectSpread({}, Transition.propTypes), {}, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread(_objectSpread({}, childProps.style), style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;","import React from \"react\"\r\n\r\nexport const accordion = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Accordion`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionShadow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionShadowItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className={classnames({\r\n                open: collapseItem.id === this.state.collapseID\r\n              })}\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\r\n      {accordionShadowItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionBorder = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionBorderItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className=\"collapse-border-item\"\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\r\n      {accordionBorderItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionMargin = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionMarginItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionMarginItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionHover = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionHoverItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionHoverItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseUncontrolled = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {UncontrolledCollaspe} from \"reactstrap\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        <Card>\r\n          <CardHeader id=\"item-1\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 1\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-1\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-2\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 2\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-2\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-3\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 3\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-3\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-4\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 4\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-4\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collaspe} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n\r\n  state = {\r\n    collapseItems: []\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={this.onEntering}\r\n            onEntered={this.onEntered}\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        {renderCollapse}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseDefault } from \"./CollapseSourceCode\"\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseItems: [],\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id)\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With basic collapse you can open multiple items at a time. to add\r\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\r\n              collapse cards.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {renderCollapse}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n","import React from \"react\"\r\nimport {\r\n  UncontrolledCollapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Collapse Uncontrolled</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With uncontrolled collapse you don't have to manage state you can\r\n              toggle collapse with <code>id</code> and <code>toggler</code>\r\n              attribute\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  <Card>\r\n                    <CardHeader id=\"item-1\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 1\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-1\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-2\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 2\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-2\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-3\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 3\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-3\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-4\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 4\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-4\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseUncontrolled}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordion } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              You may want to open one item at a time for that you can use\r\n              accordion.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordion}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Accordion\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionShadow } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionShadowItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            open: collapseItem.id === this.state.collapseID\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Shadow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              use class <code>.accordion-shadow</code> as a wrapper of your\r\n              accordion/collapse card for shadow.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\r\n                  {accordionShadowItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionShadow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionBorder } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionBorderItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames(\"collapse-border-item\", {\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Border</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-border-item</code> with your collapsible\r\n              card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionBorder}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionMargin } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <div className=\"collapse-margin\" key={collapseItem.id}>\r\n          <Card\r\n            onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            className={classnames({\r\n              \"collapse-collapsed\":\r\n                this.state.status === \"Closed\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              \"collapse-shown\":\r\n                this.state.status === \"Opened\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              closing:\r\n                this.state.status === \"Closing...\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              opening:\r\n                this.state.status === \"Opening...\" &&\r\n                this.state.collapseID === collapseItem.id\r\n            })}\r\n          >\r\n            <CardHeader>\r\n              <CardTitle className=\"lead collapse-title collapsed\">\r\n                {collapseItem.title}\r\n              </CardTitle>\r\n              <ChevronDown size={15} className=\"collapse-icon\" />\r\n            </CardHeader>\r\n            <Collapse\r\n              isOpen={collapseItem.id === this.state.collapseID}\r\n              onEntering={() => this.onEntering(collapseItem.id)}\r\n              onEntered={() => this.onEntered(collapseItem.id)}\r\n              onExiting={() => this.onExiting(collapseItem.id)}\r\n              onExited={() => this.onExited(collapseItem.id)}\r\n            >\r\n              <CardBody>{collapseItem.content}</CardBody>\r\n            </Collapse>\r\n          </Card>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Margin</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-Margin</code> as a wrapper of your\r\n              collapseible card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionMargin}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionHover } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionHoverItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\r\n          key={collapseItem.id}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Hover</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\r\n              <code>mouseEnter</code> instead of <code>onClick</code>\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionHoverItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionHover}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n","import React from \"react\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport CollapseDefault from \"./CollapseDefault\"\r\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\r\nimport Accordion from \"./Accordion\"\r\nimport AccordionShadow from \"./AccordionShadow\"\r\nimport AccordionBorder from \"./AccordionBorder\"\r\nimport AccordionMargin from \"./AccordionMargin\"\r\nimport AccordionHover from \"./AccordionHover\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Collaspe extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Collapse\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Collapse\"\r\n        />\r\n        <Row>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseDefault />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseUncontrolled />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <Accordion />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionShadow />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionBorder />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionMargin />\r\n          </Col>\r\n        </Row>\r\n        <AccordionHover />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Collaspe\r\n"],"sourceRoot":""}