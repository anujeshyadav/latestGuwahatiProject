{"version":3,"sources":["extensions/extensionsHeader.js","extensions/drag-and-drop/DndVertical.js","extensions/drag-and-drop/DndCards.js","extensions/drag-and-drop/DndMultiple.js","extensions/drag-and-drop/DragAndDrop.js"],"names":["ExtensionsHeader","className","sm","data-tour","this","props","title","link","href","target","rel","subTitle","React","Component","listItems","id","img","img1","name","content","img2","img3","img4","img5","getItems","count","map","k","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","DndVertical","state","items","onDragEnd","destination","source","index","setState","Card","CardHeader","CardTitle","CardBody","ListGroup","droppableId","provided","snapshot","ref","innerRef","item","key","draggableId","draggableProps","dragHandleProps","ListGroupItem","Media","left","tag","object","src","alt","height","width","body","placeholder","dragItems","DndHorizontal","direction","deviceWidth","window","updateDnd","innerWidth","prevProps","prevState","addEventListener","droppableProps","listItems2","img6","img7","img8","img9","img10","arr","move","droppableSource","droppableDestination","sourceClone","destClone","DndMultiple","selected","id2List","droppable","droppable2","getList","Row","Col","md","flush","DragAndDrop","Fragment"],"mappings":"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","file":"static/js/300.6a3db1f3.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import { Star } from \"react-feather\"\r\n\r\nclass ExtensionsHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"mb-2\">\r\n        <Col sm=\"12\" className=\"ml-50\">\r\n          <p\r\n            className=\"font-medium-5 mt-1 extension-title\"\r\n            data-tour=\"extension-title\"\r\n          >\r\n            {this.props.title}\r\n          </p>\r\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {this.props.subTitle}\r\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default ExtensionsHeader\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Media\r\n} from \"reactstrap\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\nimport img1 from \"../../assets/img/portrait/small/avatar-s-12.jpg\"\r\nimport img2 from \"../../assets/img/portrait/small/avatar-s-1.jpg\"\r\nimport img3 from \"../../assets/img/portrait/small/avatar-s-2.jpg\"\r\nimport img4 from \"../../assets/img/portrait/small/avatar-s-3.jpg\"\r\nimport img5 from \"../../assets/img/portrait/small/avatar-s-4.jpg\"\r\n\r\nconst listItems = [\r\n  {\r\n    id: \"1\",\r\n    img: img1,\r\n    name: \"Mary S. Navarre\",\r\n    content:\r\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    img: img2,\r\n    name: \"Samuel M. Ellis\",\r\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    img: img3,\r\n    name: \"Sandra C. Toney\",\r\n    content:\r\n      \"Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa chupsake.\"\r\n  },\r\n  {\r\n    id: \"4\",\r\n    img: img4,\r\n    name: \"Cleveland C. Goins\",\r\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\r\n  },\r\n  {\r\n    id: \"5\",\r\n    img: img5,\r\n    name: \"Linda M. English\",\r\n    content:\r\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\r\n  }\r\n]\r\n\r\n// get data from array\r\nconst getItems = count =>\r\n  listItems.map(k => ({\r\n    id: k.id,\r\n    content: k.content,\r\n    img: k.img,\r\n    name: k.name\r\n  }))\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list)\r\n  const [removed] = result.splice(startIndex, 1)\r\n  result.splice(endIndex, 0, removed)\r\n  return result\r\n}\r\n\r\nclass DndVertical extends React.Component {\r\n  state = {\r\n    items: getItems()\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    )\r\n\r\n    this.setState({\r\n      items\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Basic List Group Sortable</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ListGroup id=\"list-group-dnd\">\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                  <div ref={provided.innerRef}>\r\n                    {this.state.items.map((item, index) => (\r\n                      <Draggable\r\n                        key={item.id}\r\n                        draggableId={item.id}\r\n                        index={index}\r\n                      >\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            className=\"drag-wrapper\"\r\n                          >\r\n                            <ListGroupItem>\r\n                              <Media>\r\n                                <Media left tag=\"div\">\r\n                                  <Media\r\n                                    object\r\n                                    src={item.img}\r\n                                    className=\"rounded-circle mr-2\"\r\n                                    alt=\"Generic placeholder image\"\r\n                                    height=\"50\"\r\n                                    width=\"50\"\r\n                                  />\r\n                                </Media>\r\n                                <Media body>\r\n                                  <h5 className=\"mt-0\">{item.name}</h5>\r\n                                  {item.content}\r\n                                </Media>\r\n                              </Media>\r\n                            </ListGroupItem>\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </ListGroup>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DndVertical\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n\r\nconst dragItems = [\r\n  {\r\n    id: \"1\",\r\n    title: \"Draggable Card 1\",\r\n    content:\r\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"Draggable Card 2\",\r\n    content:\r\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"Draggable Card 3\",\r\n    content:\r\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\r\n  },\r\n  {\r\n    id: \"4\",\r\n    title: \"Draggable Card 4\",\r\n    content:\r\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\r\n  }\r\n]\r\n\r\n// get data from array\r\nconst getItems = count =>\r\n  dragItems.map(k => ({\r\n    id: k.id,\r\n    title: k.title,\r\n    content: k.content\r\n  }))\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list)\r\n  const [removed] = result.splice(startIndex, 1)\r\n  result.splice(endIndex, 0, removed)\r\n  return result\r\n}\r\n\r\nclass DndHorizontal extends React.Component {\r\n  state = {\r\n    items: getItems(),\r\n    direction: \"horizontal\",\r\n    deviceWidth: window.width\r\n  }\r\n\r\n  updateDnd = () => {\r\n    this.setState({\r\n      deviceWidth: window.innerWidth\r\n    })\r\n    if (this.state.deviceWidth <= 992) {\r\n      this.setState({\r\n        direction: \"vertical\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        direction: \"horizontal\"\r\n      })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.updateDnd()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    window.addEventListener(\"resize\", this.updateDnd)\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    )\r\n\r\n    this.setState({\r\n      items\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\" direction={this.state.direction}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              className=\"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\"\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <Card\r\n                        className={`draggable-cards ${\r\n                          item.id !== 4 ? \"mr-1\" : null\r\n                        }`}\r\n                      >\r\n                        <CardHeader>\r\n                          <CardTitle>{item.title}</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>{item.content}</CardBody>\r\n                      </Card>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DndHorizontal\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Media,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\nimport img1 from \"../../assets/img/portrait/small/avatar-s-12.jpg\"\r\nimport img2 from \"../../assets/img/portrait/small/avatar-s-1.jpg\"\r\nimport img3 from \"../../assets/img/portrait/small/avatar-s-2.jpg\"\r\nimport img4 from \"../../assets/img/portrait/small/avatar-s-3.jpg\"\r\nimport img5 from \"../../assets/img/portrait/small/avatar-s-4.jpg\"\r\nimport img6 from \"../../assets/img/portrait/small/avatar-s-5.jpg\"\r\nimport img7 from \"../../assets/img/portrait/small/avatar-s-6.jpg\"\r\nimport img8 from \"../../assets/img/portrait/small/avatar-s-7.jpg\"\r\nimport img9 from \"../../assets/img/portrait/small/avatar-s-8.jpg\"\r\nimport img10 from \"../../assets/img/portrait/small/avatar-s-9.jpg\"\r\n\r\nconst listItems = [\r\n  {\r\n    id: \"1\",\r\n    img: img1,\r\n    name: \"Mary S. Navarre\",\r\n    content:\r\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    img: img2,\r\n    name: \"Samuel M. Ellis\",\r\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    img: img3,\r\n    name: \"Sandra C. Toney\",\r\n    content:\r\n      \"Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.\"\r\n  },\r\n  {\r\n    id: \"4\",\r\n    img: img4,\r\n    name: \"Cleveland C. Goins\",\r\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\r\n  },\r\n  {\r\n    id: \"5\",\r\n    img: img5,\r\n    name: \"Linda M. English\",\r\n    content:\r\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\r\n  }\r\n]\r\n\r\nconst listItems2 = [\r\n  {\r\n    id: \"6\",\r\n    img: img6,\r\n    name: \"Alexandria I. Smelser\",\r\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\r\n  },\r\n  {\r\n    id: \"7\",\r\n    img: img7,\r\n    name: \"Oscar N. Pool\",\r\n    content:\r\n      \"Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.\"\r\n  },\r\n  {\r\n    id: \"8\",\r\n    img: img8,\r\n    name: \"Kathy A. Alvarado\",\r\n    content:\r\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\r\n  },\r\n  {\r\n    id: \"9\",\r\n    img: img9,\r\n    name: \"James E. White\",\r\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\r\n  },\r\n  {\r\n    id: \"10\",\r\n    img: img10,\r\n    name: \"Roberta R. Babin\",\r\n    content:\r\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\r\n  }\r\n]\r\n\r\n// get data from array\r\nconst getItems = arr =>\r\n  arr.map(k => ({\r\n    id: k.id,\r\n    content: k.content,\r\n    img: k.img,\r\n    name: k.name\r\n  }))\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list)\r\n  const [removed] = result.splice(startIndex, 1)\r\n  result.splice(endIndex, 0, removed)\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source)\r\n  const destClone = Array.from(destination)\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed)\r\n\r\n  const result = {}\r\n  result[droppableSource.droppableId] = sourceClone\r\n  result[droppableDestination.droppableId] = destClone\r\n\r\n  return result\r\n}\r\n\r\nclass DndMultiple extends React.Component {\r\n  state = {\r\n    items: getItems(listItems),\r\n    selected: getItems(listItems2)\r\n  }\r\n\r\n  id2List = {\r\n    droppable: \"items\",\r\n    droppable2: \"selected\"\r\n  }\r\n\r\n  getList = id => this.state[this.id2List[id]]\r\n\r\n  onDragEnd = result => {\r\n    const { source, destination } = result\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(\r\n        this.getList(source.droppableId),\r\n        source.index,\r\n        destination.index\r\n      )\r\n\r\n      let state = { items }\r\n\r\n      if (source.droppableId === \"droppable2\") {\r\n        state = { selected: items }\r\n      }\r\n\r\n      this.setState(state)\r\n    } else {\r\n      const result = move(\r\n        this.getList(source.droppableId),\r\n        this.getList(destination.droppableId),\r\n        source,\r\n        destination\r\n      )\r\n\r\n      this.setState({\r\n        items: result.droppable,\r\n        selected: result.droppable2\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Multiple Drop Target</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div>\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n              <Row>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <h4 className=\"my-1\">People Group 1</h4>\r\n                  <ListGroup flush>\r\n                    <Droppable droppableId=\"droppable\">\r\n                      {(provided, snapshot) => (\r\n                        <div ref={provided.innerRef}>\r\n                          {this.state.items.map((item, index) => (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                            >\r\n                              {(provided, snapshot) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                >\r\n                                  <ListGroupItem>\r\n                                    <Media>\r\n                                      <Media left tag=\"div\">\r\n                                        <Media\r\n                                          object\r\n                                          src={item.img}\r\n                                          className=\"rounded-circle mr-2\"\r\n                                          alt=\"Generic placeholder image\"\r\n                                          height=\"50\"\r\n                                          width=\"50\"\r\n                                        />\r\n                                      </Media>\r\n                                      <Media body>\r\n                                        <h5 className=\"mt-0\">{item.name}</h5>\r\n                                        {item.content}\r\n                                      </Media>\r\n                                    </Media>\r\n                                  </ListGroupItem>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  </ListGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <h4 className=\"my-1\">People Group 2</h4>\r\n                  <ListGroup flush>\r\n                    <Droppable droppableId=\"droppable2\">\r\n                      {(provided, snapshot) => (\r\n                        <div ref={provided.innerRef}>\r\n                          {this.state.selected.map((item, index) => (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                            >\r\n                              {(provided, snapshot) => (\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                >\r\n                                  <ListGroupItem>\r\n                                    <Media>\r\n                                      <Media left tag=\"div\">\r\n                                        <Media\r\n                                          object\r\n                                          src={item.img}\r\n                                          className=\"rounded-circle mr-2\"\r\n                                          alt=\"Generic placeholder image\"\r\n                                          height=\"50\"\r\n                                          width=\"50\"\r\n                                        />\r\n                                      </Media>\r\n                                      <Media body>\r\n                                        <h5 className=\"mt-0\">{item.name}</h5>\r\n                                        {item.content}\r\n                                      </Media>\r\n                                    </Media>\r\n                                  </ListGroupItem>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          ))}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </DragDropContext>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DndMultiple\r\n","import React from \"react\"\r\nimport ExtensionsHeader from \"../extensionsHeader\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport DndVertical from \"./DndVertical\"\r\nimport DndHorizontal from \"./DndCards\"\r\nimport DndMultiple from \"./DndMultiple\"\r\n\r\nimport \"../../assets/scss/plugins/extensions/drag-and-drop.scss\"\r\n\r\nclass DragAndDrop extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ExtensionsHeader\r\n          title=\"React Beautiful Drag And Drop\"\r\n          subTitle=\"Beautiful and accessible drag and drop for lists with React\"\r\n          link=\"https://github.com/atlassian/react-beautiful-dnd\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <DndHorizontal />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <DndVertical />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <DndMultiple />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragAndDrop\r\n"],"sourceRoot":""}