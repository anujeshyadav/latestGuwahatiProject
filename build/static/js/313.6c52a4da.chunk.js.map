{"version":3,"sources":["../node_modules/reactstrap/es/InputGroup.js","views/apps/freshlist/customer/Ticketing/CreateTicket.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["_excluded","propTypes","tag","tagPropType","size","PropTypes","string","className","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","i","CreateTicket","args","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","StatusDropDown","setStatusDropDown","UserInfo","setUserInfo","error","setError","randomNumber","setRandomNumber","modal","setModal","toggle","modalone","setModalone","useContext","UserContext","name","JSON","parse","localStorage","getItem","UserName","userRole","Role","comment","time","Date","Comments","setComments","files","formValues","setFormValues","newComment","userName","toString","handleopentoggle","handleopentoggleone","handleInputChange","e","type","target","value","checked","test","length","useEffect","ticketToolList","then","res","console","log","TicketTool","lastElement","id","prefix","substring","number","parseInt","match","catch","err","userInfo","TicketTool_ViewData","jsonData","xmlJs","xml2json","data","compact","spaces","createTicket","CurrentStatus","MyDropDown","dropdown","CheckBox","input","map","ele","_text","submitHandler","preventDefault","formdata","FormData","append","Parts","Product","stringify","user","myarr","newdata","Array","from","push","totalimg","flat","entries","key","ticketToolSave","swal","style","justifyContent","label","required","onChange","option","dropdownpermision","_attributes","permission","split","includes","onSubmit","drop","lg","md","sm","color","lookup","placeholder","readOnly","onClick","fill","Readonly","heading","disabled","onKeyDown","marginRight","Ripple","element","newFormValues","handleComment","splice","removeFormFields","alert","multiple","selectedFiles","handleFileChange","removeFileAttach","fullscreen","backdrop","isOpen","bordered","borderless","hover","responsive","striped","children","node","row","bool","check","inline","FormGroup","_createForOfIteratorHelper","o","Symbol","iterator","isArray","F","s","n","done","_e","f","TypeError","it","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/313.6c52a4da.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"size\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Table,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  Warranty_ViewData,\r\n  CreateTicketViewData,\r\n  TicketTool_ViewData,\r\n  ticketToolSave,\r\n  ticketToolList,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst CreateTicket = (args) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [StatusDropDown, setStatusDropDown] = useState({});\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n  const [randomNumber, setRandomNumber] = useState(\"\");\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [modalone, setModalone] = useState(false);\r\n  const toggleone = () => setModalone(!modalone);\r\n  const createUserXmlView = useContext(UserContext);\r\n  const [Comments, setComments] = useState([\r\n    {\r\n      name: JSON.parse(localStorage.getItem(\"userData\")).UserName,\r\n      userRole: JSON.parse(localStorage.getItem(\"userData\")).Role,\r\n      comment: \"\",\r\n      time: new Date(),\r\n    },\r\n  ]);\r\n  const [formValues, setFormValues] = useState([{ files: [] }]);\r\n\r\n  const newComment = {\r\n    userName: JSON.parse(localStorage.getItem(\"userData\")).UserName,\r\n    Role: JSON.parse(localStorage.getItem(\"userData\")).Role,\r\n    comment: \"\",\r\n    time: new Date().toString(),\r\n  };\r\n  const handleopentoggle = () => {\r\n    toggle();\r\n  };\r\n  const handleopentoggleone = () => {\r\n    toggleone();\r\n  };\r\n\r\n  let handleComment = (i, e) => {\r\n    let newFormValues = [...Comments];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setComments(newFormValues);\r\n  };\r\n  const SubmitComment = () => {\r\n    alert(\"Comment Submit\");\r\n  };\r\n  let addFormFields = () => {\r\n    setComments([...Comments, newComment]);\r\n  };\r\n\r\n  let addFileInput = () => {\r\n    setFormValues([...formValues, { files: [] }]);\r\n  };\r\n\r\n  let removeFileAttach = (i) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let handleFileChange = (i, e) => {\r\n    const newFormValues = [...formValues];\r\n    const selectedFiles = e.target.files;\r\n    newFormValues[i].files = selectedFiles;\r\n    setFormValues(newFormValues);\r\n  };\r\n  let removeFormFields = (i) => {\r\n    let newFormValues = [...Comments];\r\n    newFormValues.splice(i, 1);\r\n    setComments(newFormValues);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(formData);\r\n    // console.log(Comments);\r\n    // console.log(formValues);\r\n  }, [formData, Comments, formValues]);\r\n  useEffect(() => {\r\n    ticketToolList()\r\n      .then((res) => {\r\n        console.log(res?.TicketTool);\r\n        if (res?.TicketTool?.length) {\r\n          const lastElement = res?.TicketTool[res?.TicketTool?.length - 1]?.id;\r\n          const prefix = lastElement.substring(0, 5);\r\n          const number = parseInt(lastElement.match(/\\d+$/)[0], 10) + 1;\r\n          const concatenatedString = prefix + number;\r\n          setRandomNumber(concatenatedString);\r\n        } else {\r\n          let numb = \"sup001\";\r\n          setRandomNumber(numb);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    let userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n    TicketTool_ViewData()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        // console.log(JSON.parse(jsonData)?.createTicket);\r\n        // console.log(\r\n        //   JSON.parse(jsonData)?.createTicket?.CurrentStatus?.MyDropDown\r\n        //     ?.dropdown\r\n        // );\r\n        setCreatAccountView(JSON.parse(jsonData));\r\n        setdropdownValue(JSON.parse(jsonData));\r\n        setStatusDropDown(\r\n          JSON.parse(jsonData)?.createTicket?.CurrentStatus?.MyDropDown\r\n            ?.dropdown\r\n        );\r\n        let value = JSON.parse(jsonData)?.createTicket?.CheckBox?.input;\r\n        value?.map((ele) => {\r\n          formData[ele?.name._text] = false;\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log(CreatAccountView?.createTicket);\r\n    let formdata = new FormData();\r\n\r\n    CreatAccountView?.createTicket?.CheckBox?.input?.map((ele) => {\r\n      formdata.append(`${ele?.name._text}`, formData[ele?.name._text]);\r\n    });\r\n\r\n    CreatAccountView?.createTicket?.Parts?.MyDropDown?.map((ele) => {\r\n      formdata.append(\r\n        `${ele?.dropdown?.name?._text}`,\r\n        formData[ele?.dropdown?.name?._text]\r\n      );\r\n    });\r\n\r\n    let dropdown =\r\n      CreatAccountView?.createTicket?.CurrentStatus?.MyDropDown?.dropdown;\r\n    if (dropdown) {\r\n      formdata.append(\r\n        `${dropdown.name?._text}`,\r\n        formData[dropdown?.name?._text]\r\n      );\r\n    }\r\n    CreatAccountView?.createTicket?.Parts?.input?.map((ele) => {\r\n      formdata.append(`${ele?.name?._text}`, formData[ele?.name?._text]);\r\n    });\r\n\r\n    CreatAccountView?.createTicket?.Product?.MyDropDown?.map((ele) => {\r\n      formdata.append(\r\n        `${ele?.dropdown?.name?._text}`,\r\n        formData[ele?.dropdown?.name?._text]\r\n      );\r\n    });\r\n\r\n    CreatAccountView?.createTicket?.Product?.input?.map((ele) => {\r\n      formdata.append(`${ele?.name?._text}`, formData[ele?.name?._text]);\r\n    });\r\n\r\n    CreatAccountView?.createTicket?.input?.map((ele) => {\r\n      formdata.append(`${ele?.name?._text}`, formData[ele?.name?._text]);\r\n    });\r\n\r\n    formdata.append(\"id\", randomNumber);\r\n    if (Comments.length > 0) {\r\n      formdata.append(`Comments`, JSON.stringify(Comments));\r\n    }\r\n\r\n    let user = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (formValues.length) {\r\n      let myarr = [];\r\n      formValues?.map((ele, i) => {\r\n        let newdata = Array.from(ele?.files);\r\n        myarr.push(newdata);\r\n      });\r\n      let totalimg = myarr.flat();\r\n      totalimg?.map((ele, i) => {\r\n        formdata.append(\"files\", ele);\r\n      });\r\n    }\r\n    if (formValues.length || formValues.length) {\r\n      formdata.append(\"Role\", user?.Role);\r\n      formdata.append(\"time\", new Date().toString());\r\n      formdata.append(\"userName\", user?.UserName);\r\n    }\r\n\r\n    for (const [key, value] of formdata.entries()) {\r\n      console.log(`Key: ${key}, Value: ${value}`);\r\n    }\r\n\r\n    await ticketToolSave(formdata)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\r\n          \"successs\",\r\n          `Support Ticket Created Successfully with id ${res?.TicketTool?.id}`\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(dropdown);\r\n      });\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div\r\n                style={{ justifyContent: \"space-between\" }}\r\n                className=\"d-flex myclasswikiheading\"\r\n              >\r\n                <h1 className=\"justify-content-start\">Create Ticket</h1>\r\n                <div className=\"mystatus\">Status : (Draft) </div>\r\n                <div className=\"mystatus\">\r\n                  <div>\r\n                    {!!StatusDropDown && !!StatusDropDown ? (\r\n                      <>\r\n                        <Label>{StatusDropDown?.label?._text}</Label>\r\n                        <CustomInput\r\n                          required\r\n                          type=\"select\"\r\n                          name={StatusDropDown?.name?._text}\r\n                          value={formData[StatusDropDown?.name?._text]}\r\n                          onChange={handleInputChange}\r\n                        >\r\n                          <option value=\"\">--Select Status---</option>\r\n                          {StatusDropDown?.option?.map((option, index) => {\r\n                            let dropdownpermision =\r\n                              option?._attributes?.permission?.split(\",\");\r\n                            let permission = dropdownpermision?.includes(\r\n                              UserInfo?.Role\r\n                            );\r\n\r\n                            return (\r\n                              <>\r\n                                {permission && (\r\n                                  <option\r\n                                    key={index}\r\n                                    value={option?._attributes?.value}\r\n                                  >\r\n                                    {option?._attributes?.value}\r\n                                  </option>\r\n                                )}\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </CustomInput>\r\n                      </>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <span>Ticket Id</span> <span># {randomNumber}</span>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {dropdownValue?.createTicket?.MyDropDown?.map((drop, i) => {\r\n                  return (\r\n                    <Col lg=\"6\" md=\"6\" key={i}>\r\n                      <FormGroup>\r\n                        <Label>{drop?.dropdown?.label?._text}</Label>\r\n                        <CustomInput\r\n                          required\r\n                          type=\"select\"\r\n                          name={drop?.dropdown?.name?._text}\r\n                          value={\r\n                            formData[drop?.dropdown?.dropdown?.name?._text]\r\n                          }\r\n                          onChange={handleInputChange}\r\n                        >\r\n                          <option value=\"\">\r\n                            --Select {drop?.dropdown.name._text}---\r\n                          </option>\r\n                          {drop.dropdown.option.map((option, index) => {\r\n                            return (\r\n                              <option\r\n                                key={index}\r\n                                value={option?._attributes?.value}\r\n                              >\r\n                                {option?._attributes?.value}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </CustomInput>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  );\r\n                })}\r\n\r\n                {/* dropdown product */}\r\n                <hr />\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Product?.MyDropDown?.map(\r\n                    (ele, i) => {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.dropdown?.label?._text}</Label>\r\n\r\n                              <CustomInput\r\n                                required\r\n                                type=\"select\"\r\n                                name={ele?.dropdown?.name?._text}\r\n                                value={formData[ele?.dropdown?.name?._text]}\r\n                                onChange={handleInputChange}\r\n                              >\r\n                                <option value=\"\">--Select---</option>\r\n                                {ele?.dropdown?.option?.map((option, index) => {\r\n                                  return (\r\n                                    <option\r\n                                      key={index}\r\n                                      value={option?._attributes?.value}\r\n                                    >\r\n                                      {option?._attributes?.value}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </CustomInput>\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  )}\r\n\r\n                {/* product inputs  */}\r\n                <Row>\r\n                  <Col>\r\n                    <hr />\r\n                  </Col>\r\n                </Row>\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Product?.input?.map(\r\n                    (ele, i) => {\r\n                      if (!!ele?.lookup) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <InputGroup className=\"maininput\">\r\n                                    <Input\r\n                                      className=\"form-control inputs\"\r\n                                      type=\"text\"\r\n                                      name={ele?.name?._text}\r\n                                      placeholder={ele?.name._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={handleInputChange}\r\n                                      readOnly\r\n                                    />{\" \"}\r\n                                    <Button\r\n                                      onClick={handleopentoggle}\r\n                                      color=\"primary\"\r\n                                      className=\"mybtn primary\"\r\n                                    >\r\n                                      <AiOutlineSearch\r\n                                        onClick={(e) => e.preventDefault()}\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </Button>\r\n                                  </InputGroup>\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else if (!!ele?.Readonly) {\r\n                        if (ele?.type._attributes?.type == \"checkbox\") {\r\n                          return (\r\n                            <>\r\n                              <Label className=\"mx-1\">\r\n                                {ele?.heading?._text}\r\n                              </Label>\r\n                              <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"mx-1\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                  />\r\n                                  <span className=\"mx-3 py-1\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <Label>{ele?.label?._text}</Label>\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"form-control\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                  />\r\n                                  <span className=\"mx-2\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n\r\n                                <Input\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    }\r\n                  )}\r\n\r\n                {/* dropdown part */}\r\n                <Row>\r\n                  <Col>\r\n                    <hr />\r\n                  </Col>\r\n                </Row>\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Parts?.MyDropDown?.map(\r\n                    (ele, i) => {\r\n                      {\r\n                        /* console.log(ele); */\r\n                      }\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.dropdown?.label?._text}</Label>\r\n\r\n                              <CustomInput\r\n                                required\r\n                                type=\"select\"\r\n                                name={ele?.dropdown?.name?._text}\r\n                                value={formData[ele?.dropdown?.name?._text]}\r\n                                onChange={handleInputChange}\r\n                              >\r\n                                <option value=\"\">--Select---</option>\r\n                                {ele?.dropdown?.option?.map((option, index) => {\r\n                                  return (\r\n                                    <option\r\n                                      key={index}\r\n                                      value={option?._attributes?.value}\r\n                                    >\r\n                                      {option?._attributes?.value}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </CustomInput>\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  )}\r\n\r\n                {/* part inputs  */}\r\n                <hr />\r\n                <hr />\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Parts?.input?.map(\r\n                    (ele, i) => {\r\n                      if (!!ele?.lookup) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <InputGroup className=\"maininput\">\r\n                                    <Input\r\n                                      className=\"form-control inputs\"\r\n                                      type=\"text\"\r\n                                      name={ele?.name?._text}\r\n                                      placeholder={ele?.name._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={handleInputChange}\r\n                                      readOnly\r\n                                    />{\" \"}\r\n                                    <Button\r\n                                      onClick={handleopentoggleone}\r\n                                      color=\"primary\"\r\n                                      className=\"mybtn primary\"\r\n                                    >\r\n                                      <AiOutlineSearch\r\n                                        onClick={(e) => e.preventDefault()}\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </Button>\r\n                                  </InputGroup>\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else if (!!ele?.Readonly) {\r\n                        if (ele?.type?._attributes?.type == \"checkbox\") {\r\n                          return (\r\n                            <>\r\n                              <Label className=\"mx-1\">\r\n                                {ele?.heading?._text}\r\n                              </Label>\r\n                              <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"mx-1\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                    onChange={handleInputChange}\r\n                                  />\r\n                                  <span className=\"mx-3 pt-1\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <Label>{ele?.label?._text}</Label>\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"form-control\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                  />\r\n                                  <span className=\"mx-2\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n\r\n                                <Input\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    }\r\n                  )}\r\n\r\n                <div className=\"container\">\r\n                  <Label className=\"py-1\">Notification</Label>\r\n                  <div>\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.createTicket?.CheckBox?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <>\r\n                              <span key={i} className=\"mx-2\">\r\n                                <Input\r\n                                  style={{ marginRight: \"3px\" }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(e, \"checkbox\")\r\n                                  }\r\n                                />{\" \"}\r\n                                <span\r\n                                  className=\"mt-1 mx-1\"\r\n                                  style={{ marginRight: \"40px\" }}\r\n                                >\r\n                                  {ele?.label?._text == \"Whatsapp\" ? (\r\n                                    <BsWhatsapp\r\n                                      className=\"mx-1\"\r\n                                      color=\"#59CE72\"\r\n                                      size={25}\r\n                                    />\r\n                                  ) : (\r\n                                    <>\r\n                                      {ele.label?._text == \"SMS\" ? (\r\n                                        <>\r\n                                          <FcPhoneAndroid size={30} />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <BiEnvelope className=\"\" size={30} />\r\n                                        </>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n\r\n              <hr />\r\n              {/* <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.createTicket?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n            {Comments &&\r\n              Comments?.map((element, index) => (\r\n                <>\r\n                  <Row key={index} className=\"my-2\">\r\n                    <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <Label>Comment</Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Comment\"\r\n                        value={element.comment || \"\"}\r\n                        onChange={(e) => handleComment(index, e)}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-2\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div>\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => removeFormFields(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div>\r\n                        <Button\r\n                          className=\"ml-1 \"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addFormFields()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              ))}\r\n            <Button\r\n              className=\"ml-1 \"\r\n              color=\"primary\"\r\n              onClick={(e) => {\r\n                SubmitComment(e);\r\n              }}\r\n            >\r\n              Submit Comment\r\n            </Button>\r\n            <div className=\"mx-1 pt-1\">\r\n              {formValues.map((index, i) => (\r\n                <>\r\n                  <label className=\"mt-1\">Attachment</label>\r\n                  <Row className=\"\">\r\n                    <Col lg=\"6\" md=\"6\" sm=\"12\" key={i}>\r\n                      <Input\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={(e) => handleFileChange(i, e)}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-2\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div>\r\n                        {i ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => removeFileAttach(i)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n                      <div>\r\n                        <Button\r\n                          className=\"ml-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addFileInput()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n      <Modal\r\n        fullscreen=\"xl\"\r\n        size=\"lg\"\r\n        backdrop={false}\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        {...args}\r\n      >\r\n        <ModalHeader toggle={toggle}>Product List</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modalheaderaddrol p-1\">\r\n            <h3>Product List</h3>\r\n            <Table\r\n              className=\"tableofrole\"\r\n              bordered\r\n              borderless\r\n              hover\r\n              responsive\r\n              size=\"sm\"\r\n              striped\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>S.No.</th>\r\n                  <th>Product Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody></tbody>\r\n            </Table>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal\r\n        fullscreen=\"xl\"\r\n        size=\"lg\"\r\n        backdrop={false}\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        {...args}\r\n      >\r\n        <ModalHeader toggle={toggle}>Part List</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modalheaderaddrol p-1\">\r\n            <h3>Part List</h3>\r\n            <Table\r\n              className=\"tableofrole\"\r\n              bordered\r\n              borderless\r\n              hover\r\n              responsive\r\n              size=\"sm\"\r\n              striped\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>S.No.</th>\r\n                  <th>Part Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody></tbody>\r\n            </Table>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateTicket;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}