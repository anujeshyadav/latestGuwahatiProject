{"version":3,"sources":["views/apps/freshlist/order/PaymentGateway.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["i","PaymentGateway","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","orderId","email","phone_no","order_zone","delivery_add","type","id","name","inline","onChange","handleSwitchChange","value","status","size","color","onClick","history","push","_id","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","onChangeHandler","event","selectedFile","target","files","selectedName","console","log","changeHandler1","e","changeHandler","submitHandler","preventDefault","FormData","append","banner_title","bannertype","file","values","keys","key","axiosConfig","post","then","response","swal","props","catch","error","get","this","sm","onSubmit","lg","required","placeholder","Ripple","col-sm-6","tag","length","right","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","F","s","n","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/318.04dc191e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"../../../../assets/css/main.css\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nclass PaymentGateway extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Order ID \",\r\n        field: \"orderId\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data.orderId}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data.email}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Phone\",\r\n        field: \"phone\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data.phone_no}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Zone\",\r\n        field: \"zone\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data.order_zone}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Delivery Address\",\r\n        field: \"delivery_address\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data.delivery_add}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Permitions\",\r\n        field: \"permitions\",\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <CustomInput\r\n              type=\"switch\"\r\n              className=\"mr-1\"\r\n              id=\"primary\"\r\n              name=\"primary\"\r\n              inline\r\n              onChange={this.handleSwitchChange}\r\n            ></CustomInput>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Canceled\" ? (\r\n            <div className=\"badge badge-pill bg-danger\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/app/freshlist/order/viewCanceled/${params.data._id}`\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/admin/canceled_order\").then((response) => {\r\n      let rowData = response.data.data;\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/admin/del_order/${id}`).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files });\r\n    this.setState({ selectedName: event.target.files.name });\r\n    console.log(event.target.files);\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"banner_title\", this.state.banner_title);\r\n    data.append(\"bannertype\", this.state.bannertype);\r\n    data.append(\"status\", this.state.status);\r\n    for (const file of this.state.selectedFile) {\r\n      if (this.state.selectedFile !== null) {\r\n        data.append(\"banner_img\", file, file.name);\r\n      }\r\n    }\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n    for (var key of data.keys()) {\r\n      console.log(key);\r\n    }\r\n    axiosConfig\r\n      .post(\"/addbanner\", data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n        this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <h2> Select Date Range</h2>\r\n          <Card>\r\n            <CardBody>\r\n              <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                <Row>\r\n                  <Col lg=\"3\" className=\"mb-2\">\r\n                    <Label>All</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"select\"\r\n                      name=\"bannertype\"\r\n                      placeholder=\"\"\r\n                      value={this.state.bannertype}\r\n                      onChange={this.changeHandler}\r\n                    >\r\n                      <option value=\"select\">--Select--</option>\r\n                      <option value=\"All\">All</option>\r\n                      <option value=\"In-house\">In-house</option>\r\n                      <option value=\"Seller\">Seller</option>\r\n                    </Input>\r\n                  </Col>\r\n                  <Col lg=\"3\" className=\"mb-2\">\r\n                    <Label>Start Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"bannertype\"\r\n                      placeholder=\"\"\r\n                      value={this.state.bannertype}\r\n                      onChange={this.changeHandler}\r\n                    ></Input>\r\n                  </Col>\r\n                  <Col lg=\"3\" className=\"mb-2\">\r\n                    <Label>End Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"bannertype\"\r\n                      placeholder=\"\"\r\n                      value={this.state.bannertype}\r\n                      onChange={this.changeHandler}\r\n                    ></Input>\r\n                  </Col>\r\n\r\n                  <Col lg=\"3\" className=\"mb-2\">\r\n                    <Button.Ripple className=\"bt\" color=\"primary\" type=\"submit\">\r\n                      Show Data\r\n                    </Button.Ripple>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Canceled List\r\n                </h1>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default PaymentGateway;\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}