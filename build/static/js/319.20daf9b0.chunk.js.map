{"version":3,"sources":["views/apps/freshlist/report/CommissionReport.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["i","CommissionReport","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","you_are","format","createdAt","comments","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","onChangeHandler","event","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","FormData","append","banner_title","bannertype","file","values","keys","key","axiosConfig","post","then","response","swal","props","history","push","catch","error","get","id","this","sm","col-sm-6","tag","length","size","right","onClick","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","F","s","n","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/319.20daf9b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Input, Label,\r\n    Row, CustomInput,\r\n    Col, Form,\r\n    UncontrolledDropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport Moment from \"react-moment\";\r\nimport swal from 'sweetalert';\r\nclass CommissionReport extends React.Component {\r\n    state = {\r\n        rowData: [],\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {\r\n            sortable: true,\r\n            editable: true,\r\n            resizable: true,\r\n            suppressMenu: true,\r\n        },\r\n        columnDefs: [\r\n            {\r\n                headerName: \"S.No\",\r\n                valueGetter: \"node.rowIndex + 1\",\r\n                field: \"node.rowIndex + 1\",\r\n                width: 150,\r\n                filter: true,\r\n            },\r\n            {\r\n                headerName: \"Order No\",\r\n                field: \"you_are\",\r\n                filter: true,\r\n                resizable: true,\r\n                width: 180,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <div className=\"ml-2\">\r\n                                <span>{params.data.you_are}</span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Vendor\",\r\n                field: \"createdAt\",\r\n                filter: \"agSetColumnFilter\",\r\n                width: 180,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <div className=\"\">\r\n                                <span>\r\n                                    <Moment format=\"lll\">{params.data.createdAt}</Moment>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Vendor Commission\",\r\n                field: \"pending_amount\",\r\n                filter: true,\r\n                resizable: true,\r\n                width: 180,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <div className=\"ml-2\">\r\n                                <span>{params.data.comments}</span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Driver\",\r\n                field: \"createdAt\",\r\n                filter: \"agSetColumnFilter\",\r\n                width: 180,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <div className=\"\">\r\n                                <span>\r\n                                    <Moment format=\"lll\">{params.data.createdAt}</Moment>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Driver Commission\",\r\n                field: \"pending_amount\",\r\n                filter: true,\r\n                resizable: true,\r\n                width: 180,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <div className=\"ml-2\">\r\n                                <span>{params.data.comments}</span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n\r\n\r\n            // {\r\n            //     headerName: \"Actions\",\r\n            //     field: \"sortorder\",\r\n            //     field: \"transactions\",\r\n            //     width: 100,\r\n            //     cellRendererFramework: (params) => {\r\n            //         return (\r\n            //             <div className=\"actions cursor-pointer\">\r\n            //                 <Eye\r\n            //                     className=\"mr-50\"\r\n            //                     size=\"25px\"\r\n            //                     color=\"green\"\r\n            //                     onClick={() =>\r\n            //                         history.push(`/app/freshlist/refundrequest/viewApprovedRequest/${params.data._id}`)}\r\n            //                 />\r\n\r\n            //             </div>\r\n            //         );\r\n            //     },\r\n            // },\r\n        ],\r\n    }\r\n    async componentDidMount() {\r\n        await axiosConfig.get(\"/allcontactus\").then((response) => {\r\n            let rowData = response.data.data;\r\n            this.setState({ rowData });\r\n        });\r\n    }\r\n\r\n    async runthisfunction(id) {\r\n        console.log(id);\r\n        await axiosConfig.get(`/delcontactus/${id}`).then((response) => {\r\n            console.log(response);\r\n        });\r\n    }\r\n    onGridReady = (params) => {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        this.setState({\r\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n            getPageSize: this.gridApi.paginationGetPageSize(),\r\n            totalPages: this.gridApi.paginationGetTotalPages(),\r\n        });\r\n    };\r\n    updateSearchQuery = (val) => {\r\n        this.gridApi.setQuickFilter(val);\r\n    };\r\n\r\n    filterSize = (val) => {\r\n        if (this.gridApi) {\r\n            this.gridApi.paginationSetPageSize(Number(val));\r\n            this.setState({\r\n                currenPageSize: val,\r\n                getPageSize: val,\r\n            });\r\n        }\r\n    };\r\n    onChangeHandler = (event) => {\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n        this.setState({ selectedName: event.target.files[0].name });\r\n        console.log(event.target.files[0]);\r\n    };\r\n    onChangeHandler = (event) => {\r\n        this.setState({ selectedFile: event.target.files });\r\n        this.setState({ selectedName: event.target.files.name });\r\n        console.log(event.target.files);\r\n    };\r\n    changeHandler1 = (e) => {\r\n        this.setState({ status: e.target.value });\r\n    };\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData();\r\n        data.append(\"banner_title\", this.state.banner_title);\r\n        data.append(\"bannertype\", this.state.bannertype);\r\n        data.append(\"status\", this.state.status);\r\n        for (const file of this.state.selectedFile) {\r\n            if (this.state.selectedFile !== null) {\r\n                data.append(\"banner_img\", file, file.name);\r\n            }\r\n        }\r\n        for (var value of data.values()) {\r\n            console.log(value);\r\n        }\r\n        for (var key of data.keys()) {\r\n            console.log(key);\r\n        }\r\n        axiosConfig.post(\"/addbanner\", data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n                this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { rowData, columnDefs, defaultColDef } = this.state;\r\n        return (\r\n            <Row className=\"app-user-list\">\r\n                <Col sm=\"12\">\r\n                    <Card>\r\n                        <Row className=\"m-2\">\r\n                            <Col>\r\n                                <h1 col-sm-6 className=\"float-left\">\r\n                                    Commission Stock\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <CardBody>\r\n                            {this.state.rowData === null ? null : (\r\n                                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                                        <div className=\"mb-1\">\r\n                                            <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                                <DropdownToggle tag=\"div\">\r\n                                                    {this.gridApi\r\n                                                        ? this.state.currenPageSize\r\n                                                        : \"\" * this.state.getPageSize -\r\n                                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                                    -{\" \"}\r\n                                                    {this.state.rowData.length -\r\n                                                        this.state.currenPageSize * this.state.getPageSize >\r\n                                                        0\r\n                                                        ? this.state.currenPageSize * this.state.getPageSize\r\n                                                        : this.state.rowData.length}{\" \"}\r\n                                                    of {this.state.rowData.length}\r\n                                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                                </DropdownToggle>\r\n                                                <DropdownMenu right>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(20)}\r\n                                                    >\r\n                                                        20\r\n                                                    </DropdownItem>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(50)}\r\n                                                    >\r\n                                                        50\r\n                                                    </DropdownItem>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(100)}\r\n                                                    >\r\n                                                        100\r\n                                                    </DropdownItem>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(134)}\r\n                                                    >\r\n                                                        134\r\n                                                    </DropdownItem>\r\n                                                </DropdownMenu>\r\n                                            </UncontrolledDropdown>\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                                            {/* <div className=\"table-input mr-1\">\r\n                                                <Input\r\n                                                    placeholder=\"search...\"\r\n                                                    onChange={(e) =>\r\n                                                        this.updateSearchQuery(e.target.value)\r\n                                                    }\r\n                                                    value={this.state.value}\r\n                                                />\r\n                                            </div> */}\r\n                                            <div className=\"export-btn\">\r\n                                                <Button.Ripple\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => this.gridApi.exportDataAsCsv()}\r\n                                                >\r\n                                                    Export as CSV\r\n                                                </Button.Ripple>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ContextLayout.Consumer>\r\n                                        {(context) => (\r\n                                            <AgGridReact\r\n                                                gridOptions={{}}\r\n                                                rowSelection=\"multiple\"\r\n                                                defaultColDef={defaultColDef}\r\n                                                columnDefs={columnDefs}\r\n                                                rowData={rowData}\r\n                                                onGridReady={this.onGridReady}\r\n                                                colResizeDefault={\"shift\"}\r\n                                                animateRows={true}\r\n                                                floatingFilter={false}\r\n                                                pagination={true}\r\n                                                paginationPageSize={this.state.paginationPageSize}\r\n                                                pivotPanelShow=\"always\"\r\n                                                enableRtl={context.state.direction === \"rtl\"}\r\n                                            />\r\n                                        )}\r\n                                    </ContextLayout.Consumer>\r\n                                </div>\r\n                            )}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default CommissionReport;","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}