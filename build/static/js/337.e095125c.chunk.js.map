{"version":3,"sources":["../node_modules/reactstrap/es/Spinner.js","views/apps/freshlist/accounts/CreateAccount.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["_excluded","propTypes","tag","tagPropType","type","PropTypes","string","size","color","className","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","i","CreateAccount","useState","setCreatAccountView","WareHouseList","setWareHouseList","SelectedWareHouse","setSelectedWareHouse","Rule","setRule","BulkImport","setBulkImport","Master","setMaster","Loader","setLoader","formData","setFormData","Image","setImage","dropdownValue","setdropdownValue","Country_State_city","setCountry_State_city","SelectedRules","SetRules","AllAssignRoleList","setAllAssignRoleList","SelectedRoleToAssign","setSelectedRoleToAssign","setindex","Mode","setMode","error","setError","WareHouseIncharge","setWareHouseIncharge","BulkUpload","setBulkUpload","history","useContext","UserContext","useHistory","Params","useParams","useEffect","userData","JSON","parse","localStorage","getItem","database","console","log","id","_Get","View_User_By_Id","then","res","User","warehouse","catch","err","handleInputChange","e","target","name","value","checked","test","length","_GetList","Rule_List","userInfo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","swal","enableHighAccuracy","Created_Warehouse","Warehouse","userdata","country_state_City_List","rolename","Role_list_by_Master","_id","Superadmin","Role","filter","ele","roleName","toLowerCase","includes","WithoutSuperadmin","Get_RoleList","item","CreateAccountView","jsonData","xmlJs","xml2json","data","compact","spaces","CreateUser","input","submitHandler","preventDefault","formdata","FormData","wareHouse","map","append","stringify","Object","entries","key","undefined","_BulkUpload","Bulk_Upload_User","message","email","firstName","CreateAccountSave","status","payload","Roles","desc","rank","rolePermission","createdBy","_PostSave","Assign_Role_To_SuperAdmin","Super_Admin_List","setItem","SuperAdmin","goBack","response","CreateAccountUpdate","style","padding","lg","md","onClick","render","cursor","push","onSubmit","onChange","files","sm","required","placeholder","lastName","DOB","inputClass","country","onKeyDown","countryCodeEditable","mobileNumber","phone","Father_name","Father_MobileNo","MotherMobileNo","Thananame","PassportNo","DL_Num","minLength","maxLength","pattern","Aadhar_No","inputPan","IsValid_Aadhar_No","Pan_No","toUpperCase","IsValid_Pan_No","Account_Name","Account_No","Ifsc_code","pincode","SelectedCity","Pincode","StateName","District","readOnly","City","State","address1","address2","xs","fiels","reader","FileReader","onload","result","readAsDataURL","imageuri","borderRadius","src","height","width","alt","profileImage","Image_URL","last_job_firm_name","last_job_Profile","last_job_address","last_job_PhNo","Ref_name_one","refer_Relation_one","Ref_Mob_No_one","Ref_name_sec","refer_Relation_two","Ref_Mob_No_two","Ref_name_third","refer_Relation_third","Ref_Mob_No_third","options","selectedIndex","getAttribute","selectedPosition","data-id","data-name","showCheckbox","isObject","selectedValues","onSelect","selectedList","selectedItem","onRemove","removedItem","displayValue","password","last_job_AppoitmentDate","last_job_Designation","last_job_Salary","marginRight","Ripple","node","row","bool","check","inline","disabled","FormGroup"],"mappings":"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","file":"static/js/337.e095125c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\n// import moment from \"moment-timezone\";\r\nimport { Route, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountUpdate,\r\n  CreateAccountView,\r\n  Get_RoleList,\r\n  _BulkUpload,\r\n  _Get,\r\n  _GetList,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nimport {\r\n  Assign_Role_To_SuperAdmin,\r\n  Bulk_Upload_User,\r\n  Created_Warehouse,\r\n  Image_URL,\r\n  Role_list_by_Master,\r\n  Rule_List,\r\n  Super_Admin_List,\r\n  View_User_By_Id,\r\n  country_state_City_List,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport { FaUpload } from \"react-icons/fa\";\r\n\r\nconst CreateAccount = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [WareHouseList, setWareHouseList] = useState([]);\r\n  const [SelectedWareHouse, setSelectedWareHouse] = useState([]);\r\n  const [Rule, setRule] = useState([]);\r\n\r\n  const [BulkImport, setBulkImport] = useState(null);\r\n  const [Master, setMaster] = useState(false);\r\n  const [Loader, setLoader] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  const [Image, setImage] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState([]);\r\n  const [Country_State_city, setCountry_State_city] = useState([]);\r\n  const [SelectedRules, SetRules] = useState([]);\r\n  const [AllAssignRoleList, setAllAssignRoleList] = useState([]);\r\n  const [SelectedRoleToAssign, setSelectedRoleToAssign] = useState([]);\r\n  const [index, setindex] = useState(\"\");\r\n  const [Mode, setMode] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [WareHouseIncharge, setWareHouseIncharge] = useState(false);\r\n  const [BulkUpload, setBulkUpload] = useState(false);\r\n\r\n  const Context = useContext(UserContext);\r\n  let history = useHistory();\r\n  let Params = useParams();\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (userData?.database) {\r\n      setFormData({\r\n        ...formData,\r\n        [\"database\"]: userData?.database,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(Params);\r\n    if (Params?.id == 0) {\r\n      setMode(\"Create\");\r\n    } else {\r\n      setMode(\"Update\");\r\n      _Get(View_User_By_Id, Params?.id)\r\n        .then((res) => {\r\n          debugger;\r\n          SetRules(res?.User?.setRule);\r\n          setSelectedWareHouse(res?.User?.warehouse);\r\n          setFormData(res?.User);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    _GetList(Rule_List)\r\n      .then((res) => {\r\n        setRule(res?.Rule);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const getLocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n\r\n            console.log(position.coords);\r\n          },\r\n          (error) => {\r\n            swal(\"error\", error);\r\n          },\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else {\r\n        swal(\"Your Browser does not support Location\");\r\n      }\r\n      _Get(Created_Warehouse, userInfo?.database)\r\n        .then((res) => {\r\n          setWareHouseList(res?.Warehouse);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n\r\n    getLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    _GetList(country_state_City_List)\r\n      .then((res) => {\r\n        setCountry_State_city(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    if (userdata?.rolename?.position === 0) {\r\n      setMaster(true);\r\n      _Get(Role_list_by_Master, userdata?._id)\r\n        .then((res) => {\r\n          let Superadmin = res?.Role?.filter((ele) =>\r\n            ele?.roleName?.toLowerCase()?.includes(\"superadmin\")\r\n          );\r\n          let WithoutSuperadmin = res?.Role?.filter(\r\n            (ele) => ele?.roleName !== \"SuperAdmin\"\r\n          );\r\n          if (Superadmin) {\r\n            setdropdownValue(Superadmin);\r\n          }\r\n\r\n          if (WithoutSuperadmin) {\r\n            setAllAssignRoleList(res?.Role);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Roles List Not found\");\r\n        });\r\n    } else {\r\n      Get_RoleList(userdata?._id, userdata?.database)\r\n        .then((res) => {\r\n          let ShowList = res?.Role?.filter(\r\n            (item, i) => item?.position > userdata?.rolename?.position\r\n          );\r\n          setdropdownValue(res?.Role);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Roles List Not found\");\r\n        });\r\n    }\r\n    CreateAccountView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        setCreatAccountView(JSON.parse(jsonData)?.CreateUser?.input);\r\n        setdropdownValue(JSON.parse(jsonData));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    // console.log(formData);\r\n\r\n    let formdata = new FormData();\r\n\r\n    if (WareHouseIncharge) {\r\n      let wareHouse = SelectedWareHouse?.map((ele) => {\r\n        return { id: ele?._id };\r\n      });\r\n      formdata.append(`warehouse`, JSON.stringify(wareHouse));\r\n    }\r\n\r\n    if (Master) {\r\n      formData[\"position\"] = 1;\r\n    }\r\n    if (SelectedRules?.length) {\r\n      formdata.append(`setRule`, JSON.stringify(SelectedRules));\r\n    }\r\n    if (Image) {\r\n      formdata.append(`file`, Image);\r\n    }\r\n    if (formData?.setRule) {\r\n      delete formData?.setRule;\r\n    }\r\n    if (formData?.warehouse) {\r\n      delete formData?.warehouse;\r\n    }\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      formdata.append(`${key}`, `${value}`);\r\n      // console.log(key, value);\r\n    }\r\n\r\n    if (BulkImport !== null || BulkImport != undefined) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", BulkImport);\r\n\r\n      await _BulkUpload(Bulk_Upload_User, formdata)\r\n        .then((res) => {\r\n          setLoader(false);\r\n          swal(`${res?.message}`);\r\n        })\r\n        .catch((err) => {\r\n          setLoader(false);\r\n\r\n          console.log(err);\r\n          swal(\"Something Went Wrong\");\r\n        });\r\n    } else {\r\n      if (Params?.id == 0) {\r\n        if (formData?.rolename && formData?.email && formData?.firstName) {\r\n          if (error) {\r\n            swal(\"Error occured while Entering Details\");\r\n          } else {\r\n            CreateAccountSave(formdata)\r\n              .then((res) => {\r\n                setLoader(false);\r\n\r\n                if (res?.status) {\r\n                  let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n                  let AssignDataBase = [];\r\n\r\n                  if (SelectedRoleToAssign?.length) {\r\n                    AssignDataBase = SelectedRoleToAssign?.map((ele) => {\r\n                      return {\r\n                        role: {\r\n                          roleName: ele?.roleName,\r\n                          position: 0,\r\n                          desc: ele?.desc,\r\n                          rank: 0,\r\n                          rolePermission: ele?.rolePermission,\r\n                          database: formData[\"database\"],\r\n                          createdBy: userData?._id,\r\n                        },\r\n                      };\r\n                    });\r\n                    let payload = {\r\n                      Roles: AssignDataBase,\r\n                    };\r\n\r\n                    if (res?.User._id) {\r\n                      _PostSave(Assign_Role_To_SuperAdmin, payload)\r\n                        .then((res) => {\r\n                          console.log(res);\r\n                          _GetList(Super_Admin_List)\r\n                            .then((res) => {\r\n                              localStorage.setItem(\r\n                                \"AllSuper\",\r\n                                JSON.stringify(res?.SuperAdmin)\r\n                              );\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                          console.log(res);\r\n                        })\r\n                        .catch((err) => {\r\n                          // setLoader(false);\r\n\r\n                          console.log(err);\r\n                        });\r\n                    }\r\n                  }\r\n                  swal(\"User Created Successfully\");\r\n                  history.goBack();\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                setLoader(false);\r\n\r\n                if (!!err.response?.data?.message) {\r\n                  swal(`${err.response?.data?.message}`);\r\n                }\r\n              });\r\n          }\r\n        } else {\r\n          setLoader(false);\r\n          swal(\"Enter User Name Email and Select Role\");\r\n        }\r\n      } else {\r\n        CreateAccountUpdate(Params?.id, formdata)\r\n          .then((res) => {\r\n            setFormData({});\r\n            if (res.status) {\r\n              swal(\"User Updated Successfully\");\r\n              history.goBack();\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n    setSelectedRoleToAssign(selectedList);\r\n    // setProductList(selectedList[0].productItems);\r\n  };\r\n  const onRemove1 = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    setSelectedRoleToAssign(selectedList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card style={{ padding: \"50px 50px\" }} className=\"UserRegistrationform\">\r\n          <Row className=\"m-2\">\r\n            <Col lg=\"3\" md=\"3\">\r\n              <h1 className=\"float-left\">{Mode && Mode} User</h1>\r\n            </Col>\r\n            <Col></Col>\r\n            {!BulkUpload && !BulkUpload ? (\r\n              <>\r\n                <Col lg=\"3\" md=\"3\">\r\n                  <Button\r\n                    className=\"mx-2 mr-2\"\r\n                    color=\"primary\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setBulkUpload(true);\r\n                    }}>\r\n                    Bulk Upload\r\n                  </Button>\r\n                </Col>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Col lg=\"2\" md=\"2\">\r\n                  <Button\r\n                    className=\"mx-1\"\r\n                    color=\"primary\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setBulkUpload(false);\r\n                    }}>\r\n                    Back\r\n                  </Button>\r\n                </Col>\r\n              </>\r\n            )}\r\n\r\n            {!BulkUpload && !BulkUpload && (\r\n              <Col lg=\"1\" md=\"1\">\r\n                <div className=\"float-right\">\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        style={{ cursor: \"pointer\" }}\r\n                        className=\"float-right mr-1\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          history.push(\"/app/SoftNumen/accounSearch\")\r\n                        }>\r\n                        {\" \"}\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n\r\n          <Form onSubmit={submitHandler}>\r\n            {BulkUpload && BulkUpload ? (\r\n              <>\r\n                <div className=\"parent\">\r\n                  <div className=\"file-upload mb-3\">\r\n                    <FaUpload color=\"green\" size={50} />\r\n\r\n                    <p>Click box to upload</p>\r\n                    {/* <p>Maximun file size 10mb</p> */}\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"images\"\r\n                      onChange={(e) => {\r\n                        setBulkImport(e.target.files[0]);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Bulk Import</Label>\r\n\r\n                    <Input\r\n                      type=\"file\"\r\n                      placeholder=\"\"\r\n                      name=\"BulkImport\"\r\n                      onChange={(e) => {\r\n                        setBulkImport(e.target.files[0]);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <Row>\r\n                      <Col className=\"mb-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                        <CardBody className=\"userRegiBody\">\r\n                          <div className=\"d-flex justify-content-center\">\r\n                            <h1>Personal Information</h1>\r\n                          </div>\r\n                          <Row>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  First Name\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  placeholder=\"Enter First Name\"\r\n                                  type=\"text\"\r\n                                  name=\"firstName\"\r\n                                  value={formData?.firstName}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Last Name{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  placeholder=\"Enter Last Name\"\r\n                                  type=\"text\"\r\n                                  name=\"lastName\"\r\n                                  value={formData?.lastName}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  DOB <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  // placeholder=\"one or two or three ...\"\r\n                                  type=\"date\"\r\n                                  name=\"DOB\"\r\n                                  value={formData?.DOB}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Mobile Number{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n                                </Label>\r\n                                <PhoneInput\r\n                                  required\r\n                                  inputClass=\"myphoneinput\"\r\n                                  country={\"in\"}\r\n                                  onKeyDown={(e) => {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }}\r\n                                  countryCodeEditable={false}\r\n                                  name=\"mobileNumber\"\r\n                                  value={formData?.mobileNumber}\r\n                                  onChange={(phone) => {\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [\"mobileNumber\"]: phone,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Email <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  placeholder=\"Enter Email id here\"\r\n                                  type=\"email\"\r\n                                  name=\"email\"\r\n                                  value={formData?.email}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Father Name{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  placeholder=\"Enter Father name\"\r\n                                  type=\"text\"\r\n                                  name=\"Father_name\"\r\n                                  value={formData?.Father_name}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Father Mobile Number{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <PhoneInput\r\n                                  required\r\n                                  inputClass=\"myphoneinput\"\r\n                                  country={\"in\"}\r\n                                  onKeyDown={(e) => {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }}\r\n                                  countryCodeEditable={false}\r\n                                  name=\"Father_MobileNo\"\r\n                                  value={formData?.Father_MobileNo}\r\n                                  onChange={(phone) => {\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [\"Father_MobileNo\"]: phone,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>Mother Mobile Number</Label>\r\n                                <PhoneInput\r\n                                  inputClass=\"myphoneinput\"\r\n                                  country={\"in\"}\r\n                                  onKeyDown={(e) => {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }}\r\n                                  countryCodeEditable={false}\r\n                                  name=\"MotherMobileNo\"\r\n                                  value={formData?.MotherMobileNo}\r\n                                  onChange={(phone) => {\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [\"MotherMobileNo\"]: phone,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>Thana Name</Label>\r\n                                <Input\r\n                                  placeholder=\"Enter Thana name\"\r\n                                  type=\"text\"\r\n                                  name=\"Thananame\"\r\n                                  value={formData?.Thananame}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>Passport Number</Label>\r\n                                <Input\r\n                                  placeholder=\"Enter Passport number\"\r\n                                  type=\"text\"\r\n                                  name=\"PassportNo\"\r\n                                  value={formData?.PassportNo}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>Driving License Number</Label>\r\n                                <Input\r\n                                  placeholder=\"Enter Driving License Number\"\r\n                                  type=\"text\"\r\n                                  name=\"DL_Num\"\r\n                                  value={formData?.DL_Num}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Aadhar Number{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  minLength={12}\r\n                                  maxLength={12}\r\n                                  pattern=\"[0-9]*\"\r\n                                  placeholder=\"Enter Addhar Number\"\r\n                                  type=\"text\"\r\n                                  name=\"Aadhar_No\"\r\n                                  value={formData?.Aadhar_No}\r\n                                  onChange={(e) => {\r\n                                    const inputPan = e.target.value;\r\n                                    const panRegex = /^\\d{12}$/;\r\n\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [\"Aadhar_No\"]: inputPan,\r\n                                      [\"IsValid_Aadhar_No\"]:\r\n                                        panRegex.test(inputPan),\r\n                                    });\r\n                                  }}\r\n                                  // onChange={handleInputChange}\r\n                                />\r\n                                <span>\r\n                                  {formData?.IsValid_Aadhar_No &&\r\n                                  formData?.IsValid_Aadhar_No ? (\r\n                                    <>\r\n                                      <span style={{ color: \"green\" }}>\r\n                                        Correct\r\n                                      </span>\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      {formData?.Aadhar_No?.length > 16 ||\r\n                                        (formData?.Aadhar_No?.length < 15 && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            Enter Correct AadharNo\r\n                                          </span>\r\n                                        ))}\r\n                                    </>\r\n                                  )}\r\n                                </span>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Pan Number{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  minLength={10}\r\n                                  maxLength={10}\r\n                                  placeholder=\"Enter Pan Number\"\r\n                                  type=\"text\"\r\n                                  name=\"Pan_No\"\r\n                                  value={formData?.Pan_No}\r\n                                  onChange={(e) => {\r\n                                    const inputPan =\r\n                                      e.target.value?.toUpperCase();\r\n                                    const panRegex = /[A-Z]{5}[0-9]{4}[A-Z]{1}/;\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [\"Pan_No\"]: inputPan,\r\n                                      [\"IsValid_Pan_No\"]:\r\n                                        panRegex.test(inputPan),\r\n                                    });\r\n                                  }}\r\n                                />\r\n                                <span>\r\n                                  {formData?.IsValid_Pan_No &&\r\n                                  formData?.IsValid_Pan_No ? (\r\n                                    <>\r\n                                      <span style={{ color: \"green\" }}>\r\n                                        Correct\r\n                                      </span>\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      {formData?.Pan_No?.length > 9 && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          Enter Correct PAN Number\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </span>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Bank Name{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  placeholder=\"Enter Bank Name\"\r\n                                  type=\"text\"\r\n                                  name=\"Account_Name\"\r\n                                  value={formData?.Account_Name}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Account Number{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  placeholder=\"Enter Account Number\"\r\n                                  type=\"text\"\r\n                                  name=\"Account_No\"\r\n                                  value={formData?.Account_No}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Ifsc code{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  placeholder=\"Enter Ifsc code\"\r\n                                  type=\"text\"\r\n                                  name=\"Ifsc_code\"\r\n                                  value={formData?.Ifsc_code}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Pin Code Number{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  onKeyDown={(e) => {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }}\r\n                                  type=\"number\"\r\n                                  placeholder=\"Enter Pin Code here\"\r\n                                  name=\"pincode\"\r\n                                  value={formData?.pincode}\r\n                                  onChange={(e) => {\r\n                                    let SelectedCity =\r\n                                      Country_State_city?.filter(\r\n                                        (ele) => ele?.Pincode == e.target.value\r\n                                      );\r\n\r\n                                    if (SelectedCity?.length) {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"State\"]: SelectedCity[0]?.StateName,\r\n                                        [\"City\"]: SelectedCity[0]?.District,\r\n                                        [\"pincode\"]: e.target.value,\r\n                                      });\r\n                                    } else {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"pincode\"]: e.target.value,\r\n                                      });\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>City</Label>\r\n                                <Input\r\n                                  readOnly\r\n                                  placeholder=\"City name\"\r\n                                  type=\"text\"\r\n                                  name=\"City\"\r\n                                  value={formData?.City}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>State</Label>\r\n                                <Input\r\n                                  readOnly\r\n                                  placeholder=\"State name\"\r\n                                  type=\"text\"\r\n                                  name=\"State\"\r\n                                  value={formData?.State}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Address 1st{\" \"}\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"address name\"\r\n                                  type=\"text\"\r\n                                  name=\"address1\"\r\n                                  value={formData?.address1}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>\r\n                                  Address 2nd\r\n                                  <span style={{ color: \"red\" }}>*</span>\r\n                                </Label>\r\n                                <Input\r\n                                  required\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"address name\"\r\n                                  type=\"text\"\r\n                                  name=\"address2\"\r\n                                  value={formData?.address2}\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col className=\"mt-2 mb-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                              <Row>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\">\r\n                                  <div className=\"d-flex justify-content-center\">\r\n                                    <Label>Images</Label>\r\n                                  </div>\r\n\r\n                                  <div className=\"parent\">\r\n                                    <div className=\"file-upload\">\r\n                                      <FaUpload color=\"green\" size={35} />\r\n\r\n                                      <p>Click box to upload</p>\r\n                                      {/* <p>Maximun file size 10mb</p> */}\r\n                                      <input\r\n                                        type=\"file\"\r\n                                        name=\"images\"\r\n                                        onChange={(e) => {\r\n                                          const fiels = e.target.files[0];\r\n                                          debugger;\r\n                                          setImage(e.target.files[0]);\r\n                                          if (fiels) {\r\n                                            const reader = new FileReader();\r\n                                            reader.onload = (e) => {\r\n                                              setFormData({\r\n                                                ...formData,\r\n\r\n                                                [\"imageuri\"]: e.target.result,\r\n                                              });\r\n                                            };\r\n                                            reader.readAsDataURL(fiels);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                                {/* <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                                  <FormGroup>\r\n                                    <Label>Image</Label>\r\n                                    <Input\r\n                                      required\r\n                                      placeholder=\"Enter Ifsc code\"\r\n                                      type=\"file\"\r\n                                      name=\"file\"\r\n                                      // value={formData?.Ifsc_code}\r\n                                      onChange={(e) => {\r\n                                        const fiels = e.target.files[0];\r\n                                        if (fiels) {\r\n                                          const reader = new FileReader();\r\n                                          reader.onload = (e) => {\r\n                                            setFormData({\r\n                                              ...formData,\r\n                                              [\"file\"]: fiels,\r\n                                              [\"imageuri\"]: e.target.result,\r\n                                            });\r\n                                          };\r\n                                          reader.readAsDataURL(fiels);\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  </FormGroup>\r\n                                </Col> */}\r\n                                {formData?.imageuri && (\r\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                                    <img\r\n                                      style={{ borderRadius: \"8px\" }}\r\n                                      src={formData?.imageuri}\r\n                                      height={100}\r\n                                      width={120}\r\n                                      alt=\"image\"\r\n                                    />\r\n                                  </Col>\r\n                                )}\r\n                                {formData?.profileImage && (\r\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                                    <img\r\n                                      style={{ borderRadius: \"8px\" }}\r\n                                      src={`${Image_URL}/Images/${formData?.profileImage}`}\r\n                                      height={100}\r\n                                      width={120}\r\n                                      alt=\"image\"\r\n                                    />\r\n                                  </Col>\r\n                                )}\r\n                              </Row>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <CardBody className=\"userRegiBody\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                          <h1>Last Working Details</h1>\r\n                        </div>\r\n                        <Row>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>Firm Name</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"last job firm name\"\r\n                                type=\"text\"\r\n                                name=\"last_job_firm_name\"\r\n                                value={formData?.last_job_firm_name}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>Profile Name</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"last job Profile Name\"\r\n                                type=\"text\"\r\n                                name=\"last_job_Profile\"\r\n                                value={formData?.last_job_Profile}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>Address</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"last job Address\"\r\n                                type=\"text\"\r\n                                name=\"last_job_address\"\r\n                                value={formData?.last_job_address}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label> Contact Number</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"in\"}\r\n                                onKeyDown={(e) => {\r\n                                  [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                    e.preventDefault();\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name=\"last_job_PhNo\"\r\n                                value={formData?.last_job_PhNo}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"last_job_PhNo\"]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </CardBody>\r\n                    </Col>\r\n                    <Col className=\"mb-2 mt-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <CardBody className=\"userRegiBody\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                          <h1>Reference information</h1>\r\n                        </div>\r\n                        <Row>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Name</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Refernece name\"\r\n                                type=\"text\"\r\n                                name=\"Ref_name_one\"\r\n                                value={formData?.Ref_name_one}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Relation</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Refernece Relation\"\r\n                                type=\"text\"\r\n                                name=\"refer_Relation_one\"\r\n                                value={formData?.refer_Relation_one}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Mobile Number</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"in\"}\r\n                                onKeyDown={(e) => {\r\n                                  [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                    e.preventDefault();\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name=\"Ref_Mob_No_one\"\r\n                                value={formData?.Ref_Mob_No_one}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Ref_Mob_No_one\"]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <hr />\r\n\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Name</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Refernece name\"\r\n                                type=\"text\"\r\n                                name=\"Ref_name_sec\"\r\n                                value={formData?.Ref_name_sec}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Relation</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Refernece Relation\"\r\n                                type=\"text\"\r\n                                name=\"refer_Relation_two\"\r\n                                value={formData?.refer_Relation_two}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Mobile Number</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"in\"}\r\n                                onKeyDown={(e) => {\r\n                                  [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                    e.preventDefault();\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name=\"Ref_Mob_No_two\"\r\n                                value={formData?.Ref_Mob_No_two}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Ref_Mob_No_two\"]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <hr />\r\n\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Name</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Refernece name\"\r\n                                type=\"text\"\r\n                                name=\"Ref_name_third\"\r\n                                value={formData?.Ref_name_third}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Relation</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Refernece Relation\"\r\n                                type=\"text\"\r\n                                name=\"refer_Relation_third\"\r\n                                value={formData?.refer_Relation_third}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                            <FormGroup>\r\n                              <Label>Mobile Number</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"in\"}\r\n                                onKeyDown={(e) => {\r\n                                  [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                    e.preventDefault();\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name=\"Ref_Mob_No_third\"\r\n                                value={formData?.Ref_Mob_No_third}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Ref_Mob_No_third\"]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </CardBody>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <CardBody className=\"userRegiBody\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                          <h1>Official information</h1>\r\n                        </div>\r\n                        <Row>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Role List{\" \"}\r\n                                <span style={{ color: \"red\" }}>*</span>\r\n                              </Label>\r\n                              <CustomInput\r\n                                required\r\n                                type=\"select\"\r\n                                name=\"rolename\"\r\n                                value={formData.rolename}\r\n                                onChange={(e) => {\r\n                                  const selectedName =\r\n                                    e.target.options[\r\n                                      e.target.selectedIndex\r\n                                    ].getAttribute(\"data-name\");\r\n                                  const selectedPosition =\r\n                                    e.target.options[\r\n                                      e.target.selectedIndex\r\n                                    ].getAttribute(\"data-id\");\r\n                                  if (\r\n                                    selectedPosition == \"WareHouse Incharge\"\r\n                                  ) {\r\n                                    setWareHouseIncharge(true);\r\n                                  } else {\r\n                                    setWareHouseIncharge(false);\r\n                                  }\r\n                                  if (\r\n                                    selectedPosition\r\n                                      ?.toLowerCase()\r\n                                      ?.includes(\"admin\") ||\r\n                                    selectedPosition\r\n                                      ?.toLowerCase()\r\n                                      ?.includes(\"superadmin\")\r\n                                  ) {\r\n                                    let userdata = JSON.parse(\r\n                                      localStorage.getItem(\"userData\")\r\n                                    );\r\n\r\n                                    formData[\"created_by\"] = userdata?._id;\r\n                                  }\r\n\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"rolename\"]: e.target.value,\r\n                                    // [\"database\"]: selectedName,\r\n                                  });\r\n                                }}>\r\n                                <option>--select Role--</option>\r\n                                {dropdownValue &&\r\n                                  dropdownValue?.length &&\r\n                                  dropdownValue?.map((ele, i) => {\r\n                                    return (\r\n                                      <option\r\n                                        data-id={ele?.roleName}\r\n                                        data-name={ele?.database}\r\n                                        value={ele?._id}>\r\n                                        {ele?.roleName}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </CustomInput>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          {WareHouseIncharge && WareHouseIncharge && (\r\n                            <>\r\n                              <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <Label>Selected WareHouse </Label>\r\n                                <Multiselect\r\n                                  required\r\n                                  showCheckbox=\"true\"\r\n                                  isObject=\"false\"\r\n                                  options={WareHouseList} // Options to display in the dropdown\r\n                                  selectedValues={SelectedWareHouse} // Preselected value to persist in dropdown\r\n                                  onSelect={(selectedList, selectedItem) => {\r\n                                    setSelectedWareHouse(selectedList);\r\n                                  }} // Function will trigger on select event\r\n                                  onRemove={(selectedList, removedItem) => {\r\n                                    setSelectedWareHouse(selectedList);\r\n                                  }} // Function will trigger on remove event\r\n                                  displayValue=\"warehouseName\" // Property name to display in the dropdown options\r\n                                />\r\n                              </Col>\r\n                            </>\r\n                          )}\r\n                          {Master && Master && (\r\n                            <>\r\n                              <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <div className=\"\">\r\n                                  <Label>Select Roles to Assign * </Label>\r\n\r\n                                  <Multiselect\r\n                                    required\r\n                                    showCheckbox=\"true\"\r\n                                    isObject=\"false\"\r\n                                    options={AllAssignRoleList} // Options to display in the dropdown\r\n                                    // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                                    onSelect={onSelect1} // Function will trigger on select event\r\n                                    onRemove={onRemove1} // Function will trigger on remove event\r\n                                    displayValue=\"roleName\" // Property name to display in the dropdown options\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n\r\n                              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>Database Name *</Label>\r\n                                  <Input\r\n                                    required\r\n                                    placeholder=\"one or two or three ...\"\r\n                                    type=\"text\"\r\n                                    value={formData[\"database\"]}\r\n                                    onChange={(e) => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"database\"]: e.target.value,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          )}\r\n\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Password <span style={{ color: \"red\" }}>*</span>\r\n                              </Label>\r\n                              <Input\r\n                                required\r\n                                placeholder=\"Enter Password here\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formData?.password}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Appointment Date{\" \"}\r\n                                <span style={{ color: \"red\" }}>*</span>\r\n                              </Label>\r\n                              <Input\r\n                                required\r\n                                className=\"form-control\"\r\n                                placeholder=\"Appointment Date\"\r\n                                type=\"date\"\r\n                                name=\"last_job_AppoitmentDate\"\r\n                                value={formData?.last_job_AppoitmentDate}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                Designation{\" \"}\r\n                                <span style={{ color: \"red\" }}>*</span>\r\n                              </Label>\r\n                              <Input\r\n                                required\r\n                                className=\"form-control\"\r\n                                placeholder=\"last Job Designation\"\r\n                                type=\"text\"\r\n                                name=\"last_job_Designation\"\r\n                                value={formData?.last_job_Designation}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>Base Salary per Month</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Base Salary\"\r\n                                type=\"number\"\r\n                                name=\"last_job_Salary\"\r\n                                value={formData?.last_job_Salary}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <Label>Employee Rule </Label>\r\n                            <Multiselect\r\n                              required\r\n                              showCheckbox=\"true\"\r\n                              isObject=\"false\"\r\n                              options={Rule} // Options to display in the dropdown\r\n                              selectedValues={SelectedRules} // Preselected value to persist in dropdown\r\n                              onSelect={(selectedList, selectedItem) => {\r\n                                SetRules(selectedList);\r\n                                // setSelectedWareHouse(selectedList);\r\n                              }} // Function will trigger on select event\r\n                              onRemove={(selectedList, removedItem) => {\r\n                                SetRules(selectedList);\r\n\r\n                                // setSelectedWareHouse(selectedList);\r\n                              }} // Function will trigger on remove event\r\n                              displayValue=\"title\" // Property name to display in the dropdown options\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </CardBody>\r\n                    </Col>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                    <Label className=\"mb-0\">Status</Label>\r\n                    <div\r\n                      className=\"form-label-group\"\r\n                      onChange={(e) => {\r\n                        setFormData({\r\n                          ...formData,\r\n                          [\"status\"]: e.target.value,\r\n                        });\r\n                      }}>\r\n                      <input\r\n                        required\r\n                        checked={formData?.status == \"Active\"}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        required\r\n                        checked={formData?.status == \"Deactive\"}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n            {Loader && Loader ? (\r\n              <>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-center\">\r\n                    <Spinner>Loading...</Spinner>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mt-2 mx-2\">\r\n                        {Mode && Mode}\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </Form>\r\n        </Card>\r\n        {/* <Card>\r\n          <div className=\"px-1 \">\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {BulkUpload && BulkUpload ? (\r\n                  <>\r\n                    <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Bulk Import</Label>\r\n\r\n                        <Input\r\n                          type=\"file\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"\"\r\n                          name=\"BulkImport\"\r\n                          onChange={(e) => {\r\n                            setBulkImport(e.target.files[0]);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Col lg=\"4\" md=\"4\">\r\n                      <FormGroup>\r\n                        <Label>Role List</Label>\r\n                        <CustomInput\r\n                          required\r\n                          type=\"select\"\r\n                          name=\"rolename\"\r\n                          value={formData[\"rolename\"]}\r\n                          onChange={(e) => {\r\n                            const selectedName =\r\n                              e.target.options[\r\n                                e.target.selectedIndex\r\n                              ].getAttribute(\"data-name\");\r\n                            const selectedPosition =\r\n                              e.target.options[\r\n                                e.target.selectedIndex\r\n                              ].getAttribute(\"data-id\");\r\n                            if (selectedPosition == \"WareHouse Incharge\") {\r\n                              setWareHouseIncharge(true);\r\n                            } else {\r\n                              setWareHouseIncharge(false);\r\n                            }\r\n                            if (\r\n                              selectedPosition\r\n                                ?.toLowerCase()\r\n                                ?.includes(\"admin\") ||\r\n                              selectedPosition\r\n                                ?.toLowerCase()\r\n                                ?.includes(\"superadmin\")\r\n                            ) {\r\n                              let userdata = JSON.parse(\r\n                                localStorage.getItem(\"userData\")\r\n                              );\r\n\r\n                              formData[\"created_by\"] = userdata?._id;\r\n                            }\r\n\r\n                            setFormData({\r\n                              ...formData,\r\n                              [\"rolename\"]: e.target.value,\r\n                              [\"database\"]: selectedName,\r\n                            });\r\n                          }}>\r\n                          <option>--select Role--</option>\r\n                          {dropdownValue &&\r\n                            dropdownValue?.length &&\r\n                            dropdownValue?.map((ele, i) => {\r\n                              return (\r\n                                <option\r\n                                  data-id={ele?.roleName}\r\n                                  data-name={ele?.database}\r\n                                  value={ele?._id}>\r\n                                  {ele?.roleName}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                        </CustomInput>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    {WareHouseIncharge && WareHouseIncharge && (\r\n                      <>\r\n                        <Col className=\"mb-1\" lg=\"4\" md=\"4\">\r\n                          <Label>Selected WareHouse </Label>\r\n                          <Multiselect\r\n                            required\r\n                            showCheckbox=\"true\"\r\n                            isObject=\"false\"\r\n                            options={WareHouseList} // Options to display in the dropdown\r\n                            // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                            onSelect={(selectedList, selectedItem) => {\r\n                              setSelectedWareHouse(selectedList);\r\n                            }} // Function will trigger on select event\r\n                            onRemove={(selectedList, removedItem) => {\r\n                              setSelectedWareHouse(selectedList);\r\n                            }} // Function will trigger on remove event\r\n                            displayValue=\"warehouseName\" // Property name to display in the dropdown options\r\n                          />\r\n                        </Col>\r\n                      </>\r\n                    )}\r\n                    {Master && Master && (\r\n                      <>\r\n                        <Col className=\"mb-1\" lg=\"4\" md=\"4\">\r\n                          <div className=\"\">\r\n                            <Label>Select Roles to Assign * </Label>\r\n\r\n                            <Multiselect\r\n                              required\r\n                              showCheckbox=\"true\"\r\n                              isObject=\"false\"\r\n                              options={AllAssignRoleList} // Options to display in the dropdown\r\n                              // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                              onSelect={onSelect1} // Function will trigger on select event\r\n                              onRemove={onRemove1} // Function will trigger on remove event\r\n                              displayValue=\"roleName\" // Property name to display in the dropdown options\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n\r\n                        <Col lg=\"4\" md=\"4\">\r\n                          <FormGroup>\r\n                            <Label>Database Name *</Label>\r\n                            <Input\r\n                              placeholder=\"one or two or three ...\"\r\n                              type=\"text\"\r\n                              value={formData[\"database\"]}\r\n                              onChange={(e) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"database\"]: e.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </>\r\n                    )}\r\n\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.map((ele, i) => {\r\n                        const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                          .tz(\"America/New_York\")\r\n                          .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                        if (!!ele?.phoneinput) {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"in\"}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(phone) => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        } else if (!!ele?.library) {\r\n                          if (ele?.label._text?.includes(\"ountry\")) {\r\n                            return (\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n\r\n                                  <Input\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            );\r\n                          } else if (ele?.label._text?.includes(\"tate\")) {\r\n                            return (\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <Input\r\n                                    disabled\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            );\r\n                          } else if (ele?.label._text?.includes(\"ity\")) {\r\n                            return (\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <Input\r\n                                    disabled\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <>\r\n                                {ele?.type?._attributes?.type == \"date\" ? (\r\n                                  <>\r\n                                    <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                      <FormGroup key={i}>\r\n                                        <Label>{ele?.label?._text}</Label>\r\n\r\n                                        <Input\r\n                                          onKeyDown={(e) => {\r\n                                            if (\r\n                                              ele?.type?._attributes?.type ==\r\n                                              \"number\"\r\n                                            ) {\r\n                                              [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                                e.key\r\n                                              ) && e.preventDefault();\r\n                                            }\r\n                                          }}\r\n                                          type={ele?.type?._attributes?.type}\r\n                                          placeholder={ele?.placeholder?._text}\r\n                                          name={ele?.name?._text}\r\n                                          dateFormat={\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          }\r\n                                          value={\r\n                                            moment(formData[ele?.name?._text])\r\n                                              .tz(\r\n                                                Context?.UserInformatio\r\n                                                  ?.timeZone\r\n                                              )\r\n                                              .format(\r\n                                                Context?.UserInformatio\r\n                                                  ?.dateFormat\r\n                                              )\r\n                                            // formData[ele?.name?._text]\r\n                                          }\r\n                                          // value={formData[ele?.name?._text]}\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(\r\n                                              e,\r\n                                              ele?.type?._attributes?.type,\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                        {index === i ? (\r\n                                          <>\r\n                                            {error && (\r\n                                              <span style={{ color: \"red\" }}>\r\n                                                {error}\r\n                                              </span>\r\n                                            )}\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </FormGroup>\r\n                                    </Col>\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                      <FormGroup key={i}>\r\n                                        <Label>{ele?.label?._text}</Label>\r\n\r\n                                        <Input\r\n                                          onKeyDown={(e) => {\r\n                                            if (\r\n                                              ele?.type?._attributes?.type ==\r\n                                              \"number\"\r\n                                            ) {\r\n                                              [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                                e.key\r\n                                              ) && e.preventDefault();\r\n                                            }\r\n                                          }}\r\n                                          type={ele?.type?._attributes?.type}\r\n                                          placeholder={ele?.placeholder?._text}\r\n                                          name={ele?.name?._text}\r\n                                          value={formData[ele?.name?._text]}\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(\r\n                                              e,\r\n                                              ele?.type?._attributes?.type,\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                        {index === i ? (\r\n                                          <>\r\n                                            {error && (\r\n                                              <span style={{ color: \"red\" }}>\r\n                                                {error}\r\n                                              </span>\r\n                                            )}\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </FormGroup>\r\n                                    </Col>\r\n                                  </>\r\n                                )}\r\n                              </>\r\n                            );\r\n                          }\r\n                        } else if (ele?.label._text?.includes(\"incode\")) {\r\n                          return (\r\n                            <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n                                <Input\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    let SelectedCity =\r\n                                      Country_State_city?.filter(\r\n                                        (ele) => ele?.Pincode == e.target.value\r\n                                      );\r\n                                    // console.log(SelectedCity);\r\n                                    if (SelectedCity?.length) {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"State\"]: SelectedCity[0]?.StateName,\r\n                                        [\"City\"]: SelectedCity[0]?.District,\r\n                                        [\"pincode\"]: e.target.value,\r\n                                      });\r\n                                    } else {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: e.target.value,\r\n                                      });\r\n                                    }\r\n                                  }}\r\n                                />\r\n\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              {!!ele?.number ? (\r\n                                <>\r\n                                  <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                    <FormGroup key={i}>\r\n                                      <Label>{ele?.label?._text}</Label>\r\n\r\n                                      <Input\r\n                                        onWheel={(e) => {\r\n                                          e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                        }}\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            ele?.type?._attributes?.type ==\r\n                                            \"number\"\r\n                                          ) {\r\n                                            [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                              e.key\r\n                                            ) && e.preventDefault();\r\n                                          }\r\n                                        }}\r\n                                        type={ele?.type?._attributes?.type}\r\n                                        placeholder={ele?.placeholder?._text}\r\n                                        name={ele?.name?._text}\r\n                                        value={formData[ele?.name?._text]}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            e,\r\n                                            ele?.type?._attributes?.type,\r\n                                            i\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                      {index === i ? (\r\n                                        <>\r\n                                          {error && (\r\n                                            <span style={{ color: \"red\" }}>\r\n                                              {error}\r\n                                            </span>\r\n                                          )}\r\n                                        </>\r\n                                      ) : (\r\n                                        <></>\r\n                                      )}\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ) : (\r\n                                <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        }\r\n                      })}\r\n                    <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                      <Label className=\"mb-0\">Status</Label>\r\n                      <div\r\n                        className=\"form-label-group\"\r\n                        onChange={(e) => {\r\n                          setFormData({\r\n                            ...formData,\r\n                            [\"status\"]: e.target.value,\r\n                          });\r\n                        }}>\r\n                        <input\r\n                          required\r\n                          style={{ marginRight: \"3px\" }}\r\n                          type=\"radio\"\r\n                          name=\"status\"\r\n                          value=\"Active\"\r\n                        />\r\n                        <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                        <input\r\n                          required\r\n                          style={{ marginRight: \"3px\" }}\r\n                          type=\"radio\"\r\n                          name=\"status\"\r\n                          value=\"Deactive\"\r\n                        />\r\n                        <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                      </div>\r\n                    </Col>\r\n                  </>\r\n                )}\r\n              </Row>\r\n\r\n              {Loader && Loader ? (\r\n                <>\r\n                  <Row>\r\n                    <Col className=\"d-flex justify-content-center\">\r\n                      <Spinner>Loading...</Spinner>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Row>\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"mr-1 mt-2 mx-2\">\r\n                          Submit\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </Card> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}