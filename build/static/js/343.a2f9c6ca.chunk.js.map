{"version":3,"sources":["../node_modules/reactstrap/es/Alert.js","views/apps/freshlist/customer/HRM/RecPLace/createempForm.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","children","PropTypes","node","className","string","closeClassName","closeAriaLabel","cssModule","color","fade","bool","isOpen","toggle","func","tag","tagPropType","transition","shape","Fade","innerRef","oneOfType","defaultProps","unmountOnExit","Alert","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","React","createElement","_extends","in","role","type","onClick","EmployeeProfileForm","useState","employeeName","firstName","lastName","email","address","phone","city","country","pincode","district","state","data","setData","history","useHistory","successAlert","setSuccessAlert","errorAlert","setErrorAlert","Country_State_city","setCountry_State_city","handleSubmit","e","preventDefault","validateForm","_PostSave","Hrm_SalaryGroup","resetForm","console","log","values","every","value","trim","handleInputChange","name","fetchLocationDetails","_GetList","country_state_City_List","res","success","result","error","useEffect","sm","md","onSubmit","form","for","id","onChange","placeholder","enteredPincode","prevData","selectedCity","readOnly","lg","setBulkImport","files","row","size","offset","check","inline","disabled","FormGroup"],"mappings":"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","file":"static/js/343.a2f9c6ca.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import React, { useState,useEffect } from 'react';\r\nimport { Card, CardBody, Row, Col, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\r\nimport { Hrm_SalaryGroup } from '../../../../../../ApiEndPoint/Api';\r\nimport { _PostSave , _GetList} from '../../../../../../ApiEndPoint/ApiCalling';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { country_state_City_List } from '../../../../../../ApiEndPoint/Api';\r\n\r\nconst EmployeeProfileForm = () => {\r\n  const [data, setData] = useState({\r\n    employeeName: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    address: '',\r\n    phone: '',\r\n    city: '',\r\n    country: '',\r\n    pincode: '', \r\n    district: '', \r\n    state: '',\r\n  });\r\n  \r\n\r\n  const history = useHistory();\r\n  const [successAlert, setSuccessAlert] = useState(false);\r\n  const [errorAlert, setErrorAlert] = useState(false);\r\n\r\n  const [Country_State_city, setCountry_State_city] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      try {\r\n        await _PostSave(Hrm_SalaryGroup, data);\r\n        setSuccessAlert(true);\r\n        resetForm();\r\n        history.push('/app/ajgroup/HRM/empList');\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n        setErrorAlert(true);\r\n      }\r\n    } else {\r\n      setErrorAlert(true);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    return Object.values(data).every((value) => value.trim() !== '');\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setData({\r\n      employeeName: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      address: '',\r\n      phone: '',\r\n      city: '',\r\n      country: '',\r\n      pincode: '',  \r\n      district: '', \r\n      state: '',\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n\r\n  const fetchLocationDetails = async () => {\r\n    try {\r\n      // const response = await fetch(`API_ENDPOINT_TO_GET_LOCATION_DETAILS?pincode=${data.pincode}`);\r\n      const res = await _GetList(country_state_City_List, data.pincode);\r\n        setCountry_State_city(res);\r\n      \r\n      if (res && res.success) {\r\n        setData({\r\n          ...data,\r\n          district: result.district,\r\n          state: result.state,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching location details:', error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (data.pincode.trim() !== '') {\r\n      fetchLocationDetails();\r\n    }\r\n  }, [data.pincode]);\r\n\r\n\r\n  return (\r\n    <Row>\r\n    <Col sm=\"12\" md=\"6\" className=\"mx-auto\">\r\n    <Card>\r\n      <CardBody>\r\n      {successAlert && <Alert color=\"success\">Form submitted successfully!</Alert>}\r\n      {errorAlert && <Alert color=\"danger\">Please fill all fields before submitting the form.</Alert>}\r\n      <h2>Employee Profile Form</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"employeeName\">Employee Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"employeeName\"\r\n                  id=\"employeeName\"\r\n                  value={data.employeeName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter employee name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email:</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={data.email}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter email address\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"firstName\">First Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  id=\"firstName\"\r\n                  value={data.firstName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter first name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"lastName\">Last Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  id=\"lastName\"\r\n                  value={data.lastName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter last name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"address\">Address:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  id=\"address\"\r\n                  value={data.address}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter address\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"phone\">Phone.No:</Label>\r\n                <Input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  id=\"phone\"\r\n                  value={data.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter phone number\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"city\">City:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  id=\"city\"\r\n                  value={data.city}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter city\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"country\">Country:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"country\"\r\n                  id=\"country\"\r\n                  value={data.country}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter country\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"pincode\">Pin Code:</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"pincode\"\r\n                      id=\"pincode\"\r\n                      value={data.pincode}\r\n                      placeholder=\"Enter pin code\"\r\n                      onChange={(e) => {\r\n                        const enteredPincode = e.target.value;\r\n                        setData((prevData) => ({\r\n                          ...prevData,\r\n                          pincode: enteredPincode,\r\n                        }));\r\n\r\n                        let selectedCity = Country_State_city?.filter(\r\n                          (city) => city?.pincode === enteredPincode\r\n                        );\r\n                       \r\n                        if (selectedCity?.length) {\r\n                          setData((prevData) => ({\r\n                            ...prevData,\r\n                            district: selectedCity[0]?.district,\r\n                            state: selectedCity[0]?.state,\r\n                          }));\r\n                        } \r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"district\">District:</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"district\"\r\n                      id=\"district\"\r\n                      value={data.district}\r\n                      readOnly\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"state\">State:</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"state\"\r\n                      id=\"state\"\r\n                      value={data.state}\r\n                      readOnly\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n          <Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <Label>OR</Label>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Bulk Import</Label>\r\n\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"file\"\r\n                      placeholder=\"\"\r\n                      name=\"BulkImport\"\r\n                      onChange={(e) => {\r\n                        setBulkImport(e.target.files[0]);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n          <FormGroup row>\r\n            <Col sm={{ size: 8, offset: 4 }}>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Create Employee Profile\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n    </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default EmployeeProfileForm;\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}