{"version":3,"sources":["views/apps/freshlist/privacyPolicy/AddPolicy.js"],"names":["AddPolicy","props","onEditorStateChange","editorState","setState","description","draftToHtml","convertToRaw","getCurrentContent","submitHandler","e","preventDefault","axiosConfig","post","state","then","response","console","log","history","push","swal","catch","error","EditorState","createEmpty","className","col-sm-6","render","onClick","onSubmit","this","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component"],"mappings":"wYAaMA,EAAS,kDACb,WAAYC,GAAQ,IAAD,EAKf,OALe,qBACjB,cAAMA,IAORC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZD,cACAE,YAAaC,IAAYC,uBAAaJ,EAAYK,yBAEpD,EAEFC,cAAgB,SAACC,GACfA,EAAEC,iBAKFC,IACGC,KAAK,qBAAsB,EAAKC,OAChCC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKf,MAAMkB,QAAQC,KAAK,8CAExBC,IAAK,YAAa,0BAA2B,cAE9CC,OAAM,SAACC,GACNN,QAAQC,IAAIK,OA5BhB,EAAKT,MAAQ,CACXT,YAAa,GACbF,YAAaqB,cAAYC,eACzB,EAgGH,OA/FA,mCA8BD,WACE,OACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACC,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIC,YAAA,EAASD,UAAU,cAAa,2BAItC,kBAAC,IAAG,KACF,kBAAC,IAAK,CACJE,OAAQ,gBAAGT,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLO,UAAU,8BACVG,QAAS,kBACPV,EAAQC,KAAK,gDAEhB,aAOT,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACU,SAAUC,KAAKtB,eACnB,kBAAC,SAAM,CACLuB,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChB/B,YAAa4B,KAAKjB,MAAMX,YACxBD,oBAAqB6B,KAAK7B,oBAC1BiC,QAAS,CACPC,QAAS,CAAC,SAAU,YAAa,WAAY,cAC7CC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEZ,UAAW,6BACnBa,OAAQ,CAAEb,UAAW,6BACrBc,UAAW,CAAEd,UAAW,6BACxBe,cAAe,CAAEf,UAAW,6BAC5BgB,KAAM,CAAEhB,UAAW,8BAErBiB,UAAW,CACTjB,UAAW,6BAEbkB,SAAU,CACRlB,UAAW,6BAEbmB,WAAY,CACVnB,UAAW,gCAIjB,6BACA,kBAAC,IAAM,CAACoB,MAAM,WAAU,yBAKjC,EAtGY,CAASC,IAAMC,WAwGfhD","file":"static/js/354.e463f853.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass AddPolicy extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      description: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const data = new FormData();\r\n    // data.append(\"description\", this.state.description);\r\n\r\n    axiosConfig\r\n      .post(\"/addprivacy_policy\", this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/freshlist/privacyPolicy/privacyPolicy\");\r\n        // alert(\"Privacy Policy Added Successfully !\");\r\n        swal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    // this.state.editorState.getCurrentContent().getPlainText();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Add New Privacy Policy\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/freshlist/privacyPolicy/privacyPolicy\")\r\n                  }\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            <Editor\r\n              toolbarClassName=\"demo-toolbar-absolute\"\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this.onEditorStateChange}\r\n              toolbar={{\r\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                inline: {\r\n                  options: [\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strikethrough\",\r\n                    \"monospace\",\r\n                  ],\r\n                  bold: { className: \"bordered-option-classname\" },\r\n                  italic: { className: \"bordered-option-classname\" },\r\n                  underline: { className: \"bordered-option-classname\" },\r\n                  strikethrough: { className: \"bordered-option-classname\" },\r\n                  code: { className: \"bordered-option-classname\" },\r\n                },\r\n                blockType: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontSize: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontFamily: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n              }}\r\n            />\r\n            <br />\r\n            <Button color=\"primary\">Add New Policy</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AddPolicy;\r\n"],"sourceRoot":""}