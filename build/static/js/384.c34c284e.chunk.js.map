{"version":3,"sources":["views/apps/freshlist/accounts/CreateCustomer.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","TransPorterToShow","CreateCustomer","useState","CreatAccountView","setCreatAccountView","RoleList","setRoleList","Country_State_city","setCountry_State_city","TransporterList","setTransporterList","AllTransporterList","setAllTransporterList","Countries","setCountry","BulkImport","setBulkImport","States","setState","setImage","Cities","setCities","Selectedtransporter","setSelectedtransporter","imageUri","setImageUris","formData","setFormData","dropdownValue","setdropdownValue","CustomerGroup","setCustomerGroup","index","setindex","Mode","setMode","error","setError","BulkUpload","setBulkUpload","Context","useContext","UserContext","history","useHistory","Params","useParams","handleFileChange","e","target","name","allimages","value","checked","Array","from","files","handleInputChange","type","Number","length","useEffect","_GetList","country_state_City_List","then","res","catch","err","console","log","navigator","geolocation","getCurrentPosition","position","Date","timestamp","toLocaleString","geotagging","coords","latitude","longitude","swal","timeout","enableHighAccuracy","id","_Get","View_Customer_ById","Customer","selectedtransporter","assignTransporter","map","ele","Country","countryselected","getAllCountries","filter","State","stateselected","getStatesOfCountry","isoCode","City","cityselected","getCitiesOfState","countryCode","status","userData","JSON","parse","localStorage","getItem","Create_Transporter_List","database","Transporter","userdata","View_CustomerGroup","myActive","Get_RoleList","_id","ShowList","Role","item","roleName","toLowerCase","includes","CreateCustomerxmlView","jsonData","xmlJs","xml2json","data","compact","spaces","input","MyDropDown","submitHandler","preventDefault","undefined","formdata","FormData","append","_BulkUpload","Bulk_Upload_Customer","message","dropdown","_text","_attributes","transporter_detail","stringify","val","rolename","CreateCustomersave","goBack","response","handleSetShowTransporter","VALUE","list","push","onSelect1","selectedList","selectedItem","onRemove1","className","lg","md","color","onClick","render","style","cursor","sm","required","placeholder","firstName","onChange","lastName","ownerName","inputClass","country","onKeyDown","key","countryCodeEditable","mobileNumber","phone","passPortNo","minLength","maxLength","pattern","aadharNo","inputPan","test","IsValid_Aadhar_No","panNo","toUpperCase","IsValid_Pan_No","personalPincode","SelectedCity","Pincode","StateName","District","readOnly","PCity","PState","address","xs","size","fiels","reader","FileReader","onload","result","readAsDataURL","PhotoUrl","borderRadius","src","height","width","alt","profileImage","Image_URL","password","category","groupName","duedate","lockInTime","limit","paymentTerm","transporterDetail","isObject","options","selectedValues","onSelect","onRemove","displayValue","serviceArea","partyType","registrationType","gstNumber","GST_Verification_Api","flag","tradeNam","pradr","adr","email","dealsInProducts","annualTurnover","ComapanyName","CompanyAddress","contactNumber","pincode","shopSize","address1","address2","multiple","event","prevUris","marginRight","onSubmit","Ripple","selected","selectedIndex","getAttribute","split","data-name","label","option","Registration_Type","moment","tz","format","phoneinput","library","getOptionLabel","getOptionValue","dateFormat","UserInformatio","timeZone","number","onWheel","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/384.c34c284e.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n  CreateCustomersave,\r\n  CreateCustomerxmlView,\r\n  Get_RoleList,\r\n  _BulkUpload,\r\n  _Get,\r\n  _GetList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { FaPlus, FaUpload } from \"react-icons/fa\";\r\nimport {\r\n  Bulk_Upload_Customer,\r\n  Create_Transporter_List,\r\n  GST_Verification_Api,\r\n  Image_URL,\r\n  View_CustomerGroup,\r\n  View_Customer_ById,\r\n  country_state_City_List,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nlet TransPorterToShow = [];\r\nconst CreateCustomer = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [RoleList, setRoleList] = useState([]);\r\n  const [Country_State_city, setCountry_State_city] = useState([]);\r\n\r\n  const [TransporterList, setTransporterList] = useState([]);\r\n  const [AllTransporterList, setAllTransporterList] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [BulkImport, setBulkImport] = useState(null);\r\n  const [States, setState] = useState({});\r\n  const [Image, setImage] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [Selectedtransporter, setSelectedtransporter] = useState([]);\r\n  const [imageUri, setImageUris] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState([]);\r\n  const [CustomerGroup, setCustomerGroup] = useState([]);\r\n  const [index, setindex] = useState(\"\");\r\n  const [Mode, setMode] = useState(\"Create\");\r\n  const [error, setError] = useState(\"\");\r\n  const [BulkUpload, setBulkUpload] = useState(false);\r\n\r\n  const Context = useContext(UserContext);\r\n  let history = useHistory();\r\n  let Params = useParams();\r\n\r\n  const handleFileChange = (e) => {\r\n    debugger;\r\n    const { name, value, checked } = e.target;\r\n    let allimages = Array.from(e.target.files);\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: allimages,\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        // if (/^\\d{0,10}$/.test(value)) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: Number(value),\r\n        });\r\n        // setError(\"\");\r\n        // }\r\n        //  else {\r\n        //   setError(\r\n        //     \"Please enter a valid number with a maximum length of 10 digits\"\r\n        //   );\r\n        // }\r\n      } else if (type == \"file\") {\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    _GetList(country_state_City_List)\r\n      .then((res) => {\r\n        setCountry_State_city(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const date = new Date(position.timestamp);\r\n          const CurentTime = date.toLocaleString();\r\n          formData.geotagging = `${position.coords.latitude},${position.coords.longitude}`;\r\n        },\r\n        (error) => {\r\n          swal(`Error: ${error}`);\r\n        },\r\n        { timeout: 10000, enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      swal(`Error: Geolocation not found`);\r\n    }\r\n  }, []);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (Params?.id == 0) {\r\n      setMode(\"Create\");\r\n    } else {\r\n      setMode(\"Edit\");\r\n\r\n      _Get(View_Customer_ById, Params?.id)\r\n        .then((res) => {\r\n          let value = res?.Customer[0];\r\n          setFormData(value);\r\n          let selectedtransporter = value?.assignTransporter?.map((ele) => {\r\n            return ele?.id;\r\n          });\r\n\r\n          if (selectedtransporter?.length) {\r\n            setSelectedtransporter(selectedtransporter);\r\n          }\r\n          if (value?.Country) {\r\n            let countryselected = Country?.getAllCountries()?.filter(\r\n              (ele, i) => ele?.name == value?.Country\r\n            );\r\n            setCountry(countryselected);\r\n            if (value?.State) {\r\n              let stateselected = State?.getStatesOfCountry(\r\n                countryselected[0]?.isoCode\r\n              )?.filter((ele, i) => ele?.name == value?.State);\r\n              setState(stateselected);\r\n              console.log(stateselected);\r\n              if (value?.City) {\r\n                let cityselected = City.getCitiesOfState(\r\n                  stateselected[0]?.countryCode,\r\n                  stateselected[0]?.isoCode\r\n                )?.filter((ele, i) => ele?.name == value?.City);\r\n                setCities(cityselected);\r\n              }\r\n            }\r\n          }\r\n          if (value?.status) {\r\n            formData[\"status\"] = value?.status;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    _Get(Create_Transporter_List, userData?.database)\r\n      .then((res) => {\r\n        let value = res?.Transporter;\r\n\r\n        if (value?.length) {\r\n          setTransporterList(value);\r\n          setAllTransporterList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    _Get(View_CustomerGroup, userdata?.database)\r\n      .then((res) => {\r\n        let myActive = res?.CustomerGroup?.filter(\r\n          (ele) => ele?.status == \"Active\"\r\n        );\r\n        setCustomerGroup(myActive);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    Get_RoleList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let ShowList = res?.Role?.filter(\r\n          (item, i) => item?.roleName?.toLowerCase()?.includes(\"customer\")\r\n          //  ||\r\n          // item?.roleName?.toLowerCase()?.includes(\"transporter\")\r\n        );\r\n        setRoleList(ShowList);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Roles List Not found\");\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    CreateCustomerxmlView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, {\r\n          compact: true,\r\n          spaces: 2,\r\n        });\r\n\r\n        console.log(JSON.parse(jsonData)?.CreateCustomer);\r\n        setCreatAccountView(JSON.parse(jsonData)?.CreateCustomer?.input);\r\n\r\n        setdropdownValue(JSON.parse(jsonData)?.CreateCustomer?.MyDropDown);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (BulkImport !== null || BulkImport != undefined) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", BulkImport);\r\n\r\n      await _BulkUpload(Bulk_Upload_Customer, formdata)\r\n        .then((res) => {\r\n          swal(`${res?.message}`);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Something Went Wrong\");\r\n        });\r\n    } else {\r\n      let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n      let formdata = new FormData();\r\n      dropdownValue?.map((ele, i) => {\r\n        formdata.append(\r\n          `${ele?.dropdown?.name?._text}`,\r\n          formData[ele?.dropdown?.name?._text]\r\n        );\r\n      });\r\n      CreatAccountView?.map((ele, i) => {\r\n        if (ele?.type?._attributes?.type == \"text\") {\r\n          if (ele?.name._text == \"transporter_detail\") {\r\n            formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n\r\n            if (formData.transporter_detail == \"other\") {\r\n              let id = TransporterList?.map((ele) => {\r\n                return { id: ele?._id };\r\n              });\r\n              let assignTransporter = id;\r\n              formdata.append(\r\n                \"assignTransporter\",\r\n                JSON.stringify(assignTransporter)\r\n              );\r\n            }\r\n          } else {\r\n            formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n          }\r\n        } else if (ele?.type?._attributes?.type == \"file\") {\r\n          if (ele?.name?._text == \"Shopphoto\") {\r\n            formData[ele?.name?._text]?.map((val, index) => {\r\n              formdata.append(\"file\", formData[ele?.name?._text][index]);\r\n            });\r\n          }\r\n          if (ele?.name?._text == \"photo\") {\r\n            formData[ele?.name?._text]?.map((val, index) => {\r\n              formdata.append(\"files\", formData[ele?.name?._text][index]);\r\n            });\r\n          }\r\n        } else {\r\n          formdata.append(\r\n            `${ele?.name?._text}`,\r\n            formData[ele?.name?._text] && formData[ele?.name?._text]\r\n              ? formData[ele?.name?._text]\r\n              : null\r\n          );\r\n        }\r\n      });\r\n\r\n      formdata.append(\"status\", formData?.status);\r\n      formdata.append(\"database\", userdata?.database);\r\n\r\n      formdata.append(\"rolename\", formData?.rolename);\r\n\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const date = new Date(position.timestamp);\r\n            const CurentTime = date.toLocaleString();\r\n            formdata.append(\"latitude\", position.coords.latitude);\r\n            formdata.append(\"longitude\", position.coords.longitude);\r\n          },\r\n          (error) => {\r\n            // this.setState({ Error: `Error: ${error}` });\r\n            swal(`Error: ${error}`);\r\n          },\r\n          { timeout: 10000, enableHighAccuracy: true }\r\n        );\r\n      } else {\r\n        swal(`Error: Geolocation not found`);\r\n      }\r\n\r\n      if (error) {\r\n      } else {\r\n        CreateCustomersave(formdata)\r\n          .then((res) => {\r\n            console.log(res);\r\n            setFormData({});\r\n            if (res.status) {\r\n              history.goBack();\r\n              swal(\"Customer Created Successfully\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response);\r\n            swal(\"something Went Wrong\");\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const handleSetShowTransporter = (VALUE) => {\r\n    let list = [...AllTransporterList];\r\n    TransPorterToShow = [];\r\n    list?.map((ele) => {\r\n      ele?.City?.map((val) => {\r\n        if (val?.name.includes(formData?.City)) {\r\n          TransPorterToShow?.push(ele);\r\n        }\r\n      });\r\n    });\r\n\r\n    setTransporterList(TransPorterToShow);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n\r\n  const onSelect1 = (selectedList, selectedItem) => {\r\n    setSelectedtransporter(selectedList);\r\n    console.log(selectedList);\r\n  };\r\n  const onRemove1 = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n    setSelectedtransporter(selectedList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col lg=\"3\" md=\"3\">\r\n              <h1 className=\"float-left\">{Mode && Mode} Customer</h1>\r\n            </Col>\r\n            <Col></Col>\r\n            {!BulkUpload && !BulkUpload ? (\r\n              <>\r\n                <Col lg=\"2\" md=\"2\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setBulkUpload(true);\r\n                    }}>\r\n                    Bulk Upload\r\n                  </Button>\r\n                </Col>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Col lg=\"1\" md=\"1\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setBulkUpload(false);\r\n                    }}>\r\n                    Back\r\n                  </Button>\r\n                </Col>\r\n              </>\r\n            )}\r\n            {!BulkUpload && !BulkUpload && (\r\n              <>\r\n                <Col lg=\"2\" md=\"2\">\r\n                  <div className=\"float-right\">\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className=\"float-right mr-1\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            history.push(`/app/ajgroup/house/CustomerGroupList`)\r\n                          }>\r\n                          {\" \"}\r\n                          + Customer Group\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col lg=\"1\" md=\"1\">\r\n                  <div className=\"float-right\">\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className=\"float-right mr-1\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            history.push(\"/app/SoftNumen/CustomerSearch\")\r\n                          }>\r\n                          Back\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </Row>\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                <Row>\r\n                  <Col className=\"mb-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <CardBody className=\"userRegiBody\">\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <h1>Personal Information</h1>\r\n                      </div>\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              First Name\r\n                              <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              placeholder=\"Enter First Name\"\r\n                              type=\"text\"\r\n                              name=\"firstName\"\r\n                              value={formData?.firstName}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Last Name <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              placeholder=\"Enter Last Name\"\r\n                              type=\"text\"\r\n                              name=\"lastName\"\r\n                              value={formData?.lastName}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Owner Name <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              placeholder=\"Enter Last Name\"\r\n                              type=\"text\"\r\n                              name=\"ownerName\"\r\n                              value={formData?.ownerName}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Mobile Number{\" \"}\r\n                              <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n                            </Label>\r\n                            <PhoneInput\r\n                              required\r\n                              inputClass=\"myphoneinput\"\r\n                              country={\"in\"}\r\n                              onKeyDown={(e) => {\r\n                                [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                  e.preventDefault();\r\n                              }}\r\n                              countryCodeEditable={false}\r\n                              name=\"mobileNumber\"\r\n                              value={JSON.stringify(formData?.mobileNumber)}\r\n                              onChange={(phone) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n\r\n                                  [\"mobileNumber\"]: Number(phone),\r\n                                });\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>Passport Number</Label>\r\n                            <Input\r\n                              placeholder=\"Enter Passport number\"\r\n                              type=\"text\"\r\n                              name=\"passPortNo\"\r\n                              value={formData?.passPortNo}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Aadhar Number{\" \"}\r\n                              <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              minLength={12}\r\n                              maxLength={12}\r\n                              pattern=\"[0-9]*\"\r\n                              placeholder=\"Enter Addhar Number\"\r\n                              type=\"number\"\r\n                              name=\"aadharNo\"\r\n                              value={formData?.aadharNo}\r\n                              onChange={(e) => {\r\n                                const inputPan = e.target.value;\r\n                                const panRegex = /^\\d{12}$/;\r\n\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"aadharNo\"]: Number(inputPan),\r\n                                  [\"IsValid_Aadhar_No\"]:\r\n                                    panRegex.test(inputPan),\r\n                                });\r\n                              }}\r\n                            />\r\n                            <span>\r\n                              {formData?.IsValid_Aadhar_No &&\r\n                              formData?.IsValid_Aadhar_No ? (\r\n                                <>\r\n                                  <span style={{ color: \"green\" }}>\r\n                                    Correct\r\n                                  </span>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  {formData?.aadharNo?.length > 16 ||\r\n                                    (formData?.aadharNo?.length < 15 && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        Enter Correct AadharNo\r\n                                      </span>\r\n                                    ))}\r\n                                </>\r\n                              )}\r\n                            </span>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Pan Number <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              minLength={10}\r\n                              maxLength={10}\r\n                              placeholder=\"Enter Pan Number\"\r\n                              type=\"text\"\r\n                              name=\"panNo\"\r\n                              value={formData?.panNo}\r\n                              onChange={(e) => {\r\n                                const inputPan = e.target.value?.toUpperCase();\r\n                                const panRegex = /[A-Z]{5}[0-9]{4}[A-Z]{1}/;\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"panNo\"]: inputPan,\r\n                                  [\"IsValid_Pan_No\"]: panRegex.test(inputPan),\r\n                                });\r\n                              }}\r\n                            />\r\n                            <span>\r\n                              {formData?.IsValid_Pan_No &&\r\n                              formData?.IsValid_Pan_No ? (\r\n                                <>\r\n                                  <span style={{ color: \"green\" }}>\r\n                                    Correct\r\n                                  </span>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  {formData?.panNo?.length > 9 && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      Enter Correct PAN Number\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </span>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Pin Code Number{\" \"}\r\n                              <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              onKeyDown={(e) => {\r\n                                [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                  e.preventDefault();\r\n                              }}\r\n                              type=\"number\"\r\n                              placeholder=\"Enter Pin Code here\"\r\n                              name=\"personalPincode\"\r\n                              value={formData?.personalPincode}\r\n                              onChange={(e) => {\r\n                                let SelectedCity = Country_State_city?.filter(\r\n                                  (ele) => ele?.Pincode == e.target.value\r\n                                );\r\n                                // console.log(SelectedCity);\r\n                                if (SelectedCity?.length) {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"PState\"]: SelectedCity[0]?.StateName,\r\n                                    [\"PCity\"]: SelectedCity[0]?.District,\r\n                                    [\"personalPincode\"]: Number(e.target.value),\r\n                                  });\r\n                                } else {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"personalPincode\"]: Number(e.target.value),\r\n                                  });\r\n                                }\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>City</Label>\r\n                            <Input\r\n                              readOnly\r\n                              placeholder=\"City name\"\r\n                              type=\"text\"\r\n                              name=\"PCity\"\r\n                              value={formData?.PCity}\r\n                              // onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>State</Label>\r\n                            <Input\r\n                              readOnly\r\n                              placeholder=\"State name\"\r\n                              type=\"text\"\r\n                              name=\"PState\"\r\n                              value={formData?.PState}\r\n                              // onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Address\r\n                              <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              className=\"form-control\"\r\n                              placeholder=\"address name\"\r\n                              type=\"text\"\r\n                              name=\"address\"\r\n                              value={formData?.address}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mt-2 mb-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                          <Row>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\">\r\n                              <div className=\"d-flex justify-content-center\">\r\n                                <Label>Image</Label>\r\n                              </div>\r\n\r\n                              <div className=\"parent\">\r\n                                <div className=\"file-upload\">\r\n                                  <FaUpload color=\"green\" size={35} />\r\n\r\n                                  <p>Click box to upload</p>\r\n                                  {/* <p>Maximun file size 10mb</p> */}\r\n                                  <input\r\n                                    type=\"file\"\r\n                                    name=\"Photo\"\r\n                                    onChange={(e) => {\r\n                                      const fiels = e.target.files[0];\r\n\r\n                                      setImage(fiels);\r\n                                      if (fiels) {\r\n                                        const reader = new FileReader();\r\n                                        reader.onload = (e) => {\r\n                                          setFormData({\r\n                                            ...formData,\r\n\r\n                                            [\"PhotoUrl\"]: e.target.result,\r\n                                          });\r\n                                        };\r\n                                        reader.readAsDataURL(fiels);\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                            {formData?.PhotoUrl && (\r\n                              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <img\r\n                                  style={{ borderRadius: \"8px\" }}\r\n                                  src={formData?.PhotoUrl}\r\n                                  height={100}\r\n                                  width={120}\r\n                                  alt=\"image\"\r\n                                />\r\n                              </Col>\r\n                            )}\r\n\r\n                            {formData?.profileImage && (\r\n                              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <img\r\n                                  style={{ borderRadius: \"8px\" }}\r\n                                  src={`${Image_URL}/Images/${formData?.profileImage}`}\r\n                                  height={100}\r\n                                  width={120}\r\n                                  alt=\"image\"\r\n                                />\r\n                              </Col>\r\n                            )}\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </CardBody>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <CardBody className=\"userRegiBody\">\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <h1>Other information</h1>\r\n                      </div>\r\n                      <Row>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Password <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              placeholder=\"Enter Password here\"\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              value={formData?.password}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>Geotagging</Label>\r\n                            <Input\r\n                              readOnly\r\n                              placeholder=\"Enter Password here\"\r\n                              type=\"text\"\r\n                              name=\"geotagging\"\r\n                              value={formData?.geotagging}\r\n                              // onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label className=\"\">\r\n                              Category <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <CustomInput\r\n                              name=\"category\"\r\n                              value={formData?.category}\r\n                              onChange={(e) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"category\"]: e.target.value,\r\n                                });\r\n                              }}\r\n                              type=\"select\">\r\n                              <option>--Select Category--</option>\r\n                              {CustomerGroup &&\r\n                                CustomerGroup?.map((ele, i) => (\r\n                                  <option key={ele?._id} value={ele?._id}>\r\n                                    {ele?.groupName}\r\n                                  </option>\r\n                                ))}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Due Date <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              className=\"form-control\"\r\n                              placeholder=\"Due Date\"\r\n                              type=\"number\"\r\n                              name=\"duedate\"\r\n                              value={formData?.duedate}\r\n                              onChange={(e) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"duedate\"]: Number(e.target.value),\r\n                                });\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Lock In Time{\" \"}\r\n                              <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              className=\"form-control\"\r\n                              placeholder=\"Lock In time in days\"\r\n                              type=\"number\"\r\n                              name=\"lockInTime\"\r\n                              value={formData?.lockInTime}\r\n                              onChange={(e) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"lockInTime\"]: Number(e.target.value),\r\n                                });\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Limit <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              className=\"form-control\"\r\n                              placeholder=\"Lock In time in days\"\r\n                              type=\"number\"\r\n                              name=\"limit\"\r\n                              value={formData?.limit}\r\n                              onChange={(e) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"limit\"]: Number(e.target.value),\r\n                                });\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Payment Term{\" \"}\r\n                              <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              className=\"form-control\"\r\n                              placeholder=\"Lock In time in days\"\r\n                              type=\"number\"\r\n                              name=\"paymentTerm\"\r\n                              value={formData?.paymentTerm}\r\n                              onChange={(e) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"paymentTerm\"]: Number(e.target.value),\r\n                                });\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label className=\"mb-1\">Transporter Details</Label>\r\n                            <CustomInput\r\n                              name=\"transporterDetail\"\r\n                              value={formData?.transporterDetail}\r\n                              onChange={(e) => {\r\n                                if (e.target.value == \"other\") {\r\n                                  handleSetShowTransporter(e.target.value);\r\n                                }\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"transporterDetail\"]: Number(e.target.value),\r\n                                });\r\n                              }}\r\n                              type=\"select\">\r\n                              <option value={null}>\r\n                                --Select Transporter Type--\r\n                              </option>\r\n                              <option value={0}>Local</option>\r\n                              <option value={1}>Other</option>\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        {formData?.transporterDetail &&\r\n                        formData?.transporterDetail == 1 ? (\r\n                          <>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label className=\"mb-1\">Transporter List</Label>\r\n                                <Multiselect\r\n                                  required\r\n                                  isObject=\"false\"\r\n                                  options={TransporterList} // Options to display in the dropdown\r\n                                  selectedValues={\r\n                                    Selectedtransporter && Selectedtransporter\r\n                                  } // Preselected value to persist in dropdown\r\n                                  onSelect={onSelect1} // Function will trigger on select event\r\n                                  onRemove={onRemove1} // Function will trigger on remove event\r\n                                  displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        ) : null}\r\n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>\r\n                              Service Area{\" \"}\r\n                              <span style={{ color: \"red\" }}>*</span>\r\n                            </Label>\r\n                            <Input\r\n                              required\r\n                              className=\"form-control\"\r\n                              placeholder=\"Service Area\"\r\n                              type=\"text\"\r\n                              name=\"serviceArea\"\r\n                              value={formData?.serviceArea}\r\n                              onChange={handleInputChange}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </CardBody>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <CardBody className=\"userRegiBody\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <h1>Company Information</h1>\r\n                    </div>\r\n                    <Row>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label className=\"mb-1\">Party Type</Label>\r\n                          <CustomInput\r\n                            name=\"partyType\"\r\n                            value={formData?.partyType}\r\n                            onChange={(e) => {\r\n                              setFormData({\r\n                                ...formData,\r\n                                [\"partyType\"]: Number(e.target.value),\r\n                              });\r\n                            }}\r\n                            type=\"select\">\r\n                            <option>--Select--</option>\r\n                            <option value={0}>Debitor</option>\r\n                            <option value={1}>Creditor</option>\r\n                          </CustomInput>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label className=\"mb-1\">Registration Type</Label>\r\n                          <CustomInput\r\n                            name=\"registrationType\"\r\n                            value={formData?.registrationType}\r\n                            onChange={(e) => {\r\n                              setFormData({\r\n                                ...formData,\r\n                                [\"registrationType\"]: Number(e.target.value),\r\n                              });\r\n                            }}\r\n                            type=\"select\">\r\n                            <option value={null}>--Select--</option>\r\n                            <option value={0}>UnKnown</option>\r\n                            <option value={1}>Regular</option>\r\n                            <option value={2}>UnRegister</option>\r\n                          </CustomInput>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\">\r\n                        <Label>GST Number *</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          required\r\n                          minLength={15}\r\n                          maxLength={15}\r\n                          name=\"gstNumber\"\r\n                          className=\"from-control\"\r\n                          placeholder=\" Enter Coorrect GST Number\"\r\n                          value={formData?.gstNumber}\r\n                          onChange={(e) => {\r\n                            let value = e.target.value;\r\n\r\n                            if (value?.length == 15) {\r\n                              (async () => {\r\n                                await _Get(GST_Verification_Api, value)\r\n                                  .then((res) => {\r\n                                    console.log(res);\r\n                                    if (res?.flag) {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"ComapanyName\"]: res?.data?.tradeNam,\r\n                                        [\"CompanyAddress\"]:\r\n                                          res?.data?.pradr?.adr,\r\n                                      });\r\n                                    } else {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"ComapanyName\"]: \"\",\r\n                                        [\"CompanyAddress\"]: \"\",\r\n                                      });\r\n                                    }\r\n                                  })\r\n                                  .catch((err) => {\r\n                                    swal(\"error\", \"somthing went Wrong\");\r\n                                    console.log(err);\r\n                                  });\r\n                              })();\r\n                            }\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Email Id</Label>\r\n                          <Input\r\n                            placeholder=\"last job firm name\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={formData?.email}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Deals in Prouduct</Label>\r\n                          <Input\r\n                            placeholder=\"Deals In Products\"\r\n                            type=\"text\"\r\n                            name=\"dealsInProducts\"\r\n                            value={formData?.dealsInProducts}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Annual TurnOver</Label>\r\n                          <Input\r\n                            placeholder=\"Deals In Products\"\r\n                            type=\"number\"\r\n                            name=\"annualTurnover\"\r\n                            value={formData?.annualTurnover}\r\n                            onChange={(e) => {\r\n                              setFormData({\r\n                                ...formData,\r\n                                [\"annualTurnover\"]: Number(e.target.value),\r\n                              });\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Company Name</Label>\r\n                          <Input\r\n                            readOnly\r\n                            className=\"form-control\"\r\n                            placeholder=\"last job firm name\"\r\n                            type=\"text\"\r\n                            name=\"ComapanyName\"\r\n                            value={formData?.ComapanyName}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Company Address</Label>\r\n                          <Input\r\n                            readOnly\r\n                            className=\"form-control\"\r\n                            placeholder=\"last job firm name\"\r\n                            type=\"text\"\r\n                            name=\"CompanyAddress\"\r\n                            value={formData?.CompanyAddress}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>Contact Number</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            placeholder=\"last job firm name\"\r\n                            type=\"text\"\r\n                            name=\"contactNumber\"\r\n                            value={formData?.contactNumber}\r\n                            onChange={(e) => {\r\n                              setFormData({\r\n                                ...formData,\r\n                                [\"contactNumber\"]: Number(e.target.value),\r\n                              });\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Pin Code Number{\" \"}\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <Input\r\n                            required\r\n                            onKeyDown={(e) => {\r\n                              [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                e.preventDefault();\r\n                            }}\r\n                            type=\"number\"\r\n                            placeholder=\"Enter Pin Code here\"\r\n                            name=\"pincode\"\r\n                            value={formData?.pincode}\r\n                            onChange={(e) => {\r\n                              let SelectedCity = Country_State_city?.filter(\r\n                                (ele) => ele?.Pincode == e.target.value\r\n                              );\r\n                              // console.log(SelectedCity);\r\n                              if (SelectedCity?.length) {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"State\"]: SelectedCity[0]?.StateName,\r\n                                  [\"City\"]: SelectedCity[0]?.District,\r\n                                  [\"pincode\"]: Number(e.target.value),\r\n                                });\r\n                              } else {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"pincode\"]: Number(e.target.value),\r\n                                });\r\n                              }\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>City</Label>\r\n                          <Input\r\n                            readOnly\r\n                            placeholder=\"City name\"\r\n                            type=\"text\"\r\n                            name=\"City\"\r\n                            value={formData?.City}\r\n                            // onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>State</Label>\r\n                          <Input\r\n                            readOnly\r\n                            placeholder=\"State name\"\r\n                            type=\"text\"\r\n                            name=\"State\"\r\n                            value={formData?.State}\r\n                            // onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            ShopSize <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <Input\r\n                            required\r\n                            className=\"form-control\"\r\n                            placeholder=\"address name\"\r\n                            type=\"text\"\r\n                            name=\"shopSize\"\r\n                            value={formData?.shopSize}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Address 1st <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <Input\r\n                            required\r\n                            className=\"form-control\"\r\n                            placeholder=\"address name\"\r\n                            type=\"text\"\r\n                            name=\"address1\"\r\n                            value={formData?.address1}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Address 2nd\r\n                            <span style={{ color: \"red\" }}>*</span>\r\n                          </Label>\r\n                          <Input\r\n                            required\r\n                            className=\"form-control\"\r\n                            placeholder=\"address name\"\r\n                            type=\"text\"\r\n                            name=\"address2\"\r\n                            value={formData?.address2}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"mt-2 mb-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                        <Row>\r\n                          <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\">\r\n                            <div className=\"d-flex justify-content-center\">\r\n                              <Label>Shop Photo</Label>\r\n                            </div>\r\n\r\n                            <div className=\"parent\">\r\n                              <div className=\"file-upload\">\r\n                                <FaUpload color=\"green\" size={35} />\r\n\r\n                                <p>Click box to upload</p>\r\n                                {/* <p>Maximun file size 10mb</p> */}\r\n                                <input\r\n                                  multiple\r\n                                  type=\"file\"\r\n                                  name=\"shopPhoto\"\r\n                                  onChange={(e) => {\r\n                                    let allimages = Array.from(e.target.files);\r\n\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [\"shopPhoto\"]: allimages,\r\n                                    });\r\n                                    const fiels = e.target.files;\r\n                                    debugger;\r\n                                    for (let i = 0; i < fiels.length; i++) {\r\n                                      const reader = new FileReader();\r\n                                      reader.onload = (event) => {\r\n                                        setImageUris((prevUris) => [\r\n                                          ...prevUris,\r\n                                          event.target.result,\r\n                                        ]);\r\n                                      };\r\n                                      reader.readAsDataURL(fiels[i]);\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                          {imageUri &&\r\n                            imageUri?.map((ele, i) => {\r\n                              return(\r\n\r\n                              <>\r\n                                <Col key={i} lg=\"2\" md=\"2\" sm=\"12\">\r\n                                  <img\r\n                                    \r\n                                    style={{ borderRadius: \"8px\" }}\r\n                                    src={ele}\r\n                                    height={100}\r\n                                    width={120}\r\n                                    alt=\"image\"\r\n                                  />\r\n                                </Col>\r\n                              </>\r\n                              )\r\n                            })}\r\n\r\n                          {formData?.profileImage && (\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <img\r\n                                style={{ borderRadius: \"8px\" }}\r\n                                src={`${Image_URL}/Images/${formData?.profileImage}`}\r\n                                height={100}\r\n                                width={120}\r\n                                alt=\"image\"\r\n                              />\r\n                            </Col>\r\n                          )}\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                <Label className=\"mb-0\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => {\r\n                    setFormData({\r\n                      ...formData,\r\n                      [\"status\"]: e.target.value,\r\n                    });\r\n                  }}>\r\n                  <input\r\n                    required\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    required\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Deactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {BulkUpload && BulkUpload ? (\r\n              <>\r\n                <Form className=\"m-1\" onSubmit={submitHandler}>\r\n                  <Row>\r\n                    <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Bulk Import</Label>\r\n\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"file\"\r\n                          placeholder=\"\"\r\n                          name=\"BulkImport\"\r\n                          onChange={(e) => {\r\n                            setBulkImport(e.target.files[0]);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mr-1 mt-2 mx-2\">\r\n                      Import\r\n                    </Button.Ripple>\r\n                  </Row>\r\n                </Form>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Form className=\"m-1\" onSubmit={submitHandler}>\r\n                  <Row className=\"mb-2\">\r\n                    <Col lg=\"4\" md=\"4\">\r\n                      <FormGroup>\r\n                        <Label className=\"mb-1\">Role List *</Label>\r\n                        <CustomInput\r\n                          required\r\n                          type=\"select\"\r\n                          name=\"rolename\"\r\n                          value={formData[\"rolename\"]}\r\n                          onChange={(e) => {\r\n                            const selected = e.target.options[\r\n                              e.target.selectedIndex\r\n                            ]\r\n                              .getAttribute(\"data-name\")\r\n                              ?.split(\" \");\r\n\r\n                            setFormData({\r\n                              ...formData,\r\n                              [\"rolename\"]: e.target.value,\r\n                              [\"roleName\"]: selected[1],\r\n                            });\r\n                          }}>\r\n                          <option>--select Role--</option>\r\n                          {RoleList &&\r\n                            RoleList?.length &&\r\n                            RoleList?.map((ele, i) => {\r\n                              return (\r\n                                <option\r\n                                  data-name={`${ele?.position} ${ele?.roleName}`}\r\n                                  value={ele?._id}>\r\n                                  {ele?.roleName}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                        </CustomInput>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    {dropdownValue && dropdownValue ? (\r\n                      <>\r\n                        {dropdownValue?.map((ele, i) => {\r\n                          if (\r\n                            formData?.roleName &&\r\n                            formData?.roleName == \"Transporter\"\r\n                          ) {\r\n                            if (\r\n                              ele?.dropdown?.label?._text == \"Select Party Type\"\r\n                            ) {\r\n                              return null;\r\n                            } else {\r\n                              return (\r\n                                <>\r\n                                  <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                      <Label className=\"mb-1\">\r\n                                        {ele?.dropdown?.label?._text &&\r\n                                          ele?.dropdown?.label?._text}\r\n                                      </Label>\r\n                                      <CustomInput\r\n                                        required\r\n                                        type=\"select\"\r\n                                        name={ele?.dropdown?.name?._text}\r\n                                        value={\r\n                                          formData[ele?.dropdown?.name?._text]\r\n                                        }\r\n                                        onChange={handleInputChange}>\r\n                                        <option value=\"\">--Select --</option>\r\n                                        {ele?.dropdown?.option?.map(\r\n                                          (option, index) => (\r\n                                            <option\r\n                                              key={index}\r\n                                              value={\r\n                                                option?._attributes?.value\r\n                                              }>\r\n                                              {option?._attributes?.value}\r\n                                            </option>\r\n                                          )\r\n                                        )}\r\n                                      </CustomInput>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              );\r\n                            }\r\n                          } else {\r\n                            return (\r\n                              <>\r\n                                <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                  <FormGroup>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.dropdown?.label?._text &&\r\n                                        ele?.dropdown?.label?._text}\r\n                                    </Label>\r\n                                    <CustomInput\r\n                                      required\r\n                                      type=\"select\"\r\n                                      name={ele?.dropdown?.name?._text}\r\n                                      value={\r\n                                        formData[ele?.dropdown?.name?._text]\r\n                                      }\r\n                                      onChange={handleInputChange}>\r\n                                      <option value=\"\">--Select --</option>\r\n                                      {ele?.dropdown?.option?.map(\r\n                                        (option, index) => (\r\n                                          <option\r\n                                            key={index}\r\n                                            value={option?._attributes?.value}>\r\n                                            {option?._attributes?.value}\r\n                                          </option>\r\n                                        )\r\n                                      )}\r\n                                    </CustomInput>\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </>\r\n                    ) : null}\r\n\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.map((ele, i) => {\r\n                        if (ele?.name?._text == \"Category\") {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text} *\r\n                                  </Label>\r\n                                  <CustomInput\r\n                                    value={formData?.ele?.name?._text}\r\n                                    onChange={(e) => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: e.target.value,\r\n                                      });\r\n                                    }}\r\n                                    type=\"select\">\r\n                                    <option>--Select Category--</option>\r\n                                    {CustomerGroup &&\r\n                                      CustomerGroup?.map((ele, i) => (\r\n                                        <option key={ele?._id} value={ele?._id}>\r\n                                          {ele?.groupName}\r\n                                        </option>\r\n                                      ))}\r\n                                  </CustomInput>\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        }\r\n                        if (\r\n                          formData?.Registration_Type &&\r\n                          formData?.Registration_Type == \"Unregistered\"\r\n                        ) {\r\n                          if (ele?.label?._text.includes(\"GST Number\")) {\r\n                            return null;\r\n                          }\r\n                        }\r\n                        if (\r\n                          ele?.label?._text &&\r\n                          ele?.label?._text\r\n                            ?.toLowerCase()\r\n                            ?.includes(\"transporter\")\r\n                        ) {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n                                  <CustomInput\r\n                                    value={formData[\"transporter_detail\"]}\r\n                                    onChange={(e) => {\r\n                                      if (e.target.value == \"other\") {\r\n                                        handleSetShowTransporter(\r\n                                          e.target.value\r\n                                        );\r\n                                      }\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: e.target.value,\r\n                                      });\r\n                                    }}\r\n                                    type=\"select\">\r\n                                    <option>--Select Transporter Type--</option>\r\n                                    <option value=\"Local\">Local</option>\r\n                                    <option value=\"other\">Other</option>\r\n                                  </CustomInput>\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                              {formData?.transporter_detail &&\r\n                              formData?.transporter_detail == \"other\" ? (\r\n                                <>\r\n                                  <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                      <Label className=\"mb-1\">\r\n                                        Transporter List\r\n                                      </Label>\r\n                                      <Multiselect\r\n                                        required\r\n                                        isObject=\"false\"\r\n                                        options={TransporterList} // Options to display in the dropdown\r\n                                        selectedValues={\r\n                                          Selectedtransporter &&\r\n                                          Selectedtransporter\r\n                                        } // Preselected value to persist in dropdown\r\n                                        onSelect={onSelect1} // Function will trigger on select event\r\n                                        onRemove={onRemove1} // Function will trigger on remove event\r\n                                        displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                                      />\r\n\r\n                                      {index === i ? (\r\n                                        <>\r\n                                          {error && (\r\n                                            <span style={{ color: \"red\" }}>\r\n                                              {error}\r\n                                            </span>\r\n                                          )}\r\n                                        </>\r\n                                      ) : (\r\n                                        <></>\r\n                                      )}\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ) : null}\r\n                            </>\r\n                          );\r\n                        }\r\n\r\n                        const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                          .tz(\"America/New_York\")\r\n                          .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                        if (!!ele?.phoneinput) {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(phone) => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        } else if (!!ele?.library) {\r\n                          if (ele?.label._text?.includes(\"ountry\")) {\r\n                            {\r\n                              /* console.log(ele); */\r\n                            }\r\n                            return (\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n                                  <Select\r\n                                    inputClass=\"countryclass\"\r\n                                    className=\"countryclassnw\"\r\n                                    options={Country.getAllCountries()}\r\n                                    getOptionLabel={(options) => {\r\n                                      return options[\"name\"];\r\n                                    }}\r\n                                    getOptionValue={(options) => {\r\n                                      return options[\"name\"];\r\n                                    }}\r\n                                    value={Countries}\r\n                                    onChange={(country) => {\r\n                                      setCountry(country);\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"Country\"]: country?.name,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            );\r\n                          } else if (ele?.label._text?.includes(\"tate\")) {\r\n                            return (\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n                                  <Select\r\n                                    options={State?.getStatesOfCountry(\r\n                                      Countries?.isoCode\r\n                                    )}\r\n                                    getOptionLabel={(options) => {\r\n                                      return options[\"name\"];\r\n                                    }}\r\n                                    getOptionValue={(options) => {\r\n                                      return options[\"name\"];\r\n                                    }}\r\n                                    value={States}\r\n                                    onChange={(State) => {\r\n                                      setState(State);\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"State\"]: State?.name,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            );\r\n                          } else if (ele?.label._text?.includes(\"ity\")) {\r\n                            return (\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n                                  <Select\r\n                                    options={City?.getCitiesOfState(\r\n                                      States?.countryCode,\r\n                                      States?.isoCode\r\n                                    )}\r\n                                    getOptionLabel={(options) => {\r\n                                      return options[\"name\"];\r\n                                    }}\r\n                                    getOptionValue={(options) => {\r\n                                      return options[\"name\"];\r\n                                    }}\r\n                                    value={Cities}\r\n                                    onChange={(City) => {\r\n                                      setCities(City);\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [\"City\"]: City?.name,\r\n                                        [\"transporter_detail\"]: \"Local\",\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <>\r\n                                {ele?.type?._attributes?.type == \"date\" ? (\r\n                                  <>\r\n                                    <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                      <FormGroup key={i}>\r\n                                        <Label className=\"mb-1\">\r\n                                          {ele?.label?._text}\r\n                                        </Label>\r\n\r\n                                        <Input\r\n                                          onKeyDown={(e) => {\r\n                                            if (\r\n                                              ele?.type?._attributes?.type ==\r\n                                              \"number\"\r\n                                            ) {\r\n                                              [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                                e.key\r\n                                              ) && e.preventDefault();\r\n                                            }\r\n                                          }}\r\n                                          type={ele?.type?._attributes?.type}\r\n                                          placeholder={ele?.placeholder?._text}\r\n                                          name={ele?.name?._text}\r\n                                          dateFormat={\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          }\r\n                                          value={\r\n                                            moment(formData[ele?.name?._text])\r\n                                              .tz(\r\n                                                Context?.UserInformatio\r\n                                                  ?.timeZone\r\n                                              )\r\n                                              .format(\r\n                                                Context?.UserInformatio\r\n                                                  ?.dateFormat\r\n                                              )\r\n                                            // formData[ele?.name?._text]\r\n                                          }\r\n                                          // value={formData[ele?.name?._text]}\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(\r\n                                              e,\r\n                                              ele?.type?._attributes?.type,\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                        {index === i ? (\r\n                                          <>\r\n                                            {error && (\r\n                                              <span style={{ color: \"red\" }}>\r\n                                                {error}\r\n                                              </span>\r\n                                            )}\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </FormGroup>\r\n                                    </Col>\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                      <FormGroup key={i}>\r\n                                        <Label className=\"mb-1\">\r\n                                          {ele?.label?._text}\r\n                                        </Label>\r\n\r\n                                        <Input\r\n                                          onKeyDown={(e) => {\r\n                                            if (\r\n                                              ele?.type?._attributes?.type ==\r\n                                              \"number\"\r\n                                            ) {\r\n                                              [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                                e.key\r\n                                              ) && e.preventDefault();\r\n                                            }\r\n                                          }}\r\n                                          type={ele?.type?._attributes?.type}\r\n                                          placeholder={ele?.placeholder?._text}\r\n                                          name={ele?.name?._text}\r\n                                          value={formData[ele?.name?._text]}\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(\r\n                                              e,\r\n                                              ele?.type?._attributes?.type,\r\n                                              i\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                        {index === i ? (\r\n                                          <>\r\n                                            {error && (\r\n                                              <span style={{ color: \"red\" }}>\r\n                                                {error}\r\n                                              </span>\r\n                                            )}\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </FormGroup>\r\n                                    </Col>\r\n                                  </>\r\n                                )}\r\n                              </>\r\n                            );\r\n                          }\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              {!!ele?.number ? (\r\n                                <>\r\n                                  <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                    <FormGroup key={i}>\r\n                                      <Label className=\"mb-1\">\r\n                                        {ele?.label?._text}\r\n                                      </Label>\r\n\r\n                                      <Input\r\n                                        onWheel={(e) => {\r\n                                          e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                        }}\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            ele?.type?._attributes?.type ==\r\n                                            \"number\"\r\n                                          ) {\r\n                                            [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                              e.key\r\n                                            ) && e.preventDefault();\r\n                                          }\r\n                                        }}\r\n                                        type={ele?.type?._attributes?.type}\r\n                                        placeholder={ele?.placeholder?._text}\r\n                                        name={ele?.name?._text}\r\n                                        value={formData[ele?.name?._text]}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            e,\r\n                                            ele?.type?._attributes?.type,\r\n                                            i\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                      {index === i ? (\r\n                                        <>\r\n                                          {error && (\r\n                                            <span style={{ color: \"red\" }}>\r\n                                              {error}\r\n                                            </span>\r\n                                          )}\r\n                                        </>\r\n                                      ) : (\r\n                                        <></>\r\n                                      )}\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ) : (\r\n                                <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    {ele?.type?._attributes?.type &&\r\n                                    ele?.type?._attributes?.type == \"file\" ? (\r\n                                      <>\r\n                                        <Label className=\"mb-1\">\r\n                                          {ele?.label?._text}\r\n                                        </Label>\r\n\r\n                                        <Input\r\n                                          multiple\r\n                                          className=\"form-control\"\r\n                                          type={ele?.type?._attributes?.type}\r\n                                          placeholder={ele?.placeholder?._text}\r\n                                          name={ele?.name?._text}\r\n                                          //   value={formData[ele?.name?._text]}\r\n                                          onChange={(e) => {\r\n                                            // const value = e.target.value;\r\n                                            // // Use regular expression to allow only numbers\r\n                                            // const numericValue = value.replace(\r\n                                            //   /\\D/g,\r\n                                            //   \"\"\r\n                                            // );\r\n                                            handleFileChange(\r\n                                              e,\r\n                                              ele?.type?._attributes?.type,\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                        {index === i ? (\r\n                                          <>\r\n                                            {error && (\r\n                                              <span style={{ color: \"red\" }}>\r\n                                                {error}\r\n                                              </span>\r\n                                            )}\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <>\r\n                                        <Label className=\"mb-1\">\r\n                                          {ele?.label?._text}\r\n                                        </Label>\r\n\r\n                                        <Input\r\n                                          className=\"form-control\"\r\n                                          onKeyDown={(e) => {\r\n                                            if (\r\n                                              ele?.type?._attributes?.type ==\r\n                                              \"number\"\r\n                                            ) {\r\n                                              [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                                e.key\r\n                                              ) && e.preventDefault();\r\n                                            }\r\n                                          }}\r\n                                          type={ele?.type?._attributes?.type}\r\n                                          placeholder={ele?.placeholder?._text}\r\n                                          name={ele?.name?._text}\r\n                                          value={formData[ele?.name?._text]}\r\n                                          onChange={(e) => {\r\n                                            // const value = e.target.value;\r\n                                            // // Use regular expression to allow only numbers\r\n                                            // const numericValue = value.replace(\r\n                                            //   /\\D/g,\r\n                                            //   \"\"\r\n                                            // );\r\n                                            handleInputChange(\r\n                                              e,\r\n                                              ele?.type?._attributes?.type,\r\n                                              i\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                        {index === i ? (\r\n                                          <>\r\n                                            {error && (\r\n                                              <span style={{ color: \"red\" }}>\r\n                                                {error}\r\n                                              </span>\r\n                                            )}\r\n                                          </>\r\n                                        ) : (\r\n                                          <></>\r\n                                        )}\r\n                                      </>\r\n                                    )}\r\n\r\n                                    {/* <Label className=\"mb-1\">\r\n                                  {ele?.label?._text}\r\n                                </Label>\r\n\r\n                                <Input\r\n                                  className=\"form-control\"\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    // const value = e.target.value;\r\n                                    // // Use regular expression to allow only numbers\r\n                                    // const numericValue = value.replace(\r\n                                    //   /\\D/g,\r\n                                    //   \"\"\r\n                                    // );\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )} */}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        }\r\n                      })}\r\n                  </Row>\r\n\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                      <Label className=\"mb-0\">Status</Label>\r\n                      <div\r\n                        className=\"form-label-group\"\r\n                        onChange={(e) => {\r\n                          setFormData({\r\n                            ...formData,\r\n                            [\"status\"]: e.target.value,\r\n                          });\r\n                        }}>\r\n                        <input\r\n                          checked={formData.status == \"Active\"}\r\n                          style={{ marginRight: \"3px\" }}\r\n                          type=\"radio\"\r\n                          name=\"status\"\r\n                          value=\"Active\"\r\n                        />\r\n                        <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                        <input\r\n                          checked={formData.status == \"Deactive\"}\r\n                          style={{ marginRight: \"3px\" }}\r\n                          type=\"radio\"\r\n                          name=\"status\"\r\n                          value=\"Deactive\"\r\n                        />\r\n                        <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mr-1 mt-2 mx-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </Row>\r\n                </Form>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateCustomer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}