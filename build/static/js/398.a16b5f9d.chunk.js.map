{"version":3,"sources":["views/apps/freshlist/cart/SuggestedProducts.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["selectItem1","SuggestedProducts","state","rowData","userDataList","mainRole","userid","BudgetValue","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","full_name","className","color","budget","remaining_budget","created_date","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleAssignBudget","e","preventDefault","pageparmission","JSON","parse","localStorage","getItem","FormData","uniqueChars","Set","append","Userinfo","id","stringify","axiosConfig","post","then","res","swal","console","log","window","location","reload","componentDidMount","catch","err","onRemove","selectedList","removedItem","this","role","newparmisson","find","value","pageName","Viewpermisson","permission","includes","Createpermisson","Editpermisson","Deletepermisson","formdata","response","users","selectedItem","length","i","push","sm","lg","md","onKeyDown","key","onChange","target","type","required","options","selectedValues","selectedValue","onSelect","displayValue","title","onClick","tag","size","right","placeholder","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/398.a16b5f9d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n  Label,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n// import { components } from \"react-select\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nconst selectItem1 = [];\r\nclass SuggestedProducts extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    userDataList: [],\r\n    mainRole: \"\",\r\n    userid: \"\",\r\n    BudgetValue: \"\",\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"full_name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.full_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Assigned Budget\",\r\n        field: \"budget\",\r\n        filter: true,\r\n        width: 220,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex mt-1 align-items-center cursor-pointer\">\r\n              <Badge color=\"success\">{params.data.budget}</Badge>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Remaining Budget\",\r\n        field: \"remaining_budget\",\r\n        filter: true,\r\n        width: 220,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex mt-1 align-items-center cursor-pointer\">\r\n              <Badge color=\"warning\">{params.data.remaining_budget}</Badge>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Assigned Date\",\r\n        field: \"created_date\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.created_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"How Many Orders Placed\",\r\n      //   field: \"orders\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.orders}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"How Many Remaining\",\r\n      //   field: \"remaining\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.remaining}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Block\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Unblock\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Actions\",\r\n      //   field: \"sortorder\",\r\n      //   field: \"transactions\",\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Eye\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"green\"\r\n      //           onClick={() =>\r\n      //             history.push(\r\n      //               `/app/freshlist/subscriber/viewSubscriber/${params.data._id}`\r\n      //             )\r\n      //           }\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(\"role\", pageparmission.Userinfo.role);\r\n    this.setState({ mainRole: pageparmission?.Userinfo?.role });\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Budget List\"\r\n    );\r\n    console.log(newparmisson);\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n\r\n    axiosConfig\r\n      .post(\"/getAllUsersBuget\", formdata)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        let rowData = response?.data?.data;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    const data = new FormData();\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"role\", \"User\");\r\n    axiosConfig\r\n      .post(\"/getUserlistforBudget\", data)\r\n      .then((response) => {\r\n        let userDataList = response?.data?.data?.users;\r\n        this.setState({ userDataList });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n      });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleAssignBudget = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const data = new FormData();\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    // debugger;\r\n    // console.log(uniqueChars);\r\n\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"budget\", this.state.BudgetValue);\r\n    data.append(\"assign_user_id\", JSON.stringify(uniqueChars));\r\n    if (this.state.BudgetValue > 0) {\r\n      axiosConfig\r\n        .post(`/addbudget`, data)\r\n        .then((res) => {\r\n          swal(\"Budget Assigned Successfully\");\r\n          console.log(res.data);\r\n          this.setState({ BudgetValue: \"\" });\r\n          this.setState({ userid: \"\" });\r\n          window.location.reload();\r\n          this.componentDidMount();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      swal(\"Something is Missing. Enter details before Submit\");\r\n    }\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(selectedList);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n    // console.log(selectItem1);\r\n  }\r\n\r\n  onRemove = (selectedList, removedItem) => {\r\n    // selectItem1 = [];\r\n    // console.log(selectedList);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectItem1.push({ userid: selectedList[i].id });\r\n    //   }\r\n    // }\r\n    console.log(removedItem);\r\n\r\n    // let arr1 = selectItem1.includes(removedItem?.id);\r\n    // let newarr = selectItem1.filter((val) => {\r\n    //   console.log(((val = removedItem?.id), i));\r\n    //   debugger;\r\n    //   if (val === removedItem?.id) {\r\n    //     return null;\r\n    //   } else {\r\n    //     return val;\r\n    //   }\r\n    // });\r\n    // console.log(arr1);\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      // console.log(rowData),\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n                <h1 sm=\"4\" className=\"\">\r\n                  Budget List\r\n                </h1>\r\n              </Col>\r\n              {this.state.mainRole === \"Super Admin\" && (\r\n                <>\r\n                  <Col>\r\n                    <label className=\"selectClient\">Add Amount</label>\r\n                    <input\r\n                      onKeyDown={(e) =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      onChange={(e) => {\r\n                        this.setState({ BudgetValue: e.target.value });\r\n                      }}\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label>Select A User</Label>\r\n                      <Multiselect\r\n                        required\r\n                        options={this.state.userDataList} // Options to display in the dropdown\r\n                        selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                        onSelect={this.onSelect} // Function will trigger on select event\r\n                        onRemove={this.onRemove} // Function will trigger on remove event\r\n                        displayValue=\"username\" // Property name to display in the dropdown options\r\n                      />\r\n                      {/* <select\r\n                        required\r\n                        onChange={(e) =>\r\n                          this.setState({ userid: e.target.value })\r\n                        }\r\n                        className=\"form-control\"\r\n                        name=\"Select\"\r\n                        id=\"Select\"\r\n                      >\r\n                        <option value=\"\">--Select A User--</option>\r\n                        {this.state.userDataList &&\r\n                          this.state.userDataList?.map((val, i) => (\r\n                            <option key={i} value={val?.id}>\r\n                              {val?.username}\r\n                            </option>\r\n                          ))}\r\n                      </select> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Button\r\n                        title=\"Select user and Amount for Submit\"\r\n                        color=\"primary\"\r\n                        className=\"custom-button mt-2\"\r\n                        onClick={(e) => {\r\n                          this.handleAssignBudget(e);\r\n                        }}\r\n                      >\r\n                        Assign Now\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </Row>\r\n\r\n            {/* <Col>\r\n                  <Button color=\"primary\" className=\"mt-1\">\r\n                    Assign Budget\r\n                  </Button>\r\n                </Col> */}\r\n            {/* <Col>\r\n                  <input className=\"form-control mt-1\" type=\"number\" />\r\n                </Col>\r\n                <Col>\r\n                  <Button color=\"primary\" className=\"mt-1\">\r\n                    TOPUP Budget\r\n                  </Button>\r\n                </Col> */}\r\n\r\n            {/* <Col>\r\n                  <Button color=\"primary\" className=\"mt-1\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row> */}\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default SuggestedProducts;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}