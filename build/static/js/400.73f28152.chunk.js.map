{"version":3,"sources":["views/apps/freshlist/category/EditCategory.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddCategory","props","onChangeHandler1","event","setState","selectedFile1","target","files","selectedName1","name","console","log","onChangeHandler2","selectedFile2","selectedName2","onChangeHandler3","selectedFile3","selectedName3","onChangeHandler4","selectedFile4","selectedName4","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","id","match","params","data","JSON","parse","localStorage","getItem","FormData","append","state","category_name","feature","UpdateCategory","then","res","history","push","swal","catch","err","type","file","this","View_Catby_id","Category","response","image","description","className","col-sm-6","render","onClick","onSubmit","lg","md","placeholder","onChange","style","borderRadius","src","Image_URL","alt","height","width","sm","checked","marginRight","Ripple","color","Component","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/400.73f28152.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Form,\r\n//   Row,\r\n//   Input,\r\n//   Label,\r\n//   Button,\r\n//   FormGroup,\r\n//   CustomInput,\r\n// } from \"reactstrap\";\r\n// import { history } from \"../../../../history\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import { Route } from \"react-router-dom\";\r\n// import swal from \"sweetalert\";\r\n// import { CloudLightning } from \"react-feather\";\r\n\r\n// export class EditCategory extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       category_name: \"\",\r\n//       type: \"\",\r\n//       feature: \"\",\r\n//       status: \"\",\r\n//       selectedFile1: null,\r\n//       selectedName1: \"\",\r\n//       selectedFile2: null,\r\n//       selectedName2: \"\",\r\n//       selectedFile3: null,\r\n//       selectedName3: \"\",\r\n//       selectedFile4: null,\r\n//       selectedName4: \"\",\r\n//     };\r\n//   }\r\n\r\n//   onChangeHandler1 = (event) => {\r\n//     this.setState({ selectedFile1: event.target.files[0] });\r\n//     this.setState({ selectedName1: event.target.files[0].name });\r\n//     console.log(event.target.files[0]);\r\n//   };\r\n//   onChangeHandler2 = (event) => {\r\n//     this.setState({ selectedFile2: event.target.files[0] });\r\n//     this.setState({ selectedName2: event.target.files[0].name });\r\n//     console.log(event.target.files[0]);\r\n//   };\r\n//   onChangeHandler3 = (event) => {\r\n//     this.setState({ selectedFile3: event.target.files[0] });\r\n//     this.setState({ selectedName3: event.target.files[0].name });\r\n//     console.log(event.target.files[0]);\r\n//   };\r\n//   onChangeHandler4 = (event) => {\r\n//     this.setState({ selectedFile4: event.target.files[0] });\r\n//     this.setState({ selectedName4: event.target.files[0].name });\r\n//     console.log(event.target.files[0]);\r\n//   };\r\n\r\n//   changeHandler1 = (e) => {\r\n//     this.setState({ status: e.target.value });\r\n//   };\r\n//   changeHandler = (e) => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     let { id } = this.props.match.params;\r\n//     console.log(id);\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     const data = new FormData();\r\n//     data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     data.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     data.append(\"cat_id\", id);\r\n//     axiosConfig\r\n//       .post(`/getcategoryview`, data)\r\n//       .then((response) => {\r\n//         console.log(response.data.data?.category);\r\n//         this.setState({\r\n//           data: response.data.data?.category,\r\n//         });\r\n//         this.setState({\r\n//           category_name: response.data.data?.category?.category_name,\r\n//           status: response.data.data?.category?.status,\r\n//         });\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   }\r\n\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     let { id } = this.props.match.params;\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n//     const data = new FormData();\r\n//     data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     data.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     data.append(\"cat_id\", id);\r\n//     data.append(\"category_name\", this.state.category_name);\r\n//     data.append(\"status\", this.state.status);\r\n\r\n//     // for (var value of data.values()) {\r\n//     //   console.log(value);\r\n//     // }\r\n\r\n//     axiosConfig\r\n//       .post(`/categoryeditsubmit`, data)\r\n//       .then((response) => {\r\n//         // console.log(response?.data.success);\r\n//         if (response?.data.success) {\r\n//           swal(\"Success!\", \"You Data iS been Submitted\", \"success\");\r\n//           this.props.history.push(\"/app/freshlist/category/categoryList\");\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Card>\r\n//           <Row className=\"m-2\">\r\n//             <Col>\r\n//               <h1 col-sm-6 className=\"float-left\">\r\n//                 Edit category\r\n//               </h1>\r\n//             </Col>\r\n//             <Col>\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Button\r\n//                     className=\" btn btn-danger float-right\"\r\n//                     onClick={() =>\r\n//                       history.push(\"/app/freshlist/category/categoryList\")\r\n//                     }\r\n//                   >\r\n//                     Back\r\n//                   </Button>\r\n//                 )}\r\n//               />\r\n//             </Col>\r\n//           </Row>\r\n//           <CardBody>\r\n//             <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n//               <Row className=\"mb-2\">\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Category Name</Label>\r\n//                     <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Category Name\"\r\n//                       name=\"category_name\"\r\n//                       value={this.state.category_name}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n//                   <Label className=\"mb-0 mx-1\">Status</Label>\r\n//                   <div\r\n//                     className=\"form-label-group\"\r\n//                     onChange={this.changeHandler1}\r\n//                   >\r\n//                     <input\r\n//                       checked={this.state.status === \"Active\" ? true : false}\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Active\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n//                     <input\r\n//                       checked={this.state.status == \"Deactive\" ? true : false}\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Deactive\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n//                   </div>\r\n//                 </Col>\r\n//                 {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n//                   <Label>Type</Label>\r\n//                   <CustomInput\r\n//                     type=\"select\"\r\n//                     placeholder=\"Select Type\"\r\n//                     name=\"type\"\r\n//                     value={this.state.type}\r\n//                     onChange={this.changeHandler}\r\n//                   >\r\n//                     <option>---Select---</option>\r\n//                     <option value=\"veg\">Veg</option>\r\n//                     <option value=\"nonveg\">Non-Veg</option>\r\n//                     <option value=\"egg\">Egg only</option>\r\n//                   </CustomInput>\r\n//                 </Col> */}\r\n\r\n//                 {/* <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Category Image </Label>\r\n//                     <CustomInput type=\"file\" onChange={this.onChangeHandler1} />\r\n//                   </FormGroup>\r\n//                 </Col> */}\r\n\r\n//                 {/* <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Thumbnail</Label>\r\n//                     <CustomInput type=\"file\" onChange={this.onChangeHandler2} />\r\n//                   </FormGroup>\r\n//                 </Col> */}\r\n\r\n//                 {/* <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Web Banner </Label>\r\n//                     <CustomInput type=\"file\" onChange={this.onChangeHandler3} />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>App Banner</Label>\r\n//                     <CustomInput type=\"file\" onChange={this.onChangeHandler4} />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n\r\n//                 <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n//                   <Label>Feature</Label>\r\n//                   <CustomInput\r\n//                     type=\"select\"\r\n//                     placeholder=\"Select Type\"\r\n//                     name=\"feature\"\r\n//                     value={this.state.feature}\r\n//                     onChange={this.changeHandler}\r\n//                   >\r\n//                     <option>Select Feature</option>\r\n//                     <option value=\"yes\">Yes</option>\r\n//                     <option value=\"no\">No</option>\r\n//                   </CustomInput>\r\n//                 </Col>\r\n\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n//                   <Label className=\"mb-0\">Status</Label>\r\n//                   <div\r\n//                     className=\"form-label-group\"\r\n//                     onChange={this.handleChange}\r\n//                   >\r\n//                     <input\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Active\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n//                     <input\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Deactive\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n//                   </div>\r\n//                 </Col> */}\r\n//               </Row>\r\n\r\n//               <Row>\r\n//                 <Button.Ripple\r\n//                   color=\"primary\"\r\n//                   type=\"submit\"\r\n//                   className=\"mr-1 mb-1\"\r\n//                 >\r\n//                   Update\r\n//                 </Button.Ripple>\r\n//               </Row>\r\n//             </Form>\r\n//           </CardBody>\r\n//         </Card>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default EditCategory;\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { CreateCategory, UpdateCategory, View_Catby_id } from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { Image_URL } from \"../../../../ApiEndPoint/Api\";\r\n\r\nexport class AddCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category_name: \"\",\r\n      type: \"\",\r\n      feature: \"\",\r\n      file: \"\",\r\n      status: \"\",\r\n      selectedFile1: null,\r\n      selectedName1: \"\",\r\n      selectedFile2: null,\r\n      selectedName2: \"\",\r\n      selectedFile3: null,\r\n      selectedName3: \"\",\r\n      selectedFile4: null,\r\n      selectedName4: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeHandler1 = (event) => {\r\n    this.setState({ selectedFile1: event.target.files[0] });\r\n    this.setState({ selectedName1: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  onChangeHandler2 = (event) => {\r\n    this.setState({ selectedFile2: event.target.files[0] });\r\n    this.setState({ selectedName2: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  onChangeHandler3 = (event) => {\r\n    this.setState({ selectedFile3: event.target.files[0] });\r\n    this.setState({ selectedName3: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  onChangeHandler4 = (event) => {\r\n    this.setState({ selectedFile4: event.target.files[0] });\r\n    this.setState({ selectedName4: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n\r\n    View_Catby_id(id)\r\n      .then((res) => {\r\n        console.log(res?.Category);\r\n        let response = res?.Category;\r\n        console.log(response?.image);\r\n        this.setState({\r\n          category_name: response?.name,\r\n          feature: response?.description,\r\n          status: response?.status,\r\n          file: response?.image,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const data = new FormData();\r\n    // data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"name\", this.state.category_name);\r\n    data.append(\"description\", this.state.feature);\r\n    data.append(\"status\", this.state.status);\r\n    if (this.state.selectedFile1) {\r\n      data.append(\"file\", this.state.selectedFile1);\r\n    }\r\n\r\n    UpdateCategory(id, data)\r\n      .then((res) => {\r\n        debugger;\r\n        this.props.history.push(\"/app/freshlist/category/categoryList\");\r\n        swal(\"Success!\", \"Category Updated\", \"Success\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something went Wrong\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Category\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/category/categoryList\")\r\n                    }>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"4\" md=\"4\">\r\n                  <FormGroup>\r\n                    <Label>Category Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Category Name\"\r\n                      name=\"category_name\"\r\n                      value={this.state.category_name}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Type</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"Select Type\"\r\n                    name=\"type\"\r\n                    value={this.state.type}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>---Select---</option>\r\n                    <option value=\"veg\">Veg</option>\r\n                    <option value=\"nonveg\">Non-Veg</option>\r\n                    <option value=\"egg\">Egg only</option>\r\n                  </CustomInput>\r\n                </Col> */}\r\n\r\n                <Col lg=\"4\" md=\"4\">\r\n                  <FormGroup>\r\n                    <Label>Category Image </Label>\r\n                    <CustomInput type=\"file\" onChange={this.onChangeHandler1} />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Thumbnail</Label>\r\n                    <CustomInput type=\"file\" onChange={this.onChangeHandler2} />\r\n                  </FormGroup>\r\n                </Col> */}\r\n\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Web Banner </Label>\r\n                    <CustomInput type=\"file\" onChange={this.onChangeHandler3} />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                {/* <Col lg=\"4\" md=\"4\">\r\n                  <FormGroup>\r\n                    <Label>App Banner</Label>\r\n                    <CustomInput type=\"file\" onChange={this.onChangeHandler4} />\r\n                  </FormGroup>\r\n                </Col> */}\r\n\r\n                <Col lg=\"4\" md=\"4\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"feature\"\r\n                    value={this.state.feature}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"4\" md=\"4\" className=\"mb-2\">\r\n                  {this.state.file && (\r\n                    <img\r\n                      style={{ borderRadius: \"8px\" }}\r\n                      src={`${Image_URL}/Images/${this.state.file}`}\r\n                      alt=\"\"\r\n                      height=\"100\"\r\n                      width=\"100\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={this.changeHandler1}>\r\n                    <input\r\n                      checked={this.state.status == \"Active\"}\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      checked={this.state.status == \"Deactive\"}\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-start\">\r\n                    <Button.Ripple color=\"primary\" type=\"submit\" className=\"\">\r\n                      + Add\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddCategory;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}