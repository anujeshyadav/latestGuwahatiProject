{"version":3,"sources":["views/apps/freshlist/customer/HRM/HrmEmploye/EmployeEdit.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","EmployEditForm","useState","employeeName","firstName","lastName","email","address","phone","city","country","data","setData","id","useParams","history","useHistory","useEffect","_Get","Hrm_SalaryViewone","response","Salary","console","log","fetchData","handleSubmit","e","preventDefault","_Put","Hrm_SalaryUpdate","push","handleInputChange","target","name","value","color","type","onClick","goBack","onSubmit","form","md","for","onChange","placeholder","row","sm","size","offset","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/405.3125515a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardBody, Row, Col, Form, FormGroup, Label, Input, Button, CardHeader } from 'reactstrap';\r\nimport { Hrm_SalaryViewone, Hrm_SalaryUpdate } from '../../../../../../ApiEndPoint/Api';\r\nimport { _Get, _Put } from '../../../../../../ApiEndPoint/ApiCalling';\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nconst EmployEditForm = () => {\r\n  const [data, setData] = useState({\r\n    employeeName: '',\r\n    // rule: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    address: '',\r\n    phone: '',\r\n    city: '',\r\n    country: '',\r\n  });\r\n  // parameter's : employeeName,rule,firstName,lastName,email,address,phone,city,country\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await _Get(Hrm_SalaryViewone, id);\r\n        setData(response.Salary);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await _Put(Hrm_SalaryUpdate, id, data);\r\n      history.push('/app/ajgroup/HRM/empList')\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <h2>Employee Profile Form</h2>\r\n        <Button color=\" btn btn-danger\" type=\"button\" onClick={handleBack}>\r\n          Back\r\n        </Button>\r\n\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"employeeName\">Employee Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"employeeName\"\r\n                  id=\"employeeName\"\r\n                  value={data.employeeName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter employee name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email:</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={data.email}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter email address\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"firstName\">First Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  id=\"firstName\"\r\n                  value={data.firstName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter first name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"lastName\">Last Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  id=\"lastName\"\r\n                  value={data.lastName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter last name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"address\">Address:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  id=\"address\"\r\n                  value={data.address}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter address\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"phone\">Phone.No:</Label>\r\n                <Input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  id=\"phone\"\r\n                  value={data.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter phone number\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"city\">City:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  id=\"city\"\r\n                  value={data.city}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter city\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"country\">Country:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"country\"\r\n                  id=\"country\"\r\n                  value={data.country}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter country\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <FormGroup row>\r\n            <Col sm={{ size: 8, offset: 4 }}>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n\r\n  );\r\n};\r\n\r\nexport default EmployEditForm;\r\n\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}