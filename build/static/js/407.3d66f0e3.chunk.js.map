{"version":3,"sources":["views/apps/freshlist/customer/HRM/HrmOfferletr/OfferletrEdit.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","OfferEditlist","useState","name","email","mobileNo","data","setData","id","useParams","history","useHistory","useEffect","_Get","Hrm_OfferViewone","response","OfferLetter","console","log","fetchData","handleSubmit","e","preventDefault","_Put","Hrm_OfferUpdate","push","handleInputChange","target","value","color","type","onClick","goBack","onSubmit","row","for","sm","onChange","placeholder","size","offset","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/407.3d66f0e3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardBody, Row, Col, Form, FormGroup, Label, Input, Button, CardHeader } from 'reactstrap';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Hrm_OfferUpdate, Hrm_OfferViewone } from '../../../../../../ApiEndPoint/Api';\r\nimport { _Get, _Put } from '../../../../../../ApiEndPoint/ApiCalling';\r\nconst OfferEditlist = () => {\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        email: '',\r\n        mobileNo: '',\r\n    });\r\n    // parameter's : name,email,mobileNo\r\n\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await _Get(Hrm_OfferViewone, id);\r\n                setData(response.OfferLetter);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [id]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await _Put(Hrm_OfferUpdate, id, data);\r\n            history.push('/app/ajgroup/HRM/offerList')\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    };\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setData({ ...data, [name]: value });\r\n    };\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <h2>Offer Letter Form</h2>\r\n                <Button color=\" btn btn-danger\" type=\"button\" onClick={handleBack}>\r\n                    Back\r\n                </Button>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FormGroup row>\r\n                        <Label for=\"candidateName\" sm={4}>\r\n                            Candidate Name:\r\n                        </Label>\r\n                        <Col sm={8}>\r\n                            <Input\r\n\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter Name\"\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"candidateEmail\" sm={4}>\r\n                            Candidate Email:\r\n                        </Label>\r\n                        <Col sm={8}>\r\n                            <Input\r\n                              \r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                value={data.email}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter email\"\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"candidateNumber\" sm={4}>\r\n                            Candidate Phone Number:\r\n                        </Label>\r\n                        <Col sm={8}>\r\n                            <Input\r\n                                \r\n                                type=\"number\"\r\n                                name=\"mobileNo\"\r\n                                id=\"mobileNo\"\r\n                                value={data.mobileNo}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter Phone Number\"\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Col sm={{ size: 8, offset: 4 }}>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Update\r\n                            </Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\nexport default OfferEditlist;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}