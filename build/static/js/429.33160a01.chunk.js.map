{"version":3,"sources":["views/apps/freshlist/customer/HRM/RecPLace/setsalaryForm.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","EmployeeSalaryForm","useState","payslipType","salary","fromAccount","data","setData","modalOpen","setModalOpen","dropdownOpen","setDropdownOpen","accountDropdownOpen","setAccountDropdownOpen","toggleDropdown","toggleAccountDropdown","toggleModal","handleEmployeeSalarySubmit","e","preventDefault","console","log","alert","handleDropdownSelect","selectedOption","handleAccountDropdownSelect","style","marginLeft","cursor","color","fontSize","border","borderRadius","padding","backgroundColor","onClick","onSubmit","row","for","sm","marginTop","fontWeight","isOpen","toggle","backdrop","caret","type","name","value","onChange","target","width","right","TaForm","tableData","setTableData","selectedData","setSelectedData","TableHeadings","TableBody","map","index","key","employeeName","allowanceOption","title","amount","size","className","handleEditData","updatedData","splice","handleDeleteData","class","height","striped","bordered","responsive","push","handleSaveData","required","defaultValue","TravellingForm","setTitle","setAmount","id","placeholder","Loanform","employee","loanOptions","loanAmount","reason","overflowX","hover","handleEdit","updatedTableData","handleDelete","maxWidth","Pfform","Advance","Esiform","Insurance","Payslip","handleSubmit","Over","overtime","numberofDays","hours","rate","handleSubmitData","PayslipForm","md","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/429.33160a01.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Table\r\n} from 'reactstrap';\r\nimport { FaPlus, FaMinus, FaEdit, FaTrash } from 'react-icons/fa';\r\n\r\nconst EmployeeSalaryForm = () => {\r\n  const [data, setData] = useState({\r\n    payslipType: '',\r\n    salary: '',\r\n    fromAccount: '',\r\n  });\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [accountDropdownOpen, setAccountDropdownOpen] = useState(false);\r\n\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleAccountDropdown = () => setAccountDropdownOpen(!accountDropdownOpen);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n  const handleEmployeeSalarySubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!data.payslipType || !data.salary || !data.fromAccount) {\r\n      alert('Please fill in all fields before saving.');\r\n      return;\r\n    }\r\n    setData({\r\n      payslipType: data.payslipType,\r\n      salary: data.salary,\r\n      fromAccount: data.fromAccount,\r\n    });\r\n    console.log('Employee Salary Form submitted:', data);\r\n    toggleModal();\r\n  };\r\n\r\n\r\n  const handleDropdownSelect = (selectedOption) => {\r\n    setData({ ...data, payslipType: selectedOption });\r\n    toggleDropdown();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const handleAccountDropdownSelect = (selectedOption) => {\r\n    setData({ ...data, fromAccount: selectedOption });\r\n    toggleAccountDropdown();\r\n  };\r\n  const handleRemoveAllFields = () => {\r\n    setData({\r\n      payslipType: '',\r\n      salary: '',\r\n      fromAccount: '',\r\n    });\r\n    // toggleModal();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <h2>Employee Salary Form</h2>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n          onClick={toggleModal}\r\n        />\r\n        <FaMinus\r\n          style={{\r\n            marginLeft: '25px',\r\n            cursor: 'pointer',\r\n            color: 'red',\r\n            fontSize: '29px',\r\n            border: '1px solid red',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'white',\r\n          }}\r\n          onClick={handleRemoveAllFields}\r\n        />\r\n\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleEmployeeSalarySubmit}>\r\n          <FormGroup row>\r\n            <Label for=\"payslipType\" sm={4}>\r\n              Payslip Type:\r\n            </Label>\r\n            <div style={{ marginLeft: '10px', marginTop: \" 10px\", fontWeight: 'bold' }}>{data.payslipType}</div>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"salary\" sm={4} >\r\n              Salary:\r\n            </Label>\r\n            <div style={{ marginLeft: '10px', marginTop: \" 10px\", fontWeight: 'bold' }}>{data.salary}</div>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"fromAccount\" sm={4} >\r\n              From Account:\r\n            </Label>\r\n            <div style={{ marginLeft: '10px', marginTop: \" 10px\", fontWeight: 'bold' }}>{data.fromAccount}</div>\r\n          </FormGroup>\r\n\r\n        </Form>\r\n\r\n\r\n        <Modal isOpen={modalOpen} toggle={toggleModal} backdrop=\"static\">\r\n          <ModalHeader toggle={toggleModal}>Add Employee Salary</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={handleEmployeeSalarySubmit}>\r\n              <FormGroup>\r\n                <Label for=\"payslipType\">Payslip Type:</Label>\r\n                <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n                  <DropdownToggle caret>\r\n                    {data.payslipType ? data.payslipType : 'Select Payslip Type'}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem onClick={() => handleDropdownSelect('Monthly Payslip')}>Monthly Payslip</DropdownItem>\r\n                    <DropdownItem onClick={() => handleDropdownSelect('Hourly Payslip')}>Hourly Payslip</DropdownItem>\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"salary\">Salary:</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"salary\"\r\n                  value={data.salary}\r\n                  onChange={handleInputChange}\r\n                  style={{ width: '80%' }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"fromAccount\">From Account:</Label>\r\n                <Dropdown isOpen={accountDropdownOpen} toggle={toggleAccountDropdown}>\r\n                  <DropdownToggle caret>\r\n                    {data.fromAccount ? data.fromAccount : 'Select From Account'}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem onClick={() => handleAccountDropdownSelect('Account 1')}>Account 1</DropdownItem>\r\n                    <DropdownItem onClick={() => handleAccountDropdownSelect('Account 2')}>Account 2</DropdownItem>\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n              </FormGroup>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>{' '}\r\n              <Button color=\"secondary\" onClick={toggleModal}>\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst TaForm = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  const toggleModal = () => setModalOpen(!modalOpen);\r\n\r\n  const handleAddData = () => {\r\n    setSelectedData(null);\r\n    toggleModal();\r\n  };\r\n\r\n  const handleEditData = (index) => {\r\n    setSelectedData({ ...tableData[index], index });\r\n    toggleModal();\r\n  };\r\n\r\n  const handleDeleteData = (index) => {\r\n    const updatedData = [...tableData];\r\n    updatedData.splice(index, 1);\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  const handleSaveData = (data) => {\r\n    const updatedData = [...tableData];\r\n    if (selectedData !== null) {\r\n      updatedData[selectedData.index] = data;\r\n    } else {\r\n      updatedData.push(data);\r\n    }\r\n    setTableData(updatedData);\r\n    toggleModal();\r\n  };\r\n\r\n  const TableHeadings = () => (\r\n    <thead>\r\n      <tr>\r\n        <th>EMPLOYEE NAME</th>\r\n        <th>ALLOWANCE OPTION</th>\r\n        <th>TITLE</th>\r\n        <th>TYPE</th>\r\n        <th>AMOUNT</th>\r\n        <th>ACTION</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n\r\n  const TableBody = () => (\r\n    <tbody>\r\n      {tableData.map((data, index) => (\r\n        <tr key={index}>\r\n          <td>{data.employeeName}</td>\r\n          <td>{data.allowanceOption}</td>\r\n          <td>{data.title}</td>\r\n          <td>{data.type}</td>\r\n          <td>{data.amount}</td>\r\n          <td>\r\n            <Button\r\n              color=\"info\"\r\n              size=\"sm\"\r\n              className=\"mr-2\"\r\n              onClick={() => handleEditData(index)}\r\n            >\r\n              <FaEdit />\r\n            </Button>\r\n\r\n            <Button\r\n              color=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => handleDeleteData(index)}\r\n            // className=\"ml-5\"  \r\n            >\r\n              <FaTrash />\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <h1>Allowance Form</h1>\r\n        {/* <Button\r\n          color=\"success\"\r\n          style={{ marginLeft: '45%' ,borderRadius:'80%' }}\r\n          onClick={handleAddData}\r\n        >\r\n          <FaPlus />\r\n        </Button> */}\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n          onClick={handleAddData}\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n\r\n\r\n        <div class=\"table-responsive myclass\" style={{ height: '175px' }}>\r\n          <Table striped bordered responsive>\r\n            <TableHeadings />\r\n            <TableBody />\r\n          </Table>\r\n        </div>\r\n\r\n        <Modal isOpen={modalOpen} toggle={toggleModal} backdrop=\"static\">\r\n          <ModalHeader toggle={toggleModal}>\r\n            {selectedData ? 'Edit Allowance' : 'Add Allowance'}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleSaveData({\r\n                  employeeName: e.target.employeeName.value,\r\n                  allowanceOption: e.target.allowanceOption.value,\r\n                  title: e.target.title.value,\r\n                  type: e.target.type.value,\r\n                  amount: e.target.amount.value,\r\n                });\r\n              }}\r\n            >\r\n              <FormGroup>\r\n                <Label for=\"employeeName\">Employee Name:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"text\"\r\n                  name=\"employeeName\"\r\n                  defaultValue={selectedData?.employeeName || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"allowanceOption\">Allowance Option:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"text\"\r\n                  name=\"allowanceOption\"\r\n                  defaultValue={selectedData?.allowanceOption || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"title\">Title:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  defaultValue={selectedData?.title || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"type\">Type:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"text\"\r\n                  name=\"type\"\r\n                  defaultValue={selectedData?.type || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"amount\">Amount:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"number\"\r\n                  name=\"amount\"\r\n                  defaultValue={selectedData?.amount || ''}\r\n                />\r\n              </FormGroup>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>{' '}\r\n              <Button color=\"secondary\" onClick={toggleModal}>\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst TravellingForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('Title:', title);\r\n    console.log('Amount:', amount);\r\n  };\r\n\r\n  return (\r\n    <Card >\r\n      <CardHeader>\r\n        <h1>Travelling Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n\r\n          <FormGroup>\r\n            <Label for=\"titleDropdown\">Title</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"title\"\r\n              id=\"titleDropdown\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"Option 1\">Option 1</option>\r\n              <option value=\"Option 2\">Option 2</option>\r\n\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amountInput\">Amount</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amountInput\"\r\n              value={amount}\r\n              placeholder='Enter amount'\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nconst Loanform = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [data, setData] = useState({\r\n    employee: '',\r\n    loanOptions: '',\r\n    title: '',\r\n    type: '',\r\n    loanAmount: '',\r\n    reason: '',\r\n  });\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n    setSelectedData(null);\r\n    setData({\r\n      employee: '',\r\n      loanOptions: '',\r\n      title: '',\r\n      type: '',\r\n      loanAmount: '',\r\n      reason: '',\r\n    });\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      data.employee === '' ||\r\n      data.loanOptions === '' ||\r\n      data.title === '' ||\r\n      data.type === '' ||\r\n      data.reason === '' ||\r\n      data.loanAmount === ''\r\n    ) {\r\n\r\n      alert('Please fill in all required fields before saving.');\r\n      return;\r\n    }\r\n\r\n    if (selectedData !== null) {\r\n      const updatedTableData = [...tableData];\r\n      updatedTableData[selectedData] = data;\r\n      setTableData(updatedTableData);\r\n      setSelectedData(null);\r\n    } else {\r\n      setTableData([...tableData, data]);\r\n    }\r\n\r\n    toggleModal();\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    setSelectedData(index);\r\n    setData(tableData[index]);\r\n    toggleModal();\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updatedTableData = [...tableData];\r\n    updatedTableData.splice(index, 1);\r\n    setTableData(updatedTableData);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <h1>Loan Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n          onClick={toggleModal}\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form>\r\n          <div style={{ overflowX: 'auto' }}>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>EMPLOYEE</th>\r\n                  <th>LOAN OPTIONS</th>\r\n                  <th>TITLE</th>\r\n                  <th>TYPE</th>\r\n                  <th>LOAN AMOUNT</th>\r\n                  <th>ACTION</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tableData.map((data, index) => (\r\n                  <tr key={index}>\r\n                    <td>{data.employee}</td>\r\n                    <td>{data.loanOptions}</td>\r\n                    <td>{data.title}</td>\r\n                    <td>{data.type}</td>\r\n                    <td>{data.loanAmount}</td>\r\n                    <td>\r\n                      <Button color=\"link\" style={{ fontSize: '20px' }} onClick={() => handleEdit(index)}>\r\n                        <FaEdit />\r\n                      </Button>\r\n                      <Button color=\"link\" style={{ fontSize: '20px' }} onClick={() => handleDelete(index)}>\r\n                        <FaTrash />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Form>\r\n\r\n        <Modal isOpen={modalOpen} toggle={toggleModal} backdrop=\"static\" style={{ maxWidth: '55%', width: 'auto' }} >\r\n          <ModalHeader toggle={toggleModal}>Add Loan</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={handleSubmit}>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"employeeInput\">Employee:</Label>\r\n                    <Input\r\n                      required=\"required\"\r\n                      type=\"text\"\r\n                      name=\"employee\"\r\n                      value={data.employee}\r\n                      onChange={(e) => setData({ ...data, employee: e.target.value })}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"loanOptionsInput\">Loan Options:</Label>\r\n                    <Input\r\n                      required=\"required\"\r\n                      type=\"select\"\r\n                      name=\"loanOptions\"\r\n                      value={data.loanOptions}\r\n                      onChange={(e) => setData({ ...data, loanOptions: e.target.value })}\r\n                    >\r\n                      <option value=\"\">Select Options</option>\r\n                      <option value=\"Health\">Health Loan</option>\r\n                      <option value=\"Personal\">Personal Loan</option>\r\n                      <option value=\"Other\">Other Loan</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"typeInput\">Type:</Label>\r\n                    <Input\r\n                      required=\"required\"\r\n                      type=\"select\"\r\n                      name=\"type\"\r\n                      value={data.type}\r\n                      onChange={(e) => setData({ ...data, type: e.target.value })}\r\n                    >\r\n                      <option value=\"\">Select Type</option>\r\n                      <option value=\"Fixed\">Fixed</option>\r\n                      <option value=\"Percentage\">Percentage</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"titleInput\">Title:</Label>\r\n                    <Input\r\n                      required=\"required\"\r\n                      title='Please fill out this field'\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      value={data.title}\r\n                      onChange={(e) => setData({ ...data, title: e.target.value })}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"loanAmountInput\">Loan Amount:</Label>\r\n                    <Input\r\n                      required=\"required\"\r\n                      type=\"number\"\r\n                      name=\"loanAmount\"\r\n                      value={data.loanAmount}\r\n                      placeholder='Rs.'\r\n                      onChange={(e) => setData({ ...data, loanAmount: e.target.value })}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <FormGroup>\r\n                        <Label for=\"reasonInput\">Reason:</Label>\r\n                        <Input\r\n                          required=\"required\"\r\n                          type=\"textarea\"\r\n                          name=\"reason\"\r\n                          value={data.reason}\r\n                          onChange={(e) => setData({ ...data, reason: e.target.value })}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nconst Pfform = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('Title:', title);\r\n    console.log('Amount:', amount);\r\n  };\r\n\r\n  return (\r\n    <Card >\r\n      <CardHeader>\r\n        <h1>PF Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"titleDropdown\">Title</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"title\"\r\n              id=\"titleDropdown\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"Option 1\">Option 1</option>\r\n              <option value=\"Option 2\">Option 2</option>\r\n\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amountInput\">Amount</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amountInput\"\r\n              value={amount}\r\n              placeholder='Enter Amount'\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nconst Advance = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('Title:', title);\r\n    console.log('Amount:', amount);\r\n  };\r\n\r\n  return (\r\n    <Card >\r\n      <CardHeader>\r\n        <h1>Advance Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"titleDropdown\">Title</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"title\"\r\n              id=\"titleDropdown\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"Option 1\">Option 1</option>\r\n              <option value=\"Option 2\">Option 2</option>\r\n              {/* Add more options as needed */}\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amountInput\">Amount</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amountInput\"\r\n              value={amount}\r\n              placeholder='enter amount'\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nconst Esiform = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission logic here\r\n    console.log('Title:', title);\r\n    console.log('Amount:', amount);\r\n  };\r\n\r\n  return (\r\n    <Card >\r\n      <CardHeader>\r\n        <h1>ESI Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"titleDropdown\">Title</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"title\"\r\n              id=\"titleDropdown\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"Option 1\">Option 1</option>\r\n              <option value=\"Option 2\">Option 2</option>\r\n              {/* Add more options as needed */}\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amountInput\">Amount</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amountInput\"\r\n              value={amount}\r\n              placeholder='enter ammount'\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nconst Insurance = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission logic here\r\n    console.log('Title:', title);\r\n    console.log('Amount:', amount);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <h1>Insurance Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"titleDropdown\">Title</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"title\"\r\n              id=\"titleDropdown\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"Option 1\">Option 1</option>\r\n              <option value=\"Option 2\">Option 2</option>\r\n              {/* Add more options as needed */}\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amountInput\">Amount</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amountInput\"\r\n              value={amount}\r\n              placeholder='enter ammount'\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nconst Payslip = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('Title:', title);\r\n    console.log('Amount:', amount);\r\n  };\r\n\r\n  return (\r\n    <Card >\r\n      <CardHeader>\r\n        <h1>Pay Slip Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n          <FormGroup>\r\n            <Label for=\"titleDropdown\">Title</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"title\"\r\n              id=\"titleDropdown\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"Option 1\">Option 1</option>\r\n              <option value=\"Option 2\">Option 2</option>\r\n              \r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"amountInput\">Amount</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amountInput\"\r\n              value={amount}\r\n              placeholder='Enter Amount'\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nconst Over = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  const toggleModal = () => setModalOpen(!modalOpen);\r\n\r\n  const handleAddData = () => {\r\n    setSelectedData(null);\r\n    toggleModal();\r\n  };\r\n\r\n  const handleSubmitData = (data) => {\r\n    const updatedData = [...tableData];\r\n    if (selectedData !== null) {\r\n      updatedData[selectedData.index] = data;\r\n    } else {\r\n      updatedData.push(data);\r\n    }\r\n    setTableData(updatedData);\r\n    toggleModal();\r\n  };\r\n\r\n\r\n  const handleEdit = (index) => {\r\n    setSelectedData({ ...tableData[index], index });\r\n    toggleModal();\r\n\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updatedData = [...tableData];\r\n    updatedData.splice(index, 1);\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  const TableHeadings = () => (\r\n    <thead >\r\n      <tr>\r\n        <th>EMPLOYEE NAME</th>\r\n        <th>OVERTIME TITLE</th>\r\n        <th>No. OF DAYS</th>\r\n        <th>HOURS</th>\r\n        <th>RATE</th>\r\n        <th>ACTION</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n\r\n  const TableBody = () => (\r\n    <tbody>\r\n      {tableData.map((data, index) => (\r\n        <tr key={index}>\r\n          <td>{data.employeeName}</td>\r\n          <td>{data.overtime}</td>\r\n          <td>{data.numberofDays}</td>\r\n          <td>{data.hours}</td>\r\n          <td>{data.rate}</td>\r\n          <td>\r\n            <Button\r\n              color=\"info\"\r\n              size=\"sm\"\r\n              className=\"mr-2\"\r\n              onClick={() => handleEdit(index)}\r\n            >\r\n              <FaEdit />\r\n            </Button>\r\n\r\n            <Button\r\n              color=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => handleDelete(index)}\r\n            // className=\"ml-5\"  \r\n            >\r\n              <FaTrash />\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <h1>OverTime Form</h1>\r\n        <FaPlus\r\n          style={{\r\n            marginLeft: '45%',\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            fontSize: '29px',\r\n            border: '1px solid green',\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            backgroundColor: 'green',\r\n          }}\r\n          onClick={handleAddData}\r\n        />\r\n      </CardHeader>\r\n      <CardBody>\r\n\r\n        <div className=\"table-responsive myclass\" style={{ height: '175px', border: 'none' }}>\r\n          <Table className=\"table\" striped bordered responsive>\r\n            <TableHeadings />\r\n            <TableBody />\r\n          </Table>\r\n        </div>\r\n\r\n\r\n        <Modal isOpen={modalOpen} toggle={toggleModal} backdrop=\"static\">\r\n          <ModalHeader toggle={toggleModal}>\r\n            {selectedData ? 'Edit Overtime' : 'Add Overtime'}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleSubmitData({\r\n                  employeeName: e.target.employeeName.value,\r\n                  overtime: e.target.overtime.value,\r\n                  numberofDays: e.target.numberofDays.value,\r\n                  hours: e.target.hours.value,\r\n                  rate: e.target.rate.value,\r\n                });\r\n              }}\r\n            >\r\n              <FormGroup>\r\n                <Label for=\"employeeName\">Employee Name:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"text\"\r\n                  name=\"employeeName\"\r\n                  defaultValue={selectedData?.employeeName || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"overtime\">Overtime:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"number\"\r\n                  name=\"overtime\"\r\n                  defaultValue={selectedData?.overtime || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"numberofDays\">Number of Days:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"number\"\r\n                  name=\"numberofDays\"\r\n                  defaultValue={selectedData?.numberofDays || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"hours\">Hours:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"number\"\r\n                  name=\"hours\"\r\n                  defaultValue={selectedData?.hours || ''}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"rate\">Rate:</Label>\r\n                <Input\r\n                  required=\"required\"\r\n                  type=\"number\"\r\n                  name=\"rate\"\r\n                  defaultValue={selectedData?.rate || ''}\r\n                />\r\n              </FormGroup>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>{'  '}\r\n              <Button color=\"secondary\" onClick={toggleModal}>\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nconst PayslipForm = () => {\r\n  return (\r\n    <div>\r\n      <Row >\r\n        <Col sm=\"12\" md=\"6\">\r\n          <EmployeeSalaryForm />\r\n        </Col>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <TaForm />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <TravellingForm />\r\n        </Col>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Esiform />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Advance />\r\n        </Col>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Pfform />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Insurance />\r\n        </Col>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Payslip />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Loanform />\r\n        </Col>\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Over />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PayslipForm;\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}