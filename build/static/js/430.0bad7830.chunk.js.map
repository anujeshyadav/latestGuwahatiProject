{"version":3,"sources":["views/apps/freshlist/customer/HRM/RecPLace/termiForm.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["TerminationForm","useState","employeeName","date","reason","description","formData","setFormData","handleInputChange","e","target","name","value","onSubmit","preventDefault","console","log","row","for","sm","type","id","onChange","placeholder","size","offset","color","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"+QAmGeA,UAhGS,WACtB,MAAgCC,mBAAS,CACvCC,aAAc,GACdC,KAAM,GACNC,OAAQ,GACRC,YAAa,KACb,mBALKC,EAAQ,KAAEC,EAAW,KAatBC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdL,EAAY,2BAAKD,GAAQ,kBAAGK,EAAOC,MAGrC,OACE,kBAAC,IAAI,KACH,kBAAC,IAAQ,KACP,4BAAI,oBACJ,kBAAC,IAAI,CAACC,SAfS,SAACJ,GACpBA,EAAEK,iBACFC,QAAQC,IAAI,8BAA+BV,KAcrC,kBAAC,IAAS,CAACW,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,eAAeC,GAAI,GAAG,kBAGjC,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJC,KAAK,OACLT,KAAK,eACLU,GAAG,eACHT,MAAON,EAASJ,aAChBoB,SAAUd,EACVe,YAAY,0BAIlB,kBAAC,IAAS,CAACN,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,OAAOC,GAAI,GAAG,SAGzB,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJC,KAAK,OACLT,KAAK,OACLU,GAAG,OACHT,MAAON,EAASH,KAChBmB,SAAUd,MAIhB,kBAAC,IAAS,CAACS,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,SAASC,GAAI,GAAG,WAG3B,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJC,KAAK,OACLT,KAAK,SACLU,GAAG,SACHT,MAAON,EAASF,OAChBkB,SAAUd,EACVe,YAAY,mBAIlB,kBAAC,IAAS,CAACN,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,cAAcC,GAAI,GAAG,gBAGhC,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJC,KAAK,WACLT,KAAK,cACLU,GAAG,cACHT,MAAON,EAASD,YAChBiB,SAAUd,EACVe,YAAY,yBAIlB,kBAAC,IAAS,CAACN,KAAG,GACZ,kBAAC,IAAG,CAACE,GAAI,CAAEK,KAAM,EAAGC,OAAQ,IAC1B,kBAAC,IAAM,CAACC,MAAM,SAASN,KAAK,UAAS,iB,iCCxFnD,2EAEIO,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBd,IAAKa,IAAUE,KACfC,MAAOH,IAAUE,KACjBE,OAAQJ,IAAUE,KAClBG,SAAUL,IAAUE,KACpBI,IAAKC,cACLC,UAAWR,IAAUS,OACrBC,UAAWV,IAAUW,QAMnBC,EAAY,SAAmBC,GACjC,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBvB,EAAM0B,EAAM1B,IACZkB,EAAWQ,EAAMR,SACjBF,EAAQU,EAAMV,MACdC,EAASS,EAAMT,OACfU,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAOhB,GAElDoB,EAAUC,0BAAgBC,IAAWX,IAAWrB,GAAM,MAAegB,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBK,GAMtM,MAJY,aAARI,IACFC,EAAWV,SAAWA,GAGJe,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIfL,EAAUd,UAAYA,EACtBc,EAAUW,aA1BS,CACjBjB,IAAK,OA0BQM","file":"static/js/430.0bad7830.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardBody, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n\r\nconst TerminationForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    employeeName: '',\r\n    date: '',\r\n    reason: '',\r\n    description: '',\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Termination Form submitted:', formData);\r\n    // Add logic to handle form submission (e.g., send data to backend, update employee status, etc.)\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h2>Termination Form</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label for=\"employeeName\" sm={4}>\r\n              Employee Name:\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"employeeName\"\r\n                id=\"employeeName\"\r\n                value={formData.employeeName}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter Employee Name\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"date\" sm={4}>\r\n              Date:\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"date\"\r\n                value={formData.date}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"reason\" sm={4}>\r\n              Reason:\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"reason\"\r\n                id=\"reason\"\r\n                value={formData.reason}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter Reason\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"description\" sm={4}>\r\n              Description:\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter Description \"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Col sm={{ size: 8, offset: 4 }}>\r\n              <Button color=\"danger\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TerminationForm;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}