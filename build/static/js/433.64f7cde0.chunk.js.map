{"version":3,"sources":["views/apps/freshlist/customer/HRM/TCPA/goltrackform.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["GoalForm","useState","goalType","startDate","endDate","subject","targetAchievement","description","formData","setFormData","submittedData","setSubmittedData","handleChange","e","target","name","value","prevState","md","onSubmit","preventDefault","console","log","for","type","placeholder","id","onChange","color","striped","map","data","index","key","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/433.64f7cde0.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, Card, CardBody, Table } from 'reactstrap';\r\n\r\nconst GoalForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    goalType: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    subject: '',\r\n    targetAchievement: '',\r\n    description: ''\r\n  });\r\n\r\n  const [submittedData, setSubmittedData] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission here\r\n    console.log(formData);\r\n    setSubmittedData([...submittedData, formData]); // Add form data to submittedData array\r\n    setFormData({\r\n      goalType: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      subject: '',\r\n      targetAchievement: '',\r\n      description: ''\r\n    }); // Reset form data\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h1>Goal Track Form</h1>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"goalType\">Goal Type</Label>\r\n                <Input type=\"text\" placeholder='Enter goal Type' name=\"goalType\" id=\"goalType\" value={formData.goalType} onChange={handleChange} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"startDate\">Start Date</Label>\r\n                <Input type=\"date\" name=\"startDate\" id=\"startDate\" value={formData.startDate} onChange={handleChange} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"endDate\">End Date</Label>\r\n                <Input type=\"date\" name=\"endDate\" id=\"endDate\" value={formData.endDate} onChange={handleChange} />\r\n              </FormGroup>\r\n              <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n            </Form>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"subject\">Subject</Label>\r\n                <Input type=\"text\" placeholder='Enter subject' name=\"subject\" id=\"subject\" value={formData.subject} onChange={handleChange} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"targetAchievement\">Target Achievement</Label>\r\n                <Input type=\"text\" placeholder='Enter Target' name=\"targetAchievement\" id=\"targetAchievement\" value={formData.targetAchievement} onChange={handleChange} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"description\">Description</Label>\r\n                <Input type=\"textarea\" name=\"description\" id=\"description\" value={formData.description} onChange={handleChange} />\r\n              </FormGroup>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Table striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>Goal Type</th>\r\n                  <th>Start Date</th>\r\n                  <th>End Date</th>\r\n                  <th>Subject</th>\r\n                  <th>Target Achievement</th>\r\n                  <th>Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {submittedData.map((data, index) => (\r\n                  <tr key={index}>\r\n                    <td>{data.goalType}</td>\r\n                    <td>{data.startDate}</td>\r\n                    <td>{data.endDate}</td>\r\n                    <td>{data.subject}</td>\r\n                    <td>{data.targetAchievement}</td>\r\n                    <td>{data.description}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GoalForm;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}