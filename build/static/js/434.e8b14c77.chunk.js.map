{"version":3,"sources":["views/apps/freshlist/customer/HRM/TCPA/incenform.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["IncenForm","useState","ruleTitle","setRuleTitle","amountValue","setAmountValue","targetAchievement","setTargetAchievement","sm","md","size","offset","onSubmit","e","preventDefault","console","log","for","type","name","id","value","onChange","target","placeholder","color","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"yQAsEeA,UAnEG,WACd,MAAkCC,mBAAS,IAAG,mBAAvCC,EAAS,KAAEC,EAAY,KAC9B,EAAsCF,mBAAS,IAAG,mBAA3CG,EAAW,KAAEC,EAAc,KAClC,EAAkDJ,mBAAS,IAAG,mBAAvDK,EAAiB,KAAEC,EAAoB,KAU9C,OACI,kBAAC,IAAI,KACD,kBAAC,IAAQ,KACL,4BAAI,kBACJ,kBAAC,IAAG,KACA,kBAAC,IAAG,CAACC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAChC,kBAAC,IAAI,CAACC,SAfL,SAACC,GAClBA,EAAEC,iBAEFC,QAAQC,IAAI,cAAed,GAC3Ba,QAAQC,IAAI,gBAAiBZ,GAE7BD,EAAa,IACbE,EAAe,MASK,kBAAC,IAAS,KACN,kBAAC,IAAK,CAACY,IAAI,aAAY,cACvB,kBAAC,IAAK,CACFC,KAAK,SACLC,KAAK,YACLC,GAAG,YACHC,MAAOnB,EACPoB,SAAU,SAACT,GAAC,OAAKV,EAAaU,EAAEU,OAAOF,SAEvC,4BAAQA,MAAM,IAAG,qBACjB,4BAAQA,MAAM,UAAS,UACvB,4BAAQA,MAAM,UAAS,YAK/B,kBAAC,IAAS,KACN,kBAAC,IAAK,CAACJ,IAAI,qBAAoB,sBAC/B,kBAAC,IAAK,CACFC,KAAK,OACLM,YAAY,gBACZL,KAAK,oBACLC,GAAG,oBACHC,MAAOf,EAAmBgB,SAAU,SAAAT,GAAC,OAAIN,EAAqBM,EAAEU,OAAOF,WAI/E,kBAAC,IAAS,KACN,kBAAC,IAAK,CAACJ,IAAI,eAAc,gBACzB,kBAAC,IAAK,CACFC,KAAK,SACLM,YAAY,eACZL,KAAK,cACLC,GAAG,cACHC,MAAOjB,EACPkB,SAAU,SAACT,GAAC,OAAKR,EAAeQ,EAAEU,OAAOF,WAGjD,kBAAC,IAAM,CAACI,MAAM,UAAUP,KAAK,UAAS,iB,iCC7DlE,2EAEIQ,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBC,IAAKF,IAAUG,KACfC,MAAOJ,IAAUG,KACjBE,OAAQL,IAAUG,KAClBG,SAAUN,IAAUG,KACpBI,IAAKC,cACLC,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,QAMnBC,EAAY,SAAmBC,GACjC,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBT,EAAMY,EAAMZ,IACZI,EAAWQ,EAAMR,SACjBF,EAAQU,EAAMV,MACdC,EAASS,EAAMT,OACfU,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAOjB,GAElDqB,EAAUC,0BAAgBC,IAAWX,IAAWP,GAAM,MAAeE,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBK,GAMtM,MAJY,aAARI,IACFC,EAAWV,SAAWA,GAGJe,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIfL,EAAUf,UAAYA,EACtBe,EAAUW,aA1BS,CACjBjB,IAAK,OA0BQM","file":"static/js/434.e8b14c77.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {  Row, Col, Form, FormGroup, Label, Input, Button, Card, CardBody } from 'reactstrap';\r\n\r\nconst IncenForm = () => {\r\n    const [ruleTitle, setRuleTitle] = useState('');\r\n    const [amountValue, setAmountValue] = useState('');\r\n    const [targetAchievement, setTargetAchievement] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Handle form submission logic here\r\n        console.log(\"Rule Title:\", ruleTitle);\r\n        console.log(\"Amount Value:\", amountValue);\r\n        // Reset form fields\r\n        setRuleTitle('');\r\n        setAmountValue('');\r\n    };\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h1>Incentive Form</h1>\r\n                <Row>\r\n                    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"ruleTitle\">Rule Title</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"ruleTitle\"\r\n                                    id=\"ruleTitle\"\r\n                                    value={ruleTitle}\r\n                                    onChange={(e) => setRuleTitle(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Select Rule Title</option>\r\n                                    <option value=\"Rule 1\">Rule 1</option>\r\n                                    <option value=\"Rule 2\">Rule 2</option>\r\n                                    {/* Add more options as needed */}\r\n                                </Input>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"targetAchievement\">Target Achievement</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder=' Enter Target'\r\n                                    name=\"targetAchievement\"\r\n                                    id=\"targetAchievement\"\r\n                                    value={targetAchievement} onChange={e => setTargetAchievement(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"amountValue\">Amount Value</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder='amount value'\r\n                                    name=\"amountValue\"\r\n                                    id=\"amountValue\"\r\n                                    value={amountValue}\r\n                                    onChange={(e) => setAmountValue(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default IncenForm;\r\n\r\n\r\n\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}