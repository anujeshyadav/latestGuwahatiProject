{"version":3,"sources":["views/apps/freshlist/customer/HRM/Time-sheet/leaveform.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","LeaveForm","useState","employee","leaveType","leaveReason","startDate","endDate","hours","remark","data","setData","history","useHistory","handleSubmit","e","preventDefault","_PostSave","HRM_SAVE_LEAVE","resetForm","push","console","log","handleInputChange","target","name","value","sm","md","className","onSubmit","for","required","type","placeholder","id","onChange","row","size","offset","Ripple","color","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":";mUACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAwKeC,UAnKG,WAChB,MAAwBC,mBAAS,CAC/BC,SAAU,GACVC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTC,MAAO,GACPC,OAAQ,KACR,mBARKC,EAAI,KAAEC,EAAO,KASdC,EAAUC,cACVC,EAAY,uCAAG,WAAOC,GAAC,iEACR,OAAnBA,EAAEC,iBAAiB,kBAEXC,aAAUC,KAAgBR,GAAM,KAAD,EACrCS,IACAP,EAAQQ,KAAK,8BAA8B,gDAE3CC,QAAQC,IAAI,EAAD,IAAQ,QAErBD,QAAQC,IAAI,kBAAmBZ,GAAM,yDACtC,gBAViB,sCAYZS,EAAY,WAChBR,EAAQ,CACNR,SAAU,GACVC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTC,MAAO,GACPC,OAAQ,MAINc,EAAoB,SAACR,GACzB,MAAwBA,EAAES,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdf,EAAQ,2BAAKD,GAAI,kBAAGe,EAAOC,MAG7B,OACE,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,KAAKC,GAAG,IAAIC,UAAU,WAC5B,kBAAC,IAAI,KACH,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACC,SAAUhB,GACd,4BAAI,cACJ,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACc,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACG,IAAI,YAAW,kBACtB,kBAAC,IAAK,CACJC,UAAQ,EACRC,KAAK,OACLC,YAAY,WACZT,KAAK,WACLU,GAAG,WACHT,MAAOhB,EAAKP,SACZiC,SAAUb,MAIhB,kBAAC,IAAG,CAACK,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACG,IAAI,aAAY,eACvB,kBAAC,IAAK,CACJC,UAAQ,EACRC,KAAK,OACLR,KAAK,YACLS,YAAY,aACZC,GAAG,YACHT,MAAOhB,EAAKN,UACZgC,SAAUb,OAKlB,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACK,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACG,IAAI,eAAc,iBACzB,kBAAC,IAAK,CACJC,UAAQ,EACRC,KAAK,OACLR,KAAK,cACLS,YAAY,eACZC,GAAG,cACHT,MAAOhB,EAAKL,YACZ+B,SAAUb,MAIhB,kBAAC,IAAG,CAACK,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACG,IAAI,SAAQ,SACnB,kBAAC,IAAK,CACJC,UAAQ,EACRC,KAAK,SACLC,YAAY,QACZT,KAAK,QACLU,GAAG,QACHT,MAAOhB,EAAKF,MACZ4B,SAAUb,OAKlB,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACK,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACG,IAAI,aAAY,eACvB,kBAAC,IAAK,CACJC,UAAQ,EACRC,KAAK,OACLC,YAAY,YACZT,KAAK,YACLU,GAAG,YACHT,MAAOhB,EAAKJ,UACZ8B,SAAUb,MAIhB,kBAAC,IAAG,CAACK,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACG,IAAI,WAAU,aACrB,kBAAC,IAAK,CACJC,UAAQ,EACRC,KAAK,OACLC,YAAY,UACZT,KAAK,UACLU,GAAG,UACHT,MAAOhB,EAAKH,QACZ6B,SAAUb,OAKlB,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACQ,IAAI,UAAS,WACpB,kBAAC,IAAK,CACJC,UAAQ,EACRC,KAAK,WACLR,KAAK,SACLU,GAAG,SACHT,MAAOhB,EAAKD,OACZ2B,SAAUb,KAGd,kBAAC,IAAS,CAACc,KAAG,GACZ,kBAAC,IAAG,CAACV,GAAI,CAAEW,KAAM,GAAIC,OAAQ,KAC3B,kBAAC,IAAOC,OAAM,CAACC,MAAM,UAAUR,KAAK,SAASJ,UAAU,QAAO,mB,iCC5JhF,2EAEIa,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBT,IAAKQ,IAAUE,KACfC,MAAOH,IAAUE,KACjBE,OAAQJ,IAAUE,KAClBG,SAAUL,IAAUE,KACpBI,IAAKC,cACLvB,UAAWgB,IAAUQ,OACrBC,UAAWT,IAAUU,QAMnBC,EAAY,SAAmBC,GACjC,IAAI5B,EAAY4B,EAAM5B,UAClByB,EAAYG,EAAMH,UAClBjB,EAAMoB,EAAMpB,IACZa,EAAWO,EAAMP,SACjBF,EAAQS,EAAMT,MACdC,EAASQ,EAAMR,OACfS,EAAMD,EAAMN,IACZQ,EAAaC,YAA8BH,EAAOf,GAElDmB,EAAUC,0BAAgBC,IAAWlC,IAAWQ,GAAM,MAAeW,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBI,GAMtM,MAJY,aAARI,IACFC,EAAWT,SAAWA,GAGJc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpE9B,UAAWgC,MAIfL,EAAUb,UAAYA,EACtBa,EAAUW,aA1BS,CACjBhB,IAAK,OA0BQK","file":"static/js/437.e8117055.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button, Card, CardBody } from 'reactstrap';\r\nimport { HRM_SAVE_LEAVE } from '../../../../../../ApiEndPoint/Api';\r\nimport { _PostSave } from '../../../../../../ApiEndPoint/ApiCalling';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LeaveForm = () => {\r\n  const [data, setData] = useState({\r\n    employee: '',\r\n    leaveType: '',\r\n    leaveReason: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    hours: '',\r\n    remark: '',\r\n  });\r\n  const history = useHistory();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await _PostSave(HRM_SAVE_LEAVE, data);\r\n      resetForm();\r\n      history.push('/app/ajgroup/HRM/leaveList');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    console.log('Form submitted:', data);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setData({\r\n      employee: '',\r\n      leaveType: '',\r\n      leaveReason: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      hours: '',\r\n      remark: '',\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md=\"7\" className=\"mx-auto\">\r\n        <Card>\r\n          <CardBody>\r\n            <Form onSubmit={handleSubmit}>\r\n              <h1>Leave Form</h1>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"employee\">Employee Name:</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Employee\"\r\n                      name=\"employee\"\r\n                      id=\"employee\"\r\n                      value={data.employee}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"leaveType\">Leave Type:</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"leaveType\"\r\n                      placeholder=\"Leave Type\"\r\n                      id=\"leaveType\"\r\n                      value={data.leaveType}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"leaveReason\">Leave Reason:</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"leaveReason\"\r\n                      placeholder=\"Leave Reason\"\r\n                      id=\"leaveReason\"\r\n                      value={data.leaveReason}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"hours\">Hour:</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      placeholder=\"Hours\"\r\n                      name=\"hours\"\r\n                      id=\"hours\"\r\n                      value={data.hours}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"startDate\">Start Date:</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      placeholder=\"StartDate\"\r\n                      name=\"startDate\"\r\n                      id=\"startDate\"\r\n                      value={data.startDate}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"endDate\">End Date:</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      placeholder=\"EndDate\"\r\n                      name=\"endDate\"\r\n                      id=\"endDate\"\r\n                      value={data.endDate}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"remark\">Remark:</Label>\r\n                <Input\r\n                  required\r\n                  type=\"textarea\"\r\n                  name=\"remark\"\r\n                  id=\"remark\"\r\n                  value={data.remark}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Col sm={{ size: 10, offset: 10}}>\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </FormGroup>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default LeaveForm;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}