{"version":3,"sources":["views/apps/freshlist/house/ViewTypes.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","ViewType","props","onChangeHandler3","event","setState","selectedFile3","target","files","selectedName3","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","pageparmission","JSON","parse","localStorage","getItem","Userinfo","id","data","FormData","match","params","append","state","TypeName","Description","axiosConfig","post","then","response","success","swal","catch","error","Brand","Brandlist","Price","stock","Regularprice","formValues","PName","price","DiscountPrice","Addmore","rowData","description","variety","shipmentfee","Tags","taxrate","handleSubmit","bind","this","formdata","product_type","splice","className","render","history","onClick","push","onSubmit","lg","md","type","placeholder","disabled","bsSize","onChange","Component","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/459.af86d88b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport class ViewType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      TypeName: \"\",\r\n      Brand: \"\",\r\n      Brandlist: \"\",\r\n      Description: \"\",\r\n      Price: \"\",\r\n      stock: \"\",\r\n      Regularprice: \"\",\r\n      formValues: [{ PName: \"\", price: \"\" }],\r\n      DiscountPrice: \"\",\r\n      Addmore: false,\r\n      rowData: [],\r\n      description: \"\",\r\n      variety: \"\",\r\n      shipmentfee: \"\",\r\n      Tags: \"\",\r\n      taxrate: \"\",\r\n      status: \"\",\r\n      selectedFile3: null,\r\n      selectedName3: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    const formdata = new FormData();\r\n    formdata.append(\"product_type_id\", id);\r\n    await axiosConfig\r\n      .post(\"/editproducttypelistview\", formdata)\r\n      .then((response) => {\r\n        let rowData = response?.data?.data[0];\r\n        console.log(rowData);\r\n        this.setState({ TypeName: rowData?.product_type });\r\n        this.setState({ Description: rowData?.description });\r\n        this.setState({ status: rowData?.status });\r\n      });\r\n  }\r\n\r\n  handleChange(i, e) {\r\n    let formValues = this.state.formValues;\r\n    formValues[i][e.target.name] = e.target.value;\r\n    this.setState({ formValues });\r\n  }\r\n\r\n  addFormFields() {\r\n    this.setState({\r\n      formValues: [...this.state.formValues, { PName: \"\", price: \"\" }],\r\n    });\r\n    this.handleSubmit();\r\n  }\r\n\r\n  removeFormFields(i) {\r\n    let formValues = this.state.formValues;\r\n    formValues.splice(i, 1);\r\n    this.setState({ formValues });\r\n  }\r\n\r\n  handleSubmit() {\r\n    console.log(this.state.formValues);\r\n  }\r\n\r\n  // onChangeHandler1 = (event) => {\r\n  //   this.setState({ selectedFile1: event.target.files[0] });\r\n  //   this.setState({ selectedName1: event.target.files[0].name });\r\n  //   console.log(event.target.files[0]);\r\n  // };\r\n  // onChangeHandler2 = (event) => {\r\n  //   this.setState({ selectedFile2: event.target.files[0] });\r\n  //   this.setState({ selectedName2: event.target.files[0].name });\r\n  //   console.log(event.target.files[0]);\r\n  // };\r\n  onChangeHandler3 = (event) => {\r\n    this.setState({ selectedFile3: event.target.files });\r\n    this.setState({ selectedName3: event.target.files[0].name });\r\n    console.log(event.target.files);\r\n  };\r\n  // onChangeHandler4 = (event) => {\r\n  //   this.setState({ selectedFile4: event.target.files[0] });\r\n  //   this.setState({ selectedName4: event.target.files[0].name });\r\n  //   console.log(event.target.files[0]);\r\n  // };\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(pageparmission?.Userinfo?.id);\r\n    const data = new FormData();\r\n    let { id } = this.props.match.params;\r\n\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"product_type_id\", id);\r\n    data.append(\"product_type\", this.state.TypeName);\r\n    data.append(\"description\", this.state.Description);\r\n    data.append(\"status\", this.state.status);\r\n\r\n    axiosConfig\r\n      .post(`/editproducttypesubmit`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response?.data?.success) {\r\n          this.setState({ TypeName: \"\" });\r\n          this.setState({ Description: \"\" });\r\n          swal(\"Success!\", \"You Data has been Submitted\", \"success\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <h1 className=\"p-2 \">View Type Details</h1>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h2>Exiting Information</h2>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/house/Typelist\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label> Existing Type</Label>\r\n\r\n                    {/* <select\r\n                      required\r\n                      onChange={(e) =>\r\n                        this.setState({ category_name: e.target.value })\r\n                      }\r\n                      className=\"form-control\"\r\n                      name=\"Select\"\r\n                      id=\"Select\"\r\n                    >\r\n                      <option value=\"volvo\">--Select Category--</option>\r\n                      {this.state.rowData &&\r\n                        this.state.rowData?.map((val, i) => (\r\n                          <option key={i} value={val?.id}>\r\n                            {val?.category_name}\r\n                          </option>\r\n                        ))}\r\n                    </select> */}\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Title\"\r\n                      disabled\r\n                      name=\"TypeName\"\r\n                      bsSize=\"lg\"\r\n                      value={this.state.TypeName}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label> Choose Brand *</Label>\r\n\r\n                    <select\r\n                      required\r\n                      onChange={(e) => this.setState({ Brand: e.target.value })}\r\n                      className=\"form-control\"\r\n                      name=\"Select\"\r\n                      id=\"Select\"\r\n                    >\r\n                      <option value=\"volvo\">--Select Category--</option>\r\n                      {this.state.Brandlist &&\r\n                        this.state.Brandlist?.map((val, i) => (\r\n                          <option key={i} value={val?.id}>\r\n                            {val?.brand_name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Description</Label>\r\n                    <Input\r\n                      disabled\r\n                      type=\"text\"\r\n                      placeholder=\"Title\"\r\n                      name=\"Description\"\r\n                      bsSize=\"lg\"\r\n                      value={this.state.Description}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"12\" md=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Description</Label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      rows={5}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Description ...\"\r\n                      name=\"description\"\r\n                      bsSize=\"lg\"\r\n                      value={this.state.description}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label> PRICE (₹)</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      placeholder=\"Amount In Number\"\r\n                      name=\"Price\"\r\n                      bsSize=\"lg\"\r\n                      value={this.state.Price}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ViewType;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}