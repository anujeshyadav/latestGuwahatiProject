{"version":3,"sources":["views/apps/freshlist/inspection/CreateInspections.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CreateInspections","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","useContext","UserContext","name","JSON","parse","localStorage","getItem","UserName","userRole","Role","comment","time","Date","Comments","setComments","files","formValues","setFormValues","newComment","userName","toString","handleInputChange","e","type","i","target","value","checked","test","length","useEffect","Inspection_ViewData","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","console","log","Inspection","catch","err","className","onSubmit","preventDefault","swal","CreateAccountSave","status","window","location","reload","InspectionDoneat","heading","_text","MyDropDown","map","drop","lg","md","key","dropdown","label","required","onChange","option","_attributes","input","ele","role","roles","find","View","permissions","includes","Edit","phoneinput","Readonly","sm","disabled","inputClass","country","onKeyDown","countryCodeEditable","phone","style","color","placeholder","InspectiondoneOn","inspectionDoneby","soldby","CheckBox","marginRight","size","Radiobutton","multiple","newFormValues","selectedFiles","handleFileChange","onClick","splice","removeFileAttach","Ripple","element","handleComment","removeFormFields","alert","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/462.90e4ae25.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateInspectionsViewData,\r\n  Inspection_ViewData,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst CreateInspections = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const createUserXmlView = useContext(UserContext);\r\n  const [Comments, setComments] = useState([\r\n    {\r\n      name: JSON.parse(localStorage.getItem(\"userData\")).UserName,\r\n      userRole: JSON.parse(localStorage.getItem(\"userData\")).Role,\r\n      comment: \"\",\r\n      time: new Date(),\r\n    },\r\n  ]);\r\n  const [formValues, setFormValues] = useState([{ files: [] }]);\r\n\r\n  const newComment = {\r\n    userName: JSON.parse(localStorage.getItem(\"userData\")).UserName,\r\n    Role: JSON.parse(localStorage.getItem(\"userData\")).Role,\r\n    comment: \"\",\r\n    time: new Date().toString(),\r\n  };\r\n  let handleComment = (i, e) => {\r\n    let newFormValues = [...Comments];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setComments(newFormValues);\r\n  };\r\n  const SubmitComment = () => {\r\n    alert(\"Comment Submitt \");\r\n  };\r\n  let addFormFields = () => {\r\n    setComments([...Comments, newComment]);\r\n  };\r\n\r\n  let addFileInput = () => {\r\n    setFormValues([...formValues, { files: [] }]);\r\n  };\r\n\r\n  let removeFileAttach = i => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let handleFileChange = (i, e) => {\r\n    const newFormValues = [...formValues];\r\n    const selectedFiles = e.target.files;\r\n    newFormValues[i].files = selectedFiles;\r\n    setFormValues(newFormValues);\r\n  };\r\n  let removeFormFields = i => {\r\n    let newFormValues = [...Comments];\r\n    newFormValues.splice(i, 1);\r\n    setComments(newFormValues);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    Inspection_ViewData()\r\n      .then(res => {\r\n        // console.log(res);\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData)?.Inspection);\r\n        // let origionalpermission =\r\n        //   JSON.parse(jsonData)?.Warranty?.input[14].permissions?.role;\r\n        setCreatAccountView(JSON.parse(jsonData)?.Inspection);\r\n        setdropdownValue(JSON.parse(jsonData)?.Inspection);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      CreateAccountSave(formData)\r\n        .then(res => {\r\n          if (res.status) {\r\n            setFormData({});\r\n            window.location.reload();\r\n            swal(\"Acccont Created Successfully\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Inspections</h1>\r\n              </div>\r\n              <div>\r\n                <span>Inspections Id</span> <span>#</span>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <h3 className=\"mb-2\">\r\n                {dropdownValue &&\r\n                  dropdownValue?.InspectionDoneat?.heading?._text}\r\n              </h3>\r\n              <Row className=\"mb-2\">\r\n                {dropdownValue &&\r\n                  dropdownValue?.InspectionDoneat?.MyDropDown?.map(\r\n                    (drop, i) => {\r\n                      return (\r\n                        <>\r\n                          <Col lg=\"6\" md=\"6\" key={i}>\r\n                            <FormGroup>\r\n                              <Label>{drop?.dropdown?.label?._text}</Label>\r\n                              <CustomInput\r\n                                required\r\n                                type=\"select\"\r\n                                name={drop?.dropdown?.name?._text}\r\n                                value={formData[drop?.dropdown?.name?._text]}\r\n                                onChange={handleInputChange}\r\n                              >\r\n                                <option value=\"\">--Select---</option>\r\n                                {drop.dropdown.option?.map((option, index) => {\r\n                                  return (\r\n                                    <option\r\n                                      key={index}\r\n                                      value={option?._attributes?.value}\r\n                                    >\r\n                                      {option?._attributes?.value}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </CustomInput>\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  )}\r\n\r\n                {dropdownValue &&\r\n                  dropdownValue?.InspectionDoneat?.input?.map((ele, i) => {\r\n                    if (ele?.role) {\r\n                      let roles = ele?.role?.find(\r\n                        role => role._attributes?.name === \"WARRANTY APPROVER\"\r\n                      );\r\n\r\n                      View = roles?.permissions?._text.includes(\"View\");\r\n                      Edit = roles?.permissions?._text.includes(\"Edit\");\r\n                    }\r\n                    if (!!ele?.phoneinput) {\r\n                      if (!!ele?.Readonly) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    // disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else if (!!ele?.Readonly) {\r\n                      if (ele?.type._attributes?.type == \"checkbox\") {\r\n                        return (\r\n                          <>\r\n                            <Label className=\"mx-1\">\r\n                              {ele?.heading?._text}\r\n                            </Label>\r\n                            <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"mx-1\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n                                <span className=\"mx-3 py-1\">\r\n                                  {ele?.value?._text}\r\n                                </span>\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"form-control\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                onKeyDown={e => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={e =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n              <h3 className=\"mb-2\">\r\n                {dropdownValue &&\r\n                  dropdownValue?.InspectiondoneOn?.heading?._text}\r\n              </h3>\r\n              <Row>\r\n                {/* {dropdownValue &&\r\n                  dropdownValue?.InspectiondoneOn?.MyDropDown?.map(\r\n                    (drop, i) => {\r\n                      return (\r\n                        <Col lg=\"6\" md=\"6\" key={i}>\r\n                          <FormGroup>\r\n                            <Label>{drop?.dropdown?.label?._text}</Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              name={drop?.dropdown?.name?._text}\r\n                              value={formData[drop?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"\">--Select---</option>\r\n                              {drop.dropdown.option?.map((option, index) => {\r\n                                return (\r\n                                  <option\r\n                                    key={index}\r\n                                    value={option?._attributes?.value}\r\n                                  >\r\n                                    {option?._attributes?.value}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    }\r\n                  )} */}\r\n\r\n                {dropdownValue &&\r\n                  dropdownValue?.InspectiondoneOn?.input?.map((ele, i) => {\r\n                    if (ele?.role) {\r\n                      let roles = ele?.role?.find(\r\n                        role => role._attributes?.name === \"WARRANTY APPROVER\"\r\n                      );\r\n\r\n                      View = roles?.permissions?._text.includes(\"View\");\r\n                      Edit = roles?.permissions?._text.includes(\"Edit\");\r\n                    }\r\n                    if (!!ele?.phoneinput) {\r\n                      if (!!ele?.Readonly) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    // disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else if (!!ele?.Readonly) {\r\n                      if (ele?.type._attributes?.type == \"checkbox\") {\r\n                        return (\r\n                          <>\r\n                            <Label className=\"mx-1\">\r\n                              {ele?.heading?._text}\r\n                            </Label>\r\n                            <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"mx-1\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n                                <span className=\"mx-3 py-1\">\r\n                                  {ele?.value?._text}\r\n                                </span>\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"form-control\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                onKeyDown={e => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={e =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n              <Row>\r\n                {dropdownValue &&\r\n                  dropdownValue?.inspectionDoneby?.MyDropDown?.map(\r\n                    (drop, i) => {\r\n                      return (\r\n                        <Col lg=\"6\" md=\"6\" key={i}>\r\n                          <FormGroup>\r\n                            <Label>{drop?.dropdown?.label?._text}</Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              name={drop?.dropdown?.name?._text}\r\n                              value={formData[drop?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"\">--Select---</option>\r\n                              {drop.dropdown.option?.map((option, index) => {\r\n                                return (\r\n                                  <option\r\n                                    key={index}\r\n                                    value={option?._attributes?.value}\r\n                                  >\r\n                                    {option?._attributes?.value}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    }\r\n                  )}\r\n\r\n                {dropdownValue &&\r\n                  dropdownValue?.inspectionDoneby?.input?.map((ele, i) => {\r\n                    if (ele?.role) {\r\n                      let roles = ele?.role?.find(\r\n                        role => role._attributes?.name === \"WARRANTY APPROVER\"\r\n                      );\r\n\r\n                      View = roles?.permissions?._text.includes(\"View\");\r\n                      Edit = roles?.permissions?._text.includes(\"Edit\");\r\n                    }\r\n                    if (!!ele?.phoneinput) {\r\n                      if (!!ele?.Readonly) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    // disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else if (!!ele?.Readonly) {\r\n                      if (ele?.type._attributes?.type == \"checkbox\") {\r\n                        return (\r\n                          <>\r\n                            <Label className=\"mx-1\">\r\n                              {ele?.heading?._text}\r\n                            </Label>\r\n                            <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"mx-1\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n                                <span className=\"mx-3 py-1\">\r\n                                  {ele?.value?._text}\r\n                                </span>\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"form-control\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                onKeyDown={e => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={e =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n              <Row>\r\n                {dropdownValue &&\r\n                  dropdownValue?.soldby?.MyDropDown?.map((drop, i) => {\r\n                    return (\r\n                      <Col lg=\"6\" md=\"6\" key={i}>\r\n                        <FormGroup>\r\n                          <Label>{drop?.dropdown?.label?._text}</Label>\r\n                          <CustomInput\r\n                            required\r\n                            type=\"select\"\r\n                            name={drop?.dropdown?.name?._text}\r\n                            value={formData[drop?.dropdown?.name?._text]}\r\n                            onChange={handleInputChange}\r\n                          >\r\n                            <option value=\"\">--Select---</option>\r\n                            {drop.dropdown.option?.map((option, index) => {\r\n                              return (\r\n                                <option\r\n                                  key={index}\r\n                                  value={option?._attributes?.value}\r\n                                >\r\n                                  {option?._attributes?.value}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </CustomInput>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n\r\n                {dropdownValue &&\r\n                  dropdownValue?.soldby?.input?.map((ele, i) => {\r\n                    if (ele?.role) {\r\n                      let roles = ele?.role?.find(\r\n                        role => role._attributes?.name === \"WARRANTY APPROVER\"\r\n                      );\r\n\r\n                      View = roles?.permissions?._text.includes(\"View\");\r\n                      Edit = roles?.permissions?._text.includes(\"Edit\");\r\n                    }\r\n                    if (!!ele?.phoneinput) {\r\n                      if (!!ele?.Readonly) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    // disabled\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={e => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={phone => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else if (!!ele?.Readonly) {\r\n                      if (ele?.type._attributes?.type == \"checkbox\") {\r\n                        return (\r\n                          <>\r\n                            <Label className=\"mx-1\">\r\n                              {ele?.heading?._text}\r\n                            </Label>\r\n                            <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"mx-1\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n                                <span className=\"mx-3 py-1\">\r\n                                  {ele?.value?._text}\r\n                                </span>\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <FormGroup>\r\n                                <Input\r\n                                  disabled\r\n                                  className=\"form-control\"\r\n                                  type={ele?.type._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  placeholder={ele?.name._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                />\r\n\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                onKeyDown={e => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={e =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n              <Row>\r\n                <div className=\"container\">\r\n                  <Label className=\"py-1\">Notification</Label>\r\n                  <div>\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.Inspection?.CheckBox?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <>\r\n                              <span key={i} className=\"mx-2\">\r\n                                <Input\r\n                                  style={{ marginRight: \"3px\" }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  onChange={e =>\r\n                                    handleInputChange(e, \"checkbox\")\r\n                                  }\r\n                                />{\" \"}\r\n                                <span\r\n                                  className=\"mt-1 mx-1\"\r\n                                  style={{ marginRight: \"40px\" }}\r\n                                >\r\n                                  {ele?.label?._text == \"Whatsapp\" ? (\r\n                                    <BsWhatsapp\r\n                                      className=\"mx-1\"\r\n                                      color=\"#59CE72\"\r\n                                      size={25}\r\n                                    />\r\n                                  ) : (\r\n                                    <>\r\n                                      {ele.label?._text == \"SMS\" ? (\r\n                                        <>\r\n                                          <FcPhoneAndroid size={30} />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <BiEnvelope className=\"\" size={30} />\r\n                                        </>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </>\r\n                          );\r\n                        }\r\n                      )}\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.Radiobutton?.input?.map((ele, i) => {\r\n                        return (\r\n                          <FormGroup key={i}>\r\n                            <div className=\"mx-1\">\r\n                              <Input\r\n                                className=\"\"\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </div>\r\n                          </FormGroup>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n              {formValues.map((index, i) => (\r\n                <Row className=\"my-2\">\r\n                  <Col lg=\"6\" md=\"6\" sm=\"12\" key={i}>\r\n                    <Input\r\n                      type=\"file\"\r\n                      multiple\r\n                      onChange={e => handleFileChange(i, e)}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"d-flex \" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div>\r\n                      {i ? (\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger\"\r\n                          onClick={() => removeFileAttach(i)}\r\n                        >\r\n                          -\r\n                        </Button>\r\n                      ) : null}\r\n                    </div>\r\n                    <div>\r\n                      <Button\r\n                        className=\"ml-1\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => addFileInput()}\r\n                      >\r\n                        +\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n\r\n              <hr />\r\n              <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.Inspection?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"container\">\r\n                <Label className=\"py-1\">Notification</Label>\r\n                <div>\r\n                  {CreatAccountView &&\r\n                    CreatAccountView?.CheckBox?.input?.map((ele, i) => {\r\n                      return (\r\n                        <>\r\n                          <span key={i} className=\"mx-2\">\r\n                            <Input\r\n                              style={{ marginRight: \"3px\" }}\r\n                              type={ele?.type?._attributes?.type}\r\n                              name={ele?.name?._text}\r\n                              onChange={e => handleInputChange(e, \"checkbox\")}\r\n                            />{\" \"}\r\n                            <span\r\n                              className=\"mt-1 mx-1\"\r\n                              style={{ marginRight: \"40px\" }}\r\n                            >\r\n                              {ele?.label?._text == \"Whatsapp\" ? (\r\n                                <BsWhatsapp\r\n                                  className=\"mx-1\"\r\n                                  color=\"#59CE72\"\r\n                                  size={25}\r\n                                />\r\n                              ) : (\r\n                                <>\r\n                                  {ele.label?._text == \"SMS\" ? (\r\n                                    <>\r\n                                      <FcPhoneAndroid size={30} />\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      <BiEnvelope className=\"\" size={30} />\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </span>\r\n                          </span>\r\n                        </>\r\n                      );\r\n                    })}\r\n                </div>\r\n              </div>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n            {Comments &&\r\n              Comments?.map((element, index) => (\r\n                <>\r\n                  <Row key={index} className=\"my-2\">\r\n                    <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <Label>Comment</Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Comment\"\r\n                        value={element.comment || \"\"}\r\n                        onChange={e => handleComment(index, e)}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-2\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div>\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => removeFormFields(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div>\r\n                        <Button\r\n                          className=\"ml-1 \"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addFormFields()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              ))}\r\n            <Button\r\n              className=\"ml-1 \"\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                SubmitComment(e);\r\n              }}\r\n            >\r\n              Submit Comment\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateInspections;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}