{"version":3,"sources":["views/apps/freshlist/order/CreateReceipt.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","CreateReceipt","args","useState","error","PaymentType","setPaymentType","Mode","setMode","BulkImport","setBulkImport","BulkUpload","setBulkUpload","PartyList","setPartyList","PartyId","setPartyId","UserInfo","setUserInfo","setParty","setSelectedParty","AllData","setAllData","productId","availableQty","qty","price","Size","unitType","totalprice","History","useHistory","Params","useParams","useEffect","id","_Get","View_Receipt_By_Id","then","res","data","Receipts","partyId","_id","payload","Paymentmode","paymentMode","paymentType","Amount","amount","Date","createdAt","split","Note","note","Title","title","InstrumentNumber","instrumentNo","catch","err","console","log","userdata","JSON","parse","localStorage","getItem","CreateCustomerList","database","value","Customer","length","userInfo","submitHandler","e","preventDefault","undefined","formdata","FormData","append","_BulkUpload","Bulk_Upload_Receipt","swal","message","userId","created_by","Number","type","_PostSave","Create_Receipt","goBack","_Put","Update_Receipt_By_Id","handleChange","target","name","className","lg","md","color","onClick","render","history","style","cursor","push","onSubmit","sm","placeholder","onChange","files","Ripple","required","readOnly","map","ele","firstName","lastName","selectionLimit","isObject","options","onSelect","selectedList","selectedItem","handleSelectionParty","onRemove","removedItem","index","displayValue","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/467.0c89893a.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route, useHistory, useParams } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  SaveOrder,\r\n  CreateCustomerList,\r\n  _Get,\r\n  _Post,\r\n  _PostSave,\r\n  _Put,\r\n  _BulkUpload,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  Bulk_Upload_Receipt,\r\n  Bulk_Upload_User,\r\n  Create_Receipt,\r\n  Update_Receipt_By_Id,\r\n  View_Receipt_By_Id,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreateReceipt = (args) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [PaymentType, setPaymentType] = useState(\"\");\r\n  const [Mode, setMode] = useState(\"Create\");\r\n  const [BulkImport, setBulkImport] = useState(null);\r\nconst [BulkUpload, setBulkUpload] = useState(false);\r\nconst [PartyList, setPartyList] = useState([]);\r\nconst [PartyId, setPartyId] = useState(\"\");\r\nconst [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\nconst [UserInfo, setUserInfo] = useState({});\r\nconst [Party, setParty] = useState({});\r\nconst [SelectedParty, setSelectedParty] = useState({});\r\nconst [AllData, setAllData] = useState({});\r\nconst [product, setProduct] = useState([\r\n  {\r\n    productId: \"\",\r\n    availableQty: \"\",\r\n    qty: 1,\r\n    price: \"\",\r\n    Size: \"\",\r\n    unitType: \"\",\r\n    totalprice: \"\",\r\n  },\r\n]);\r\nlet History = useHistory();\r\nlet Params = useParams();\r\nconst handleSelectionParty = (selectedList, selectedItem) => {\r\n  setPartyId(selectedItem?._id);\r\n  setParty(selectedItem);\r\n};\r\n\r\nuseEffect(() => {\r\n  let id = Params?.id;\r\n  if (id == 0) {\r\n    setMode(\"Create\");\r\n  } else {\r\n    setMode(\"Edit\");\r\n    _Get(View_Receipt_By_Id, id)\r\n      .then((res) => {\r\n        let data = res?.Receipts;\r\n\r\n        setSelectedParty(data?.partyId);\r\n        setPartyId(data?.partyId?._id);\r\n        let payload = {\r\n          Paymentmode: data?.paymentMode,\r\n          PaymentType: data?.paymentType,\r\n          Amount: data?.amount,\r\n          Date: data?.createdAt?.split(\"T\")[0],\r\n          Note: data?.note,\r\n          Title: data?.title,\r\n          InstrumentNumber: data?.instrumentNo,\r\n        };\r\n        setPaymentType(data?.paymentType);\r\n        setAllData(payload);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n  CreateCustomerList(userdata?._id, userdata?.database)\r\n    .then((res) => {\r\n      let value = res?.Customer;\r\n      if (value?.length) {\r\n        setPartyList(value);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}, []);\r\nuseEffect(() => {\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n  setUserInfo(userInfo);\r\n}, []);\r\n\r\nconst submitHandler = async (e) => {\r\n  e.preventDefault();\r\n\r\n  if (BulkImport !== null || BulkImport != undefined) {\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", BulkImport);\r\n    formdata.append(\"type\", \"Received\");\r\n\r\n    await _BulkUpload(Bulk_Upload_Receipt, formdata)\r\n      .then((res) => {\r\n        swal(`${res?.message}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  } else {\r\n    let id = Params?.id;\r\n    const payload = {\r\n      userId: UserInfo?._id,\r\n      created_by: UserInfo?._id,\r\n      paymentType: AllData?.PaymentType,\r\n      paymentMode: AllData?.Paymentmode,\r\n      partyId: PartyId ? PartyId : null,\r\n      amount: AllData?.Amount ? Number(AllData?.Amount) : null,\r\n      instrumentNo: AllData?.InstrumentNumber\r\n        ? AllData?.InstrumentNumber\r\n        : null,\r\n      note: AllData?.Note ? AllData?.Note : null,\r\n      title: AllData?.Title ? AllData?.Title : null,\r\n      database: UserInfo?.database,\r\n      type: \"receipt\",\r\n    };\r\n\r\n    if (id == 0) {\r\n      if (error) {\r\n        swal(\"Error occured while Entering Details\");\r\n      } else {\r\n        _PostSave(Create_Receipt, payload)\r\n          .then((res) => {\r\n            History.goBack();\r\n            swal(\"Added Successfully\");\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            swal(\"Somthing went Wrong\");\r\n            console.log(err);\r\n          });\r\n      }\r\n    } else {\r\n      _Put(Update_Receipt_By_Id, id, payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"Updated Successfully\");\r\n          History.goBack();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Something Went Wrong\");\r\n        });\r\n    }\r\n  }\r\n};\r\n\r\nconst onRemove1 = (selectedList, removedItem, index) => {\r\n  console.log(selectedList);\r\n};\r\nconsole.log(AllData);\r\n\r\nconst handleChange = (e) => {\r\n  let { name, value } = e.target;\r\n  setAllData({ ...AllData, [name]: value });\r\n};\r\nreturn (\r\n  <div>\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col className=\"\">\r\n            <div>\r\n              <h1 className=\"\">{Mode && Mode} Receipt</h1>\r\n            </div>\r\n          </Col>\r\n          {!BulkUpload && !BulkUpload ? (\r\n            <>\r\n              <Col lg=\"2\" md=\"2\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setBulkUpload(true);\r\n                  }}>\r\n                  Bulk Upload\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Col lg=\"1\" md=\"1\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setBulkUpload(false);\r\n                  }}>\r\n                  Back\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          )}\r\n\r\n          {!BulkUpload && !BulkUpload && (\r\n            <Col lg=\"1\" md=\"1\">\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/SoftNumen/accounSearch\")\r\n                      }>\r\n                      {\" \"}\r\n                      Back\r\n                      {/* <FaPlus size={15} /> Create User */}\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n\r\n        <CardBody>\r\n          {BulkUpload && BulkUpload ? (\r\n            <>\r\n              <Form className=\"m-1\" onSubmit={submitHandler}>\r\n                <Row>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Bulk Import(.xlxs only)</Label>\r\n\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"file\"\r\n                        placeholder=\"\"\r\n                        name=\"BulkImport\"\r\n                        onChange={(e) => {\r\n                          setBulkImport(e.target.files[0]);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mt-2\">\r\n                        Submit\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Form className=\"m-1\" onSubmit={submitHandler}>\r\n                <Row>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Choose Paymen Mode</Label>\r\n                    <CustomInput\r\n                      required\r\n                      value={AllData?.Paymentmode}\r\n                      name=\"Paymentmode\"\r\n                      onChange={handleChange}\r\n                      type=\"select\">\r\n                      <option>--Select--</option>\r\n                      <option value=\"Cash\">Cash</option>\r\n                      <option value=\"Bank\">Bank</option>\r\n                    </CustomInput>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Choose Payment Type</Label>\r\n                    <CustomInput\r\n                      required\r\n                      value={AllData?.PaymentType}\r\n                      name=\"PaymentType\"\r\n                      onChange={(e) => {\r\n                        setPaymentType(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                      type=\"select\">\r\n                      <option>--Select--</option>\r\n                      <option value=\"partyPaymentReceived\">\r\n                        Party Payment Received\r\n                      </option>\r\n                      <option value=\"otherReceived\">Other</option>\r\n                    </CustomInput>\r\n                  </Col>\r\n                </Row>\r\n                {PaymentType && PaymentType == \"partyPaymentReceived\" && (\r\n                  <Row>\r\n                    {Mode == \"Edit\" ? (\r\n                      <>\r\n                        <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                          <div className=\"\">\r\n                            <Label>Selected Party</Label>\r\n                            <CustomInput\r\n                              readOnly=\"true\"\r\n                              value={PartyId}\r\n                              type=\"select\">\r\n                              <option>--select--</option>\r\n                              {PartyList?.length > 0 &&\r\n                                PartyList?.map((ele, i) => {\r\n                                  console.log(ele);\r\n                                  return (\r\n                                    <option\r\n                                      value={\r\n                                        ele?._id\r\n                                      }>{`${ele?.firstName} ${ele?.lastName} `}</option>\r\n                                  );\r\n                                })}\r\n                            </CustomInput>\r\n                          </div>\r\n                        </Col>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                          <div className=\"\">\r\n                            <Label>Choose Party</Label>\r\n                            <Multiselect\r\n                              required\r\n                              selectionLimit={1}\r\n                              isObject=\"false\"\r\n                              options={PartyList}\r\n                              onSelect={(selectedList, selectedItem) =>\r\n                                handleSelectionParty(selectedList, selectedItem)\r\n                              }\r\n                              onRemove={onRemove1}\r\n                              displayValue=\"firstName\"\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                      </>\r\n                    )}\r\n                    {AllData?.Paymentmode && AllData?.Paymentmode == \"Bank\" && (\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <Label>Instrument/Trx Number *</Label>\r\n                        <Input\r\n                          required\r\n                          placeholder=\"Enter Instrument Number\"\r\n                          type=\"text\"\r\n                          value={AllData?.InstrumentNumber}\r\n                          name=\"InstrumentNumber\"\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                    )}\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Amount</Label>\r\n                      <Input\r\n                        required\r\n                        placeholder=\"Enter Amount\"\r\n                        type=\"number\"\r\n                        value={AllData?.Amount}\r\n                        name=\"Amount\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        value={AllData?.Date}\r\n                        name=\"Date\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Note :</Label>\r\n                      <textarea\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Notes ...\"\r\n                        className=\"form-control\"\r\n                        value={AllData?.Note}\r\n                        name=\"Note\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n                {PaymentType && PaymentType == \"otherReceived\" && (\r\n                  <>\r\n                    <Row>\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <Label>Title</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Title \"\r\n                          name=\"Title\"\r\n                          value={AllData?.Title}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      {AllData?.Paymentmode &&\r\n                        AllData?.Paymentmode == \"Bank\" && (\r\n                          <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <Label>Instrument/Trx Number *</Label>\r\n                            <Input\r\n                              required\r\n                              placeholder=\"Enter Instrument Number\"\r\n                              type=\"text\"\r\n                              value={AllData?.InstrumentNumber}\r\n                              name=\"InstrumentNumber\"\r\n                              onChange={handleChange}\r\n                            />\r\n                          </Col>\r\n                        )}\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <Label>Amount</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          value={AllData?.Amount}\r\n                          name=\"Amount\"\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <Label>Date</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"date\"\r\n                          value={AllData?.Date}\r\n                          name=\"Date\"\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <Label>Note :</Label>\r\n                        <textarea\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Note...\"\r\n                          className=\"form-control\"\r\n                          value={AllData?.Note}\r\n                          name=\"Note\"\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </>\r\n                )}\r\n\r\n                <hr />\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mt-2\">\r\n                        Submit\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\nexport default CreateReceipt;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}