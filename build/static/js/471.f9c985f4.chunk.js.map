{"version":3,"sources":["views/apps/freshlist/refundrequest/AddRefund.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","AddRefund","props","changeHandler","e","setState","target","name","value","changeHandler1","Refundstatus","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","data","swal","history","push","catch","error","delivery_slot","quantity","phone_no","order_zone","delivery_add","attribute","email","delivery_date","time_slot","status","productName","attribuName","previous_add","new_address","notify","rowData","Replacement","get","className","col-sm-6","render","onClick","onSubmit","this","lg","md","selectionLimit","placeholder","isObject","onRemove","onSelect","onChange","options","showCheckbox","type","customer","bind","unit","price","sm","style","marginRight","for","id","row","Ripple","color","Component","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/471.f9c985f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n// import Multiselect from \"multiselect-react-dropdown\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nexport class AddRefund extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      delivery_slot: \"\",\r\n      quantity: \"\",\r\n      phone_no: \"\",\r\n      order_zone: \"\",\r\n      delivery_add: \"\",\r\n      attribute: \"\",\r\n      email: \"\",\r\n      delivery_date: \"\",\r\n      time_slot: \"\",\r\n      status: \"\",\r\n      productName: [],\r\n      attribuName: [],\r\n      previous_add: \"\",\r\n      new_address: \"\",\r\n      notify: [],\r\n      rowData: [],\r\n      Replacement: \"\",\r\n      Refundstatus: \"\",\r\n    };\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ Refundstatus: e.target.value });\r\n  };\r\n  async componentDidMount() {\r\n    axiosConfig.get(\"/admin/allorder_list\").then((response) => {\r\n      console.log(response.data.data);\r\n      this.setState({ rowData: response.data.data });\r\n    });\r\n  }\r\n\r\n  //   async componentDidMount() {\r\n  //     axiosConfig\r\n  //       .get(\"/admin/product_list\")\r\n  //       .then((response) => {\r\n  //         console.log(response.data.data);\r\n  //         this.setState({\r\n  //           productName: response.data.data,\r\n  //         });\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n\r\n  //     axiosConfig\r\n  //       .get(\"/admin/getall_units\")\r\n  //       .then((response) => {\r\n  //         this.setState({\r\n  //           attribuName: response.data.data,\r\n  //         });\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         swal(\"Oops\", \"Something went wrong!\", \"error\");\r\n  //         console.log(err);\r\n  //       });\r\n  //   }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addorder\", this.state)\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/softNumen/order/placeorder\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Refund\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softNumen/order/placeorder\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Order Id</Label>\r\n                    <Multiselect\r\n                      selectionLimit=\"1\"\r\n                      name=\"notify\"\r\n                      // singleSelect\r\n                      placeholder=\"Search order id here\"\r\n                      value={this.state.notify}\r\n                      isObject={false}\r\n                      onRemove={(e) => {\r\n                        console.log(e);\r\n                      }}\r\n                      onSelect={(e) => {\r\n                        this.setState({ notify: e });\r\n                        // this.setState({ [e.target.name]: e.target.value });\r\n                        console.log(e);\r\n                      }}\r\n                      onChange={this.changeHandler}\r\n                      options={[\r\n                        \"$6465464564664\",\r\n                        \"$65466464\",\r\n                        \"$6546ddd4646465464\",\r\n                        \"$65464dd465466\",\r\n                        \"$6546ss6464\",\r\n                        \"$65aa466464\",\r\n                        \"$6546464vv646f5464\",\r\n                        \"$654644dr65f466\",\r\n                        \"$6546646rrf4\",\r\n                        \"$654sff6646f4\",\r\n                        \"$6546464frtt6465464\",\r\n                        \"$6546446f5466\",\r\n                        \"$6546646f4\",\r\n                        \"$6546f46df4f6465464\",\r\n                        \"$654ddfd6f4465466\",\r\n                      ]}\r\n                      showCheckbox\r\n                      className=\"mmm \"\r\n                    />\r\n\r\n                    {/* <Label>Order Id</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"\"\r\n                      name=\"orderId\"\r\n                      value={this.state.orderId}\r\n                      onChange={this.changeHandler.bind(this)}\r\n                    /> */}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Customer Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Anujesh yadav\"\r\n                      name=\"customer\"\r\n                      value={this.state.customer}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      // maxLength={10}\r\n                      // size={10}\r\n                      placeholder=\"7000420819\"\r\n                      name=\"phone_no\"\r\n                      value={this.state.phone_no}\r\n                      onChange={this.changeHandler.bind(this)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Delivery Address\"\r\n                      name=\"delivery_add\"\r\n                      value={this.state.delivery_add}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      placeholder=\"sanujesh@gmail.com \"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Unit Price</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"10\"\r\n                      name=\"unit\"\r\n                      value={this.state.unit}\r\n                      onChange={this.changeHandler.bind(this)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Time Slot</Label>\r\n                    <Input\r\n                      type=\"time\"\r\n                      placeholder=\"Time Slot\"\r\n                      name=\"time_slot\"\r\n                      value={this.state.time_slot}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Product Name</Label>\r\n                    <Multiselect\r\n                      name=\"notify\"\r\n                      placeholder=\"ata tamater Aalu \"\r\n                      value={this.state.notify}\r\n                      isObject={false}\r\n                      onRemove={(e) => {\r\n                        console.log(e);\r\n                      }}\r\n                      onSelect={(e) => {\r\n                        this.setState({ notify: e });\r\n                        // this.setState({ [e.target.name]: e.target.value });\r\n                        console.log(e);\r\n                      }}\r\n                      onChange={this.changeHandler}\r\n                      options={[\r\n                        \"Aalu\",\r\n                        \"tamater\",\r\n                        \"milk\",\r\n                        \"Soya Chunks\",\r\n                        \"Ata\",\r\n                        \"Ice Cream\",\r\n                      ]}\r\n                      showCheckbox\r\n                      className=\"mmm \"\r\n                    />\r\n                    {/* <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Product\"\r\n                      name=\"product\"\r\n                      value={this.state.product}\r\n                      onChange={this.changeHandler}\r\n                    /> */}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Total Quantity</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"5\"\r\n                      name=\"quantity\"\r\n                      value={this.state.quantity}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Total Price</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"50\"\r\n                      name=\"price\"\r\n                      value={this.state.price}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Payment Status</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\" done\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"Paid\">Paid</option>\r\n                    <option value=\"Unpaid\">Unpaid</option>\r\n                  </CustomInput>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              <Row className=\"mt-2\">\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-1\"> Refund Status </Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={this.changeHandler1}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"Refundstatus\"\r\n                      value=\"Replacement\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Replacement</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"Refundstatus\"\r\n                      value=\"Refund\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Refund</span>\r\n                  </div>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"mb-1\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={this.changeHandler1}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Replacement\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Replacement</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Refund\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Refund</span>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>{this.state.Refundstatus} Status</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"pending\">Pending</option>\r\n                    {/* <option value=\"complete\">Completed</option> */}\r\n                    {/* <option value=\"delivery\">Delivery</option> */}\r\n                    <option value=\"canceled\">Canceled</option>\r\n                    <option value=\"Approved\">Approved</option>\r\n                    {/* <option value=\"Packaging\">Packaging</option> */}\r\n                    <option value=\"Rejected\">Rejected</option>\r\n                    {/* <option value=\"Outfordelivery\">Outfordelivery</option> */}\r\n                    {/* <option value=\"Delivered\">Delivered</option> */}\r\n                    {/* <option value=\"Failedtodeliver\">Failedtodeliver</option> */}\r\n                    {/* <option value=\"Returned\">Returned</option> */}\r\n                  </CustomInput>\r\n                </Col>\r\n                {this.state.Refundstatus == \"Refund\" ? (\r\n                  <>\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <Label className=\"mt-2  mb-2\">\r\n                        {\" \"}\r\n                        Payment Refund Method\r\n                      </Label>\r\n\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"\"\r\n                        name=\"status\"\r\n                        value={this.state.status}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option value=\"Paid\">wallet</option>\r\n                        <option value=\"Unpaid\">bank Account</option>\r\n                        <option value=\"Unpaid\">UPI</option>\r\n                        <option value=\"Unpaid\">Other</option>\r\n                      </CustomInput>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label for=\"exampleText mx-2\" className=\"\">\r\n                    {this.state.Refundstatus} Reason\r\n                  </Label>\r\n                  <Col>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      id=\"exampleText\"\r\n                      name=\"text\"\r\n                      row=\"8\"\r\n                      // cols=\"50\"\r\n                    />\r\n                  </Col>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {/* <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Product Name</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Product\"\r\n                    name=\"product\"\r\n                    value={this.state.product}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Order ID</option>\r\n                    {this.state.productName?.map((pnlist) => (\r\n                      <option value={pnlist?._id} key={pnlist?._id}>\r\n                        {pnlist?._id}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col> */}\r\n\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <Label>Quantity</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Quantity\"\r\n                    name=\"quantity\"\r\n                    value={this.state.quantity}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Add Refund\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddRefund;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}