{"version":3,"sources":["views/apps/freshlist/subcategory/WarehouseStockXml.js","views/apps/freshlist/subcategory/WarehouseStock.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["WareHouseStockxml","WareHouseStock","useState","CreatGoDownView","setCreteGoDownView","useEffect","response","WarehouseStockFile","jsonData","xmlJs","xml2json","compact","spaces","console","log","JSON","parse","WhStockXml","input","Card","Row","className","Col","render","history","Button","onClick","push","CardBody","Form","map","ele","i","lg","md","sm","FormGroup","Label","label","_text","Input","type","_attributes","placeholder","name","Ripple","color","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"wLAmCeA,EAjCW,WACxB,MAAM,01B,2GC8FOC,UA5FS,WACpB,MAA8CC,mBAAS,IAAG,mBAAnDC,EAAe,KAAEC,EAAkB,KAS7C,OANEC,qBAAU,WAAK,IAAD,IACTC,EAAWC,IACTC,EAAWC,IAAMC,SAASJ,EAAU,CAAEK,SAAS,EAAMC,OAAQ,IACrEC,QAAQC,IAAIC,KAAKC,MAAMR,GAAUS,WAAWC,OAC5Cd,EAAuC,QAArB,EAACW,KAAKC,MAAMR,UAAS,OAAY,QAAZ,EAApB,EAAsBS,kBAAU,WAAZ,EAApB,EAAkCC,SAClD,IACG,6BACH,kBAACC,EAAA,EAAI,KACL,kBAACC,EAAA,EAAG,CAACC,UAAU,OACR,kBAACC,EAAA,EAAG,KACF,wBAAID,UAAU,cAAa,mBAE7B,kBAACC,EAAA,EAAG,KACF,kBAAC,IAAK,CACJC,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAACC,EAAA,EAAM,CACLJ,UAAU,8BACVK,QAAS,kBACPF,EAAQG,KAAK,kCAEhB,aAQlB,kBAACC,EAAA,EAAQ,KACE,kBAACC,EAAA,EAAI,CAACR,UAAU,OAId,kBAACD,EAAA,EAAG,CAACC,UAAU,QAEZlB,IACgB,OAAfA,QAAe,IAAfA,OAAe,EAAfA,EAAiB2B,KAAI,SAACC,EAAKC,GAAO,IAAD,UAChC,OACC,kBAACV,EAAA,EAAG,CAAEW,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACvB,kBAACC,EAAA,EAAS,KACR,kBAACC,EAAA,EAAK,KAAK,OAAHN,QAAG,IAAHA,GAAU,QAAP,EAAHA,EAAKO,aAAK,WAAP,EAAH,EAAYC,OAEpB,kBAACC,EAAA,EAAK,CACPC,KAAS,OAAHV,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKU,YAAI,OAAa,QAAb,EAAT,EAAWC,mBAAW,WAAnB,EAAH,EAAwBD,KAC3BE,YAAgB,OAAHZ,QAAG,IAAHA,GAAgB,QAAb,EAAHA,EAAKY,mBAAW,WAAb,EAAH,EAAkBJ,MAC/BK,KAAS,OAAHb,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKa,YAAI,WAAN,EAAH,EAAWL,eA2B3B,6BACA,kBAACnB,EAAA,EAAG,KACF,kBAACK,EAAA,EAAOoB,OAAM,CACZC,MAAM,UACNL,KAAK,SACLpB,UAAU,kBACX,iB,iCCvFjB,2EAEI0B,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBC,IAAKF,IAAUG,KACfC,MAAOJ,IAAUG,KACjBE,OAAQL,IAAUG,KAClBG,SAAUN,IAAUG,KACpBI,IAAKC,cACLrC,UAAW6B,IAAUS,OACrBC,UAAWV,IAAUW,QAMnBzB,EAAY,SAAmB0B,GACjC,IAAIzC,EAAYyC,EAAMzC,UAClBuC,EAAYE,EAAMF,UAClBR,EAAMU,EAAMV,IACZI,EAAWM,EAAMN,SACjBF,EAAQQ,EAAMR,MACdC,EAASO,EAAMP,OACfQ,EAAMD,EAAML,IACZO,EAAaC,YAA8BH,EAAOf,GAElDmB,EAAUC,0BAAgBC,IAAW/C,IAAW+B,GAAM,MAAeE,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBI,GAMtM,MAJY,aAARG,IACFC,EAAWR,SAAWA,GAGJa,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpE3C,UAAW6C,MAIf9B,EAAUY,UAAYA,EACtBZ,EAAUoC,aA1BS,CACjBf,IAAK,OA0BQrB","file":"static/js/480.4f51bca2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WareHouseStockxml = () => {\r\n  return `<WhStockXml>\r\n \r\n     <input>\r\n         <label>ProductName</label>\r\n         <type type=\"text\"></type>\r\n         <name>ProductName</name>\r\n         <placeholder>Enter ProductName</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>InStock</label>\r\n         <type type=\"text\"></type>\r\n         <name>InStock</name>\r\n         <placeholder>Enter InStock</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Damage</label>\r\n         <type type=\"text\"></type>\r\n         <name>damage</name>\r\n         <number>yes</number>\r\n         <placeholder>Enter Damage</placeholder>\r\n     </input>\r\n     <input>\r\n         <label>Pending Delivery</label>\r\n         <type type=\"text\"></type>\r\n         <name>PendingDelivery</name>\r\n         <number>yes</number>\r\n         <placeholder>Enter Pending Delivery</placeholder>\r\n     </input>\r\n </WhStockXml>`;\r\n};\r\nexport default WareHouseStockxml;\r\n\r\n","import React, { useEffect, useState, useRef ,useContext } from \"react\";\r\nimport WarehouseStockFile from \"./WarehouseStockXml\";\r\nimport xmlJs from \"xml-js\";\r\nimport {Label, Col,Input,FormGroup, Row, Card,CardBody,Form ,Button  } from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\n const WareHouseStock = ()=>{\r\n    const [CreatGoDownView, setCreteGoDownView] = useState([]);\r\n\r\n\r\n   useEffect(()=>{\r\n    let response = WarehouseStockFile();\r\n    const jsonData = xmlJs.xml2json(response, { compact: true, spaces: 2 });\r\n  console.log(JSON.parse(jsonData).WhStockXml.input);\r\n  setCreteGoDownView(JSON.parse(jsonData)?.WhStockXml?.input);\r\n   },[])\r\n return(<div>\r\n     <Card>\r\n     <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">WarehouseStock</h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softNumen/Unit/UnitList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n <CardBody>\r\n            <Form className=\"m-1\"\r\n            //   ref={formRef}\r\n            //  onSubmit={submitHandler}\r\n             >\r\n              <Row className=\"mb-2\">\r\n        \r\n                {CreatGoDownView &&\r\n                  CreatGoDownView?.map((ele, i) => {\r\n                   return (\r\n                    <Col  lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <FormGroup >\r\n                      <Label>{ele?.label?._text}</Label>\r\n\r\n                      <Input\r\n                     type={ele?.type?._attributes?.type}\r\n                        placeholder={ele?.placeholder?._text}\r\n                        name={ele?.name?._text}\r\n                        // value={formData[ele?.name?._text]}\r\n                        // onChange={(e) =>\r\n                        //   handleInputChange(\r\n                        //     e,\r\n                        //     ele?.type?._attributes?.type,\r\n                        //     i\r\n                        //   )\r\n                        // }\r\n                      />\r\n                      {/* {index === i ? (\r\n                        <>\r\n                          {error && (\r\n                            <span style={{ color: \"red\" }}>\r\n                              {error}\r\n                            </span>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )} */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                   )\r\n   }\r\n                )}\r\n              </Row>\r\n              <hr />\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n</Card>\r\n            </div>\r\n        )\r\n}\r\nexport default WareHouseStock\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}