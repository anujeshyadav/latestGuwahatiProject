{"version":3,"sources":["../node_modules/reactstrap/es/Container.js","views/pages/authentication/subscription/Subs.js"],"names":["_excluded","propTypes","tag","tagPropType","fluid","PropTypes","oneOfType","bool","string","className","cssModule","object","Container","props","Tag","attributes","_objectWithoutPropertiesLoose","containerClass","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","Subs","state","handleLogin","e","preventDefault","loginWithJWT","class","id","value","selected","action","onSubmit","this","name","type","placeholder","required","Component","connect","values","auth","login"],"mappings":"qJAAA,2EAEIA,EAAY,CAAC,YAAa,YAAa,QAAS,OAKhDC,EAAY,CACdC,IAAKC,cACLC,MAAOC,IAAUC,UAAU,CAACD,IAAUE,KAAMF,IAAUG,SACtDC,UAAWJ,IAAUG,OACrBE,UAAWL,IAAUM,QAMnBC,EAAY,SAAmBC,GACjC,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClBN,EAAQS,EAAMT,MACdU,EAAMD,EAAMX,IACZa,EAAaC,YAA8BH,EAAOb,GAElDiB,EAAiB,aAEP,IAAVb,EACFa,EAAiB,kBACRb,IACTa,EAAiB,aAAeb,GAGlC,IAAIc,EAAUC,0BAAgBC,IAAWX,EAAWQ,GAAiBP,GACrE,OAAoBW,IAAMC,cAAcR,EAAKS,YAAS,GAAIR,EAAY,CACpEN,UAAWS,MAIfN,EAAUX,UAAYA,EACtBW,EAAUY,aA1BS,CACjBtB,IAAK,OA0BQU,O,4JCvBTa,EAAI,iKASN,OATM,oCACRC,MAAQ,GAIN,EACFC,YAAc,SAACC,GACbA,EAAEC,iBACF,EAAKhB,MAAMiB,aAAa,EAAKJ,QAC9B,EAqDA,OArDA,mCAED,WACE,OACE,kBAAC,IAAS,KAER,kBAAC,IAAG,CAACjB,UAAU,8BAQb,yBAAKsB,MAAM,aACT,yBAAKA,MAAM,OACT,yBAAKA,MAAM,4BACT,gCAAQ,gBAGL,4BAAQC,GAAG,IACP,4BAAQC,MAAM,UAAS,UACvB,4BAAQA,MAAM,KAAI,SAClB,4BAAQA,MAAM,IAAIC,UAAQ,GAAC,UAC3B,4BAAQD,MAAM,KAAI,YACZ,eAKb,yBAAKF,MAAM,QACT,kBAAC,IAAI,CAACI,OAAO,IAAIC,SAAUC,KAAKV,aAC9B,yBAAKI,MAAM,eACT,kBAAC,IAAK,CACAA,MAAM,aACNO,KAAK,QACLN,GAAG,QACHO,KAAK,QACLC,YAAY,aACZC,UAAQ,IAEhB,kBAAC,IAAM,CAACV,MAAM,sBAAsBQ,KAAK,UAAS,aAI1D,2BAAOR,MAAM,WAAU,4BAAI,iCAQpC,EA9DO,CAASV,IAAMqB,WAqEVC,uBALS,SAACjB,GACvB,MAAO,CACLkB,OAAQlB,EAAMmB,KAAKC,SAGiB,CAAEhB,kBAA3Ba,CAA2ClB","file":"static/js/488.e9a8a3d6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"reactstrap\";\r\n//import logo from \"../../../../assets/img/pages/logo.png\";\r\n//import Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\n//import { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\n//import Select from \"../../../forms/form-elements/select/Select\";\r\n//import { history } from \"../../../../history\";\r\nclass Subs extends React.Component {\r\n  state = {\r\n    // email: \"demo@demo.com\",\r\n    // password: \"demo\",\r\n    // remember: false,\r\n  };\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.loginWithJWT(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n          \r\n        <Row className=\"m-0 justify-content-center\">\r\n          {/* <Col\r\n              sm=\"8\"\r\n              xl=\"7\"\r\n              lg=\"10\"\r\n              md=\"8\"\r\n              className=\"d-flex justify-content-center\"\r\n           > */}\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 col-md-offset-3\">\r\n                <hgroup>\r\n                   \r\n                   Subscribe for\r\n                   <select id=\"\">\r\n                       <option value=\"option\">Option</option>\r\n                       <option value=\"0\">daily</option>\r\n                       <option value=\"1\" selected>weekly</option>\r\n                       <option value=\"2\">monthly</option>\r\n                    </select>\r\n                    gominSeller\r\n                    \r\n                  {/* <h1 class=\"free\">For Free</h1> */}\r\n                </hgroup>\r\n                <div class=\"well\">\r\n                  <Form action=\"/\" onSubmit={this.handleLogin}>\r\n                    <div class=\"input-group\">\r\n                      <Input \r\n                            class=\"btn btn-lg\" \r\n                            name=\"email\" \r\n                            id=\"email\" \r\n                            type=\"email\" \r\n                            placeholder=\"Your Email\" \r\n                            required\r\n                     />\r\n                    <Button class=\"btn btn-info btn-lg\" type=\"submit\">Submit</Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n            <small class=\"promise\"><em>We won't send spam.</em></small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {/* </Col> */}\r\n  </Row>\r\n</Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(Subs);\r\n\r\n//   <Container>\r\n    //     <Row className=\"m-0 justify-content-center\">\r\n    //       <Col\r\n    //           sm=\"8\"\r\n    //           xl=\"7\"\r\n    //           lg=\"10\"\r\n    //           md=\"8\"\r\n    //           className=\"d-flex justify-content-center\"\r\n    //        >\r\n    //        <Col lg=\"7\" md=\"12\" className=\"p-1\">\r\n    //         <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n    //           <CardHeader className=\"pb-1 justify-content-center\">\r\n    //             <img src={logo} class=\"img-fluid\" alt=\"logo\" />\r\n    //               {/* <img src={logo} alt=\"logo\" /> */}\r\n    //             <br/>\r\n    //           </CardHeader>\r\n              \r\n    //           <div className=\"mt-0 mb-3 \">\r\n    //             <Form action=\"/\" onSubmit={this.handleLogin}>\r\n    //               <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n    //                 <div class=\"form-group\">\r\n    //                   <Label>Gmail</Label>\r\n    //                     <Input type=\"text\"\r\n    //                            class=\"form-control mt-1 mb-3\"\r\n    //                            placeholder=\"Email\"\r\n    //                            name=\"email\"\r\n    //                            value={this.state.email}\r\n    //                            onChange={(e) => this.setState({ email: e.target.value })}\r\n    //                            required\r\n    //                            />\r\n    //                 </div>\r\n    //               </FormGroup>\r\n    //               <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n    //                 <div class=\"form-group\">\r\n    //                   <Label>Password</Label>\r\n    //                     <Input  type=\"password\"\r\n    //                             placeholder=\"Password\"\r\n    //                             value={this.state.password}\r\n    //                             onChange={(e) =>\r\n    //                             this.setState({ password: e.target.value })}\r\n    //                             required />\r\n    //                 </div>\r\n    //               </FormGroup> \r\n\r\n    //               <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n    //                 <Checkbox   color=\"primary\"\r\n    //                             icon={<Check className=\"vx-icon\" size={16} />}\r\n    //                             label=\"Remember me\"\r\n    //                             defaultChecked={false}\r\n    //                             onChange={this.handleRemember}/>\r\n\r\n    //                   <div className=\"float-right\">\r\n    //                     <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n    //                   </div>\r\n    //               </FormGroup>\r\n    //               <div className=\"d-flex justify-content-between\">\r\n    //                 {/* <Button.Ripple color=\"primary\" outline\r\n    //                       onClick={() => {history.push(\"/pages/register\");}}>\r\n    //                       Register\r\n    //                     </Button.Ripple> */}\r\n    //                 <Button.Ripple color=\"primary\" type=\"submit\">Login</Button.Ripple>\r\n    //               </div>\r\n    //             </Form>\r\n    //           </div>\r\n    //         </Card>\r\n    //       </Col>\r\n    //     </Col>\r\n    //   </Row>\r\n    // </Container>"],"sourceRoot":""}