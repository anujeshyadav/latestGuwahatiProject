{"version":3,"sources":["views/apps/freshlist/accounts/AssignTeamMember.js"],"names":["i","SelectedChild","SelectedChildForUnlink","SetAllHeadOfdepartment","AssignTeamMember","useState","DepartmentWithRole","setDepartmentWithRole","SelectedDepartment","setSelectedDepartment","SelectedDepartments","setSelectedDepartments","ShowParentList","setShowParentList","GetParentList","setGetParentList","ShowChildUnlink","setShowChildUnlink","setALLheadsofDept","ShowChildList","setShowChildList","GetChildList","setGetChildList","Show","setShow","Child","setChild","SelectedParentForHeirarchy","setSelectedParentForHeirarchy","setSelectedChildForHeirarchy","NoChild","setNoChild","setLoader","Party","setParty","setHeadOfDepartment","Parent","setParent","ParentName","setParentName","setSelectedRoleId","ChildList","setChildList","AllUsersList","setAllUsersList","UserList","userData","JSON","parse","localStorage","getItem","_Get","All_Users_List","database","then","res","console","log","User","filter","ele","created_by","catch","err","useEffect","Deptartment_with_Role","Department","handleSubmitUnLinkChild","e","preventDefault","child","map","id","_id","payload","childs","_PostSave","User_UnLink_User","swal","handleSubmit","ParentID","parentId","User_Assign_User","className","lg","md","render","history","style","cursor","color","onClick","goBack","value","onChange","target","roles","forEach","val","index","rolePosition","push","allHeadUsers","rolename","roleId","selectedDepartment","type","data-name","departmentName","selected","options","selectedIndex","getAttribute","split","name","slice","join","roleName","Number","ParentList","length","readOnly","sm","mg","placeholder","list","fiterData","firstName","includes","lastName","borderRight","responsive","key","scope","Mylist","title","position","margin","checked","indexOf","splice","handleSaveChild","handleUnLinkChild"],"mappings":"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","file":"static/js/516.5cf130a9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { _Get, _PostSave } from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  All_Users_List,\r\n  Deptartment_with_Role,\r\n  User_Assign_User,\r\n  User_UnLink_User,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\nlet SelectedChild = [];\r\nlet SelectedChildForUnlink = [];\r\nlet SetAllHeadOfdepartment = [];\r\nconst AssignTeamMember = () => {\r\n  const [DepartmentWithRole, setDepartmentWithRole] = useState([]);\r\n  const [SelectedDepartment, setSelectedDepartment] = useState([]);\r\n  const [SelectedDepartments, setSelectedDepartments] = useState([]);\r\n  const [ShowParentList, setShowParentList] = useState([]);\r\n  const [GetParentList, setGetParentList] = useState([]);\r\n  const [ShowChildUnlink, setShowChildUnlink] = useState([]);\r\n  const [ALLheadsofDept, setALLheadsofDept] = useState([]);\r\n  const [ShowChildList, setShowChildList] = useState([]);\r\n  const [GetChildList, setGetChildList] = useState([]);\r\n  const [Show, setShow] = useState(false);\r\n  const [Child, setChild] = useState(false);\r\n  const [SelectedParentForHeirarchy, setSelectedParentForHeirarchy] = useState(\r\n    {}\r\n  );\r\n  const [SelectedChildForHeirarchy, setSelectedChildForHeirarchy] = useState(\r\n    []\r\n  );\r\n  const [NoChild, setNoChild] = useState(false);\r\n  const [Loader, setLoader] = useState(false);\r\n  const [Party, setParty] = useState(false);\r\n  const [HeadOfDepartment, setHeadOfDepartment] = useState(false);\r\n  const [Parent, setParent] = useState(\"\");\r\n  const [ParentName, setParentName] = useState(\"\");\r\n  const [SelectedRoleId, setSelectedRoleId] = useState(\"\");\r\n  const [ChildList, setChildList] = useState([]);\r\n  const [AllUsersList, setAllUsersList] = useState([]);\r\n\r\n  const UserList = () => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    _Get(All_Users_List, userData?.database)\r\n      .then((res) => {\r\n        console.log(res?.User);\r\n        let WithoutCreatedBy = res?.User?.filter((ele, i) => !ele?.created_by);\r\n        setAllUsersList(res?.User);\r\n        // if (WithoutCreatedBy?.length) {\r\n        //   setAllUsersList(WithoutCreatedBy);\r\n        // }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    UserList();\r\n    _Get(Deptartment_with_Role, userData?.database)\r\n      .then((res) => {\r\n        setDepartmentWithRole(res?.Department);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleSaveParent = (parent) => {\r\n    setSelectedParentForHeirarchy(parent);\r\n  };\r\n  const handleUnLinkChild = (ele, e) => {\r\n    if (e.target.checked) {\r\n      SelectedChildForUnlink.push(ele);\r\n      setShowChildUnlink(SelectedChildForUnlink);\r\n    } else {\r\n      let index = SelectedChildForUnlink?.indexOf(ele);\r\n      SelectedChildForUnlink.splice(index, 1);\r\n      if (SelectedChildForUnlink?.length > 0) {\r\n        setShowChildUnlink(SelectedChildForUnlink);\r\n      } else {\r\n        setShowChildUnlink([]);\r\n      }\r\n    }\r\n  };\r\n  const handleSaveChild = (child, e) => {\r\n    if (e.target.checked) {\r\n      SelectedChild.push(child);\r\n\r\n      setSelectedChildForHeirarchy(child);\r\n    } else {\r\n      let index = SelectedChild?.indexOf(child);\r\n      setSelectedChildForHeirarchy(SelectedChild.splice(index, 1));\r\n    }\r\n  };\r\n\r\n  const handleSubmitUnLinkChild = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let child = SelectedChildForUnlink?.map((ele, i) => {\r\n      return {\r\n        id: ele?._id,\r\n      };\r\n    });\r\n    let payload = {\r\n      childs: child,\r\n    };\r\n\r\n    await _PostSave(User_UnLink_User, payload)\r\n      .then((res) => {\r\n        UserList();\r\n        setSelectedDepartment([]);\r\n        setShowParentList([]);\r\n        setParent(\"\");\r\n        setShowChildList([]);\r\n        setChild(false);\r\n        setChildList([]);\r\n        SelectedChildForUnlink = [];\r\n        swal(\"UnLink Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // setLoader(true);\r\n    let ParentID = SelectedParentForHeirarchy?._id;\r\n    let child = SelectedChild?.map((ele, i) => {\r\n      return {\r\n        id: ele?._id,\r\n      };\r\n    });\r\n    let payload = {\r\n      parentId: ParentID,\r\n      childs: child,\r\n    };\r\n\r\n    await _PostSave(User_Assign_User, payload)\r\n      .then((res) => {\r\n        setLoader(false);\r\n        // console.log(res);\r\n\r\n        UserList();\r\n        setSelectedDepartment([]);\r\n        setShowParentList([]);\r\n        setParent(\"\");\r\n        setShowChildList([]);\r\n        setChild(false);\r\n        setChildList([]);\r\n        SelectedChild = [];\r\n        swal(\"Assigned Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        swal(\"Something Went Wrong\");\r\n        console.log(err);\r\n      });\r\n  };\r\n  console.log(ShowChildList);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\" m-2\">\r\n            <Row className=\"\">\r\n              <Col>\r\n                <h1>Assign Team To Parent Node</h1>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\">\r\n                <div className=\"float-right\">\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        style={{ cursor: \"pointer\" }}\r\n                        className=\"float-right mr-1\"\r\n                        color=\"primary\"\r\n                        onClick={() => history.goBack()}>\r\n                        {\" \"}\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\" m-2\">\r\n            <Row className=\"\">\r\n              <Col lg=\"3\" md=\"3\">\r\n                <Label>Select Department</Label>\r\n                <CustomInput\r\n                  value={SelectedDepartments}\r\n                  onChange={(e) => {\r\n                    setChild(false);\r\n\r\n                    setSelectedDepartments(e.target.value);\r\n                    if (e.target.value == 0) {\r\n                      setShow(false);\r\n                    }\r\n                    e.target.value ? setShow(true) : setShow(false);\r\n                    if (e.target.value == 0) {\r\n                      setShow(false);\r\n                    }\r\n                    if (e.target.value == \"All_Dept_Heads\") {\r\n                      SetAllHeadOfdepartment = [];\r\n                      setShow(false);\r\n\r\n                      DepartmentWithRole?.map((ele, i) => {\r\n                        ele?.roles?.forEach((val, index) => {\r\n                          if (val?.rolePosition == 1) {\r\n                            SetAllHeadOfdepartment?.push(val);\r\n                          }\r\n                        });\r\n                      });\r\n                      setALLheadsofDept(SetAllHeadOfdepartment);\r\n                      let allHeadUsers = [];\r\n                      SetAllHeadOfdepartment?.map((ele, i) => {\r\n                        AllUsersList?.forEach((val, i) => {\r\n                          if (val?.rolename?._id == ele?.roleId?._id) {\r\n                            allHeadUsers.push(val);\r\n                          }\r\n                        });\r\n                      });\r\n\r\n                      setShowChildList(allHeadUsers);\r\n                      setGetChildList(allHeadUsers);\r\n                      // if (allHeadUsers?.length) {\r\n                      //   setChild(true);\r\n                      // }\r\n                      let userData = JSON.parse(\r\n                        localStorage.getItem(\"userData\")\r\n                      );\r\n\r\n                      let arr = [userData];\r\n                      setShowParentList(arr);\r\n                      // setChildList(SelectedChild);\r\n                    } else {\r\n                      let selectedDepartment = DepartmentWithRole?.filter(\r\n                        (ele, i) => ele?._id == e.target.value\r\n                      );\r\n                      setSelectedDepartment(selectedDepartment[0]?.roles);\r\n                    }\r\n                  }}\r\n                  type=\"select\">\r\n                  <option value=\"0\">--Select Department--</option>\r\n                  <option value=\"All_Dept_Heads\">All Department Head</option>\r\n                  {DepartmentWithRole &&\r\n                    DepartmentWithRole?.map((ele, i) => (\r\n                      <option\r\n                        data-name={`${ele?._id} ${ele?.database}`}\r\n                        value={ele?._id}>\r\n                        {ele?.departmentName?.departmentName}\r\n                      </option>\r\n                    ))}\r\n                </CustomInput>\r\n              </Col>\r\n              {Show && Show && (\r\n                <Col lg=\"3\" md=\"3\">\r\n                  <Label>Select Parent Role</Label>\r\n                  <CustomInput\r\n                    value={Parent}\r\n                    onChange={(e) => {\r\n                      if (e.target.value == \"NA\") {\r\n                        setChild(false);\r\n                        setParent(e.target.value);\r\n                      } else {\r\n                        const selected = e.target.options[\r\n                          e.target.selectedIndex\r\n                        ]\r\n                          .getAttribute(\"data-name\")\r\n                          ?.split(\" \");\r\n\r\n                        if (selected[0] === 1) {\r\n                          // pass created by\r\n                          setHeadOfDepartment(true);\r\n                        }\r\n                        debugger;\r\n                        const name = selected.slice(2).join(\" \");\r\n                        let child = [];\r\n                        if (name == \"Sales Person\") {\r\n                          child = AllUsersList?.filter(\r\n                            (ele) => ele?.rolename?.roleName == \"Customer\"\r\n                          );\r\n                        } else {\r\n                          child = SelectedDepartment?.filter(\r\n                            (ele) =>\r\n                              ele?.rolePosition == Number(selected[0]) + 1\r\n                          );\r\n                        }\r\n\r\n                        let ParentList = AllUsersList?.filter(\r\n                          (ele) => ele?.rolename?._id == selected[1]\r\n                        );\r\n                        setShowParentList(ParentList);\r\n                        setGetParentList(ParentList);\r\n                        setParent(e.target.value);\r\n                        setParentName(name);\r\n                        setSelectedRoleId(selected[1]);\r\n\r\n                        if (child?.length) {\r\n                          let ChildList = [];\r\n                          if (name == \"Sales Person\") {\r\n                            setShowChildList(child);\r\n                            setGetChildList(child);\r\n                            setParty(true);\r\n                            // setShowChildList(ChildList);\r\n                            setChild(true);\r\n                            setChildList(child);\r\n                          } else {\r\n                            ChildList = AllUsersList?.filter(\r\n                              (ele) =>\r\n                                ele?.rolename?._id == child[0]?.roleId?._id\r\n                            );\r\n                            setShowChildList(ChildList);\r\n                            setGetChildList(ChildList);\r\n                            setChild(true);\r\n                            setParty(false);\r\n\r\n                            setChildList(child);\r\n                          }\r\n                        } else {\r\n                          setChildList([]);\r\n                          setShowChildList([]);\r\n                          setNoChild(true);\r\n                          setChild(false);\r\n                        }\r\n                      }\r\n                    }}\r\n                    type=\"select\">\r\n                    <option value=\"NA\">--Select Role--</option>\r\n                    {SelectedDepartment &&\r\n                      SelectedDepartment?.map((ele, i) => (\r\n                        <option\r\n                          data-name={`${ele?.rolePosition} ${ele?.roleId?._id} ${ele?.roleName}`}\r\n                          value={ele?._id}>\r\n                          {ele?.roleName} (Position-\r\n                          {ele?.rolePosition})\r\n                        </option>\r\n                      ))}\r\n                  </CustomInput>\r\n                </Col>\r\n              )}\r\n              {Child && Child ? (\r\n                <>\r\n                  <Col lg=\"3\" md=\"3\">\r\n                    <Label>Next Child</Label>\r\n                    <Input\r\n                      readOnly\r\n                      type=\"text\"\r\n                      value={ChildList[0]?.roleName && ChildList[0]?.roleName}\r\n                    />\r\n                  </Col>\r\n                  {SelectedChild && SelectedChild?.length > 0 && (\r\n                    <Col lg=\"3\" md=\"3\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                        className=\"mt-2\">\r\n                        Submit\r\n                      </Button>\r\n                    </Col>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {NoChild && NoChild && (\r\n                    <Col lg=\"3\" md=\"3\">\r\n                      <Label style={{ color: \"red\" }}>\r\n                        No Next Child Found\r\n                      </Label>\r\n                      <Input readOnly type=\"text\" value=\"No Child Found\" />\r\n                    </Col>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {ShowChildUnlink && ShowChildUnlink?.length > 0 && (\r\n                <Col lg=\"3\" md=\"3\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={(e) => handleSubmitUnLinkChild(e)}\r\n                    className=\"mt-2\">\r\n                    UnLink\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </div>\r\n          <hr />\r\n          <div className=\"p-2\">\r\n            <Row>\r\n              {ShowParentList && ShowParentList?.length > 0 && (\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                  <Row>\r\n                    <Col lg=\"4\" mg=\"4\" sm=\"6\">\r\n                      <h5>\r\n                        <strong>\r\n                          {ParentName && ParentName ? (\r\n                            <> {ParentName} (Parent)</>\r\n                          ) : (\r\n                            \"Head\"\r\n                          )}{\" \"}\r\n                          List\r\n                        </strong>\r\n                      </h5>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    <Col lg=\"4\" mg=\"4\" sm=\"6\">\r\n                      <div className=\"mr-2 pr-1\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"\"\r\n                          name=\"search\"\r\n                          placeholder=\"Search Here...\"\r\n                          onChange={(e) => {\r\n                            let list = [...ShowParentList];\r\n                            let fiterData = list?.filter(\r\n                              (ele) =>\r\n                                ele?.firstName?.includes(e.target.value) ||\r\n                                ele?.lastName?.includes(e.target.value)\r\n                            );\r\n\r\n                            if (e.target.value) {\r\n                              if (fiterData?.length) {\r\n                                setShowParentList(fiterData);\r\n                              }\r\n                            } else {\r\n                              let list = [...GetParentList];\r\n                              setShowParentList(list);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <div\r\n                    className=\"p-1\"\r\n                    style={{\r\n                      borderRight: \"1px solid black\",\r\n                    }}>\r\n                    <Table\r\n                      className=\"table_heading\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>#</th>\r\n                          <th>Assigned To</th>\r\n                          <th>First Name</th>\r\n                          <th>Last Name</th>\r\n                          {/* <th>Mobile Number</th>\r\n                          <th>email</th>\r\n                          <th>State</th>\r\n                          <th>City</th> */}\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ShowParentList && ShowParentList?.length ? (\r\n                          <>\r\n                            {ShowParentList &&\r\n                              ShowParentList?.map((ele, i) => {\r\n                                return (\r\n                                  <tr key={ele?._id}>\r\n                                    <th scope=\"row\">\r\n                                      <input\r\n                                        name=\"Parent\"\r\n                                        value=\"checkbox1\"\r\n                                        type=\"radio\"\r\n                                        onClick={(e) => handleSaveParent(ele)}\r\n                                      />\r\n                                    </th>\r\n                                    <td>\r\n                                      {ele?.created_by?.firstName &&\r\n                                        ele?.created_by?.firstName && (\r\n                                          <Badge color=\"primary\">\r\n                                            <strong>\r\n                                              {ele?.created_by?.firstName &&\r\n                                                ele?.created_by?.firstName}\r\n                                            </strong>\r\n                                          </Badge>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>{ele?.firstName}</td>\r\n                                    <td>{ele?.lastName}</td>\r\n                                    {/* <td>{ele?.mobileNumber}</td>\r\n                                    <td>{ele?.email}</td>\r\n                                    <td>{ele?.State}</td>\r\n                                    <td>{ele?.City}</td> */}\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                          </>\r\n                        ) : null}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Col>\r\n              )}\r\n\r\n              {ShowChildList && ShowChildList?.length > 0 && (\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\">\r\n                  <Row>\r\n                    <Col lg=\"4\" mg=\"4\" sm=\"6\">\r\n                      <h5>\r\n                        <strong>\r\n                          {ChildList[0]?.roleName && ChildList[0]?.roleName ? (\r\n                            <>\r\n                              {\" \"}\r\n                              {ChildList[0]?.roleName && ChildList[0]?.roleName}\r\n                              (child)\r\n                            </>\r\n                          ) : (\r\n                            <>{Party && Party ? \"Party\" : \"All Dept Head\"}</>\r\n                          )}{\" \"}\r\n                          Users List\r\n                        </strong>\r\n                      </h5>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    <Col lg=\"4\" mg=\"4\" sm=\"6\">\r\n                      <div className=\"mr-2 pr-1\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"\"\r\n                          name=\"search\"\r\n                          placeholder=\"Search Here...\"\r\n                          onChange={(e) => {\r\n                            let Mylist = [...ShowChildList];\r\n\r\n                            let fiterData = Mylist?.filter(\r\n                              (ele) =>\r\n                                ele?.firstName?.includes(e.target.value) ||\r\n                                ele?.lastName?.includes(e.target.value)\r\n                            );\r\n\r\n                            if (e.target.value) {\r\n                              if (fiterData?.length) {\r\n                                setShowChildList(fiterData);\r\n                              }\r\n                            } else {\r\n                              let list = [...GetChildList];\r\n                              setShowChildList(list);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <div className=\"p-1\">\r\n                    <Table\r\n                      className=\"table_heading\"\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>#</th>\r\n                          <th>Assigned To</th>\r\n                          <th>First Name</th>\r\n\r\n                          <th>Last Name</th>\r\n                          <th>UnLink Child</th>\r\n                          {/* <th>Mobile Number</th>\r\n                          <th>email</th>\r\n                          <th>State</th>\r\n                          <th>City</th> */}\r\n                        </tr>\r\n                      </thead>\r\n\r\n                      <tbody>\r\n                        {ShowChildList &&\r\n                          ShowChildList?.map((ele, i) => {\r\n                            {\r\n                              /* console.log(ele); */\r\n                            }\r\n                            return (\r\n                              <tr key={ele?._id}>\r\n                                <th scope=\"row\">\r\n                                  {\" \"}\r\n                                  {ele?.created_by?.firstName &&\r\n                                  ele?.created_by?.firstName ? null : (\r\n                                    <>\r\n                                      <Input\r\n                                        title=\"Link to Parent\"\r\n                                        style={{ position: \"unset\", margin: 0 }}\r\n                                        value=\"checkbox1\"\r\n                                        type=\"checkbox\"\r\n                                        onClick={(e) => handleSaveChild(ele, e)}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                </th>\r\n                                <td>\r\n                                  {!!ele?.created_by?.firstName &&\r\n                                  ele?.created_by?.firstName ? (\r\n                                    <Badge color=\"danger\">\r\n                                      <strong>\r\n                                        {ele?.created_by?.firstName &&\r\n                                          ele?.created_by?.firstName}\r\n                                      </strong>\r\n                                    </Badge>\r\n                                  ) : (\r\n                                    <>\r\n                                      <Badge color=\"primary\">\r\n                                        <strong>Not Assigned</strong>\r\n                                      </Badge>\r\n                                    </>\r\n                                  )}\r\n                                </td>\r\n                                <td>{ele?.firstName}</td>\r\n                                <td>{ele?.lastName}</td>\r\n                                <td>\r\n                                  {\" \"}\r\n                                  {ele?.created_by?.firstName &&\r\n                                  ele?.created_by?.firstName ? (\r\n                                    <Input\r\n                                      title=\"UnLink to Parent\"\r\n                                      style={{ position: \"unset\", margin: 0 }}\r\n                                      value=\"checkbox1\"\r\n                                      type=\"checkbox\"\r\n                                      onClick={(e) => handleUnLinkChild(ele, e)}\r\n                                    />\r\n                                  ) : null}\r\n                                </td>\r\n                                {/* <td>{ele?.mobileNumber}</td>\r\n                                <td>{ele?.email}</td>\r\n                                <td>{ele?.State}</td>\r\n                                <td>{ele?.City}</td> */}\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignTeamMember;\r\n"],"sourceRoot":""}