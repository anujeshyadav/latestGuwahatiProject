{"version":3,"sources":["views/apps/freshlist/accounts/AssignToSuperAdmin.js"],"names":["i","AssignToSuperAdmin","useState","selectedDepartment","setSelectedDepartment","selectedRoles","setSelectedRoles","DepartMentList","setDepartMentList","RoleList","setRoleList","useEffect","userData","JSON","parse","localStorage","getItem","URL","List_Department","database","_GetList","then","res","console","log","Department","catch","err","RoleLists","Get_RoleList","_id","WithoutAssign","Role","filter","ele","assign","position","Position","rolename","handleAssignRoles","userinfo","MainData","map","roleName","roleId","rolePosition","createdPosition","payload","created_by","departmentName","roles","_PostSave","Save_Assigned_Role","swal","className","lg","render","history","style","cursor","color","onClick","goBack","sm","md","id","onChange","event","department","target","value","key","role","required","type","marginRight","height","width","includes","splice","indexOf","push","handleRoleChange","fontSize","right","e","data","AllSelected","Number","handleAddRanking","placeholder","disabled","length"],"mappings":"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","file":"static/js/517.7848ecfa.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Input, Label, Row } from \"reactstrap\";\r\nimport {\r\n  Get_RoleList,\r\n  _Get,\r\n  _GetList,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  List_Department,\r\n  Save_Assigned_Role,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst AssignToSuperAdmin = () => {\r\n  const [selectedDepartment, setSelectedDepartment] = useState(\"\");\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n  const [DepartMentList, setDepartMentList] = useState([]);\r\n  const [RoleList, setRoleList] = useState([]);\r\n\r\n  const departmentList = [\"HR\", \"Finance\", \"IT\"]; // Replace with your actual department list\r\n  //   const roleList = [\"Manager\", \"Developer\", \"Accountant\"]; // Replace with your actual role list\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    const department = event.target.value;\r\n    setSelectedDepartment(department);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URL = `${List_Department}/${userData?.database}`;\r\n    _GetList(URL)\r\n      .then((res) => {\r\n        debugger;\r\n        console.log(res?.Department);\r\n        setDepartMentList(res?.Department);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    RoleLists();\r\n  }, []);\r\n\r\n  const RoleLists = () => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    Get_RoleList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        let WithoutAssign = res?.Role?.filter(\r\n          (ele) => ele?.assign == 0 && ele?.position !== 1\r\n        );\r\n        let Position = userData?.rolename?.position;\r\n        let ShowList = res?.Role?.filter((ele, i) => ele?.position > Position);\r\n\r\n        setRoleList(WithoutAssign);\r\n        // setRoleList(res?.Role);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleRoleChange = (role) => {\r\n    const roles = [...selectedRoles];\r\n\r\n    if (roles?.includes(role)) {\r\n      // Remove role if it's already selected\r\n      roles?.splice(roles.indexOf(role), 1);\r\n    } else {\r\n      // Add role if it's not selected\r\n      roles.push(role);\r\n    }\r\n\r\n    setSelectedRoles(roles);\r\n  };\r\n\r\n  const handleAssignRoles = async () => {\r\n    // Implement your logic to assign roles to the selected department\r\n    let userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let MainData = selectedRoles?.map((ele, i) => {\r\n      return {\r\n        roleName: ele?.roleName,\r\n        database: ele?.database,\r\n        roleId: ele?._id,\r\n        rolePosition: ele?.createdPosition,\r\n      };\r\n    });\r\n    let payload = {\r\n      created_by: userinfo?._id,\r\n      database: userinfo?.database,\r\n      departmentName: selectedDepartment,\r\n      roles: MainData,\r\n    };\r\n\r\n    await _PostSave(Save_Assigned_Role, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"Roles Assigned Successfully\");\r\n        RoleLists();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something went wrong\");\r\n      });\r\n    // You can send this data to your server or manage it in your state\r\n  };\r\n  const handleAddRanking = (e, data, i) => {\r\n    let AllSelected = [...selectedRoles];\r\n    // console.log(e.target.value);\r\n    // console.log(data);\r\n    // console.log(i);\r\n    let index = selectedRoles.indexOf(data);\r\n    AllSelected[index][\"createdPosition\"] = Number(e.target.value);\r\n    setSelectedRoles(AllSelected);\r\n    debugger;\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"card p-3\">\r\n        <Row>\r\n          <Col></Col>\r\n          <Col lg=\"2\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"float-right mr-1\"\r\n                  color=\"primary\"\r\n                  onClick={() => history.goBack()}>\r\n                  {\" \"}\r\n                  Back\r\n                  {/* <FaPlus size={15} /> Create User */}\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3\">\r\n            <strong>Assign Roles to Departments</strong>\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          <Col lg=\"4\" sm=\"6\" md=\"4\">\r\n            <Label>Select Department:</Label>\r\n            <select\r\n              id=\"departments\"\r\n              className=\"form-control\"\r\n              onChange={handleDepartmentChange}\r\n              value={selectedDepartment}>\r\n              <option value=\"\">Select Department</option>\r\n              {DepartMentList &&\r\n                DepartMentList?.map((department, i) => (\r\n                  <option key={department?._id} value={department?._id}>\r\n                    {department?.departmentName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3\">\r\n            <strong>Choose Roles</strong>\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          {RoleList.map((role, i) => (\r\n            <Col lg=\"6\" sm=\"12\" md=\"6\">\r\n              <div key={role?._id} className=\"form-label-group d-flex\">\r\n                <input\r\n                  className=\"mt-1\"\r\n                  required\r\n                  type=\"checkbox\"\r\n                  style={{ marginRight: \"3px\", height: \"22px\", width: \"22px\" }}\r\n                  id={role}\r\n                  value={role}\r\n                  //   checked={selectedRoles?.includes(role?._id)}\r\n                  onChange={() => handleRoleChange(role)}\r\n                />\r\n                <span\r\n                  className=\"mb-1 ml-1\"\r\n                  style={{ marginRight: \"20px\", fontSize: \"25px\" }}>\r\n                  {role?.roleName}\r\n                </span>\r\n                <span\r\n                  className=\"input\"\r\n                  style={{ position: \"absolute\", right: 200 }}>\r\n                  <Input\r\n                    onChange={(e) => handleAddRanking(e, role, i)}\r\n                    placeholder=\"Enter Position of Role\"\r\n                    type=\"number\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleAssignRoles}\r\n            disabled={!selectedDepartment || selectedRoles.length === 0}>\r\n            Assign Roles\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignToSuperAdmin;\r\n"],"sourceRoot":""}