{"version":3,"sources":["views/apps/freshlist/accounts/CreateCustomerGroup.js"],"names":["i","CreateCustomerGroup","args","useState","UserInfo","setUserInfo","selectedData","setData","Type","setType","Param","useParams","useEffect","userInfo","JSON","parse","localStorage","getItem","id","_Get","View_CustomerGroup_by_id","then","res","val","CustomerGroup","discountPercentage","discount","Grade","grade","GroupName","groupName","catch","err","console","log","submitHandler","e","preventDefault","payload","Number","created_by","_id","database","_PostSave","Create_CustomerGroup","swal","_Put","Update_CustomerGroup_by_id","onChange","target","name","value","length","slice","className","render","history","style","cursor","color","onClick","goBack","onSubmit","lg","md","sm","required","type","placeholder","min","max","Ripple"],"mappings":"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","file":"static/js/518.52b85261.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  CreateAccountList,\r\n  CreatePartyList,\r\n  Create_Sales_personList,\r\n  Create_Targetsave,\r\n  _PostSave,\r\n  _Get,\r\n  _Put,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, useParams } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  Create_CustomerGroup,\r\n  Update_CustomerGroup_by_id,\r\n  View_CustomerGroup_by_id,\r\n} from \"../../../../ApiEndPoint/Api\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst CreateCustomerGroup = (args) => {\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [selectedData, setData] = useState({});\r\n  const [Type, setType] = useState(\"\");\r\n  let Param = useParams();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (Param?.id == 0) {\r\n      setType(\"Create\");\r\n    } else {\r\n      setType(\"Edit\");\r\n\r\n      _Get(View_CustomerGroup_by_id, Param?.id)\r\n        .then((res) => {\r\n          //   console.log(res?.CustomerGroup);\r\n\r\n          let val = res?.CustomerGroup;\r\n          setData({\r\n            discountPercentage: val?.discount,\r\n            Grade: val?.grade,\r\n            GroupName: val?.groupName,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    let payload = {\r\n      groupName: selectedData?.GroupName,\r\n      grade: selectedData?.Grade,\r\n      discount: Number(selectedData?.discountPercentage),\r\n      created_by: UserInfo?._id,\r\n      database: UserInfo?.database,\r\n    };\r\n    if (Param?.id == 0) {\r\n      await _PostSave(Create_CustomerGroup, payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"Group Created Successfully\");\r\n          setData({});\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      await _Put(Update_CustomerGroup_by_id, Param?.id, payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"Group Updated Successfully\");\r\n          setData({});\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Something Went Wrong\");\r\n        });\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (name == \"discountPercentage\") {\r\n      if (value.length < 3) {\r\n        setData({\r\n          ...selectedData,\r\n          [name]: value,\r\n        });\r\n      } else {\r\n        setData({\r\n          ...selectedData,\r\n          [name]: value?.slice(0, 2),\r\n        });\r\n        swal(\"Error\", \"Cannot Enter Discount More than two digit\");\r\n      }\r\n    } else {\r\n      setData({\r\n        ...selectedData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(selectedData);\r\n  }, [selectedData]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">{Type && Type} Customer Group</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.goBack()}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Group Name</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"GroupName\"\r\n                      placeholder=\"Enter Group Name\"\r\n                      value={selectedData?.GroupName}\r\n                      onChange={onChange}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Grade</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"Grade\"\r\n                      placeholder=\"Enter Grade\"\r\n                      value={selectedData?.Grade}\r\n                      onChange={onChange}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Discount(%)</Label>\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Enter Discount Percentage\"\r\n                      type=\"number\"\r\n                      min={0}\r\n                      max={50}\r\n                      name=\"discountPercentage\"\r\n                      value={selectedData?.discountPercentage}\r\n                      onChange={onChange}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              {/* <Row className=\"mt-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div className=\"form-label-group\" onChange={onChange}>\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              {/* <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateCustomerGroup;\r\n"],"sourceRoot":""}