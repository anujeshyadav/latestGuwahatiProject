{"version":3,"sources":["views/apps/freshlist/attribute/ProductAttributeList.js"],"names":["ProductAttributeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","customerId","className","size","color","onClick","history","push","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","console","log","sm","style","marginRight","render","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/523.077dfe81.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nclass ProductAttributeList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Attribute Name\",\r\n        field: \"customerId\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.customerId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                                className=\"mr-50\"\r\n                                size=\"25px\"\r\n                                color=\"green\"\r\n                                onClick={() =>\r\n                                    history.push(`/app/customer/viewCustomer/${params.data._id}`)}\r\n                            /> */}\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                onClick={() => history.push(\"/app/customer/editCustomer\")}\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  // async componentDidMount() {\r\n  //     await axios.get(`http://35.154.86.59/api/user/view_onecust/${id}`)\r\n  //         .then((response) => {\r\n  //             let rowData = response.data.data;\r\n  //             console.log(rowData);\r\n  //             this.setState({ rowData });\r\n  //         });\r\n  // }\r\n  // async componentDidMount() {\r\n  //     await axios\r\n  //         .get(\"http://35.154.86.59/api/user/allcustomer\")\r\n  //         .then((response) => {\r\n  //             let rowData = response.data.data;\r\n  //             console.log(rowData);\r\n  //             this.setState({ rowData });\r\n  //         });\r\n  // }\r\n  // // async componentDidMount() {\r\n  // //   let { id } = this.props.match.params;\r\n  // //   await axios\r\n  // //     .get(`/http://35.154.86.59/api/user/allcustomer/${id}`, {\r\n  // //       headers: {\r\n  // //         \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n  // //       },\r\n  // //     })}\r\n  // async runthisfunction(id) {\r\n  //     console.log(id);\r\n  //     await axios.get(`http://35.154.86.59/api/user/delcustomer/${id}`).then(\r\n  //         (response) => {\r\n  //             console.log(response);\r\n  //         },\r\n  //         (error) => {\r\n  //             console.log(error);\r\n  //         }\r\n  //     );\r\n  // }\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Product Attribute List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    style={{ marginRight: \"-22rem\" }}\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        \"/app/freshlist/attribute/ProductAttributeList\"\r\n                      )\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\"btn btn-primary float-right\"\r\n                        onClick={() =>\r\n                          history.push(\r\n                            \"/app/freshlist/attribute/addProductAttribute\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Add New\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={e =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {context => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default ProductAttributeList;\r\n"],"sourceRoot":""}