{"version":3,"sources":["views/apps/freshlist/cart/BudgetAssignment.js"],"names":["BudgetAssignment","state","rowData","RoleDefine","TopupAmount","topupdata","RequestedTopup","modalView","IsTopup","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","onClick","e","handleTopUp","data","className","color","size","full_name","topup_budget","created_date","preventDefault","setState","handleTopup","HandleSubmitTopUpRequest","pageparmission","JSON","parse","localStorage","getItem","FormData","append","Userinfo","id","axiosConfig","post","then","res","console","log","swal","catch","err","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleTopupAssign","user_id","user_request_id","componentDidMount","this","role","newparmisson","find","value","pageName","Viewpermisson","permission","includes","Createpermisson","Editpermisson","Deletepermisson","formdata","sm","lg","md","type","placeholder","onChange","target","tag","length","right","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/531.374ea3f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n// import { components } from \"react-select\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass BudgetAssignment extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    RoleDefine: \"\",\r\n    TopupAmount: \"\",\r\n    topupdata: \"\",\r\n    RequestedTopup: \"\",\r\n    modalView: false,\r\n    IsTopup: false,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        // headerName: `${\r\n        //   this.state.RoleDefine === \"Super Admin\" ? \"TopUp\" : \"Amount\"\r\n        // }`,\r\n        headerName: \"TopUp\",\r\n        field: \"username\",\r\n        filter: true,\r\n        width: \"200\",\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              {this.state.RoleDefine === \"Super Admin\" && (\r\n                <>\r\n                  <Button\r\n                    onClick={(e) => this.handleTopUp(e, params.data)}\r\n                    className=\"btn \"\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Top Up\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"full_name\",\r\n        field: \"full_name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.full_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Requested \",\r\n        field: \"topup_budget\",\r\n        filter: true,\r\n        width: 230,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.topup_budget}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"created_date\",\r\n        field: \"created_date\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.created_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"requiestedTopup\",\r\n      //   field: \"requiestedTopup\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.requiestedTopup}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"How Many Remaining\",\r\n      //   field: \"remaining\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: params => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.remaining}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Block\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Unblock\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Actions\",\r\n      //   field: \"sortorder\",\r\n      //   field: \"transactions\",\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Eye\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"green\"\r\n      //           onClick={() =>\r\n      //             history.push(\r\n      //               `/app/freshlist/subscriber/viewSubscriber/${params.data._id}`\r\n      //             )\r\n      //           }\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  handleTopUp = (e, params) => {\r\n    e.preventDefault();\r\n    this.setState({ modalView: true });\r\n    this.setState({ topupdata: params });\r\n    this.setState({ RequestedTopup: params?.topup_budget });\r\n  };\r\n  componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    this.setState({ RoleDefine: pageparmission.Userinfo.role });\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Budget Assignment\"\r\n    );\r\n    // this.setState({ rowData: AssignList });\r\n    // console.log(AssignList);\r\n    // console.log(newparmisson);\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n    // console.log(newparmisson?.permission.includes(\"View\"));\r\n    // console.log(newparmisson?.permission.includes(\"Create\"));\r\n    // console.log(newparmisson?.permission.includes(\"Edit\"));\r\n    // console.log(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    axiosConfig\r\n      .post(`/getAllUsersTopupBuget`, formdata)\r\n      .then((res) => {\r\n        console.log(res.data?.data);\r\n        this.setState({ rowData: res.data.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  handleTopup = () => {\r\n    this.setState({ IsTopup: true });\r\n  };\r\n\r\n  HandleSubmitTopUpRequest = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const data = new FormData();\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"topup_budget\", this.state.TopupAmount);\r\n    if (this.state.TopupAmount > 0) {\r\n      axiosConfig\r\n        .post(`/addtopuptouser`, data)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          swal(\"Success\", \"TopUp Request Created Successfully\");\r\n          this.setState({ TopupAmount: \"\" });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Something went Wrong\");\r\n        });\r\n    } else {\r\n      swal(\"Something is Missing.Enter details before Submit\");\r\n    }\r\n  };\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleTopupAssign = (e) => {\r\n    e.preventDefault();\r\n\r\n    let data = new FormData();\r\n    data.append(\"topup_id\", this.state.topupdata?.id);\r\n    data.append(\"user_request_id\", this.state.topupdata?.user_id);\r\n    data.append(\"super_user_id\", this.state.topupdata?.user_request_id);\r\n    data.append(\"topup_budget\", this.state.RequestedTopup);\r\n\r\n    axiosConfig\r\n      .post(`/updatetopupuser`, data)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ modalView: false });\r\n\r\n        swal(\"Success\", \"TopUp Added Successfully\");\r\n        this.componentDidMount();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n                <h1\r\n                // sm=\"6\"\r\n                // className=\"float-left\"\r\n                >\r\n                  Budget Assignement\r\n                </h1>\r\n              </Col>\r\n              {/* <Col>\r\n                  <h5 sm=\"4\" className=\"\">\r\n                    Assigned Budget-5000\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <h5 sm=\"4\" className=\"\">\r\n                    Remaining Budget-5000\r\n                  </h5>\r\n                </Col> */}\r\n              {this.state.RoleDefine === \"User\" ? (\r\n                <>\r\n                  {this.state.IsTopup == false ? (\r\n                    <>\r\n                      <Col className=\"d-flex justify-content-end\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"float-right\"\r\n                          onClick={this.handleTopup}\r\n                        >\r\n                          TopUp Request\r\n                        </Button>\r\n                      </Col>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Col>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"number\"\r\n                          value={this.state.TopupAmount}\r\n                          placeholder=\"Enter Top up\"\r\n                          onChange={(e) =>\r\n                            this.setState({ TopupAmount: e.target.value })\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          className=\"float-right\"\r\n                          color=\"primary\"\r\n                          onClick={this.HandleSubmitTopUpRequest}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Col>\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : null}\r\n            </Row>\r\n            {/* <Row className=\"m-2\">\r\n              <Col>\r\n                <input className=\"form-control \" type=\"number\" />\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  // className=\"float-right\"\r\n                  onClick={this.handSubmit}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row> */}\r\n\r\n            {/* <Col>\r\n                  <input className=\"form-control mt-1\" type=\"number\" />\r\n                </Col>\r\n                <Col>\r\n                  <Button color=\"primary\" className=\"mt-1\">\r\n                    Assign Budget\r\n                  </Button>\r\n                </Col> */}\r\n            {/* <Col>\r\n                  <input className=\"form-control mt-1\" type=\"number\" />\r\n                </Col>\r\n                <Col>\r\n                  <Button color=\"primary\" className=\"mt-1\">\r\n                    TOPUP Budget\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <label className=\"selectClient\">Select a Client</label>\r\n\r\n                  <select className=\"form-control\" name=\"cars\" id=\"cars\">\r\n                    <option value=\"volvo\">Volvo</option>\r\n                    <option value=\"saab\">Saab</option>\r\n                    <option value=\"mercedes\">Mercedes</option>\r\n                    <option value=\"audi\">Audi</option>\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <Button color=\"primary\" className=\"mt-1\">\r\n                    Submit\r\n                  </Button>\r\n                </Col> */}\r\n\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      {this.state.modalView && (\r\n                        <>\r\n                          <div className=\"table-input mr-1\">\r\n                            {/* <label className=\"\">\r\n                              User:\r\n                              {this.state.topupdata &&\r\n                                this.state.topupdata?.full_name}\r\n                            </label> */}\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              placeholder=\"Enter Topup Amount\"\r\n                              onChange={(e) =>\r\n                                this.setState({\r\n                                  RequestedTopup: e.target.value,\r\n                                })\r\n                              }\r\n                              value={this.state.RequestedTopup}\r\n                            />\r\n                          </div>\r\n                          <div className=\"table-input mr-1\">\r\n                            <Button\r\n                              onClick={(e) => this.handleTopupAssign(e)}\r\n                              color=\"primary\"\r\n                            >\r\n                              Topup Now\r\n                            </Button>\r\n                          </div>\r\n                          <div className=\"table-input mr-1\">\r\n                            <Button\r\n                              className=\"float-right\"\r\n                              color=\"danger\"\r\n                              onClick={(e) => {\r\n                                this.setState({ modalView: false });\r\n                                e.preventDefault();\r\n                              }}\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default BudgetAssignment;\r\n"],"sourceRoot":""}