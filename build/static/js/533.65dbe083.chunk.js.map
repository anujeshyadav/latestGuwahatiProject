{"version":3,"sources":["views/apps/freshlist/cart/DateWiseReport.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js"],"names":["selectItem1","DateWiseReport","state","rowData","Userlist","multiSelect","SelectedClient","paginationPageSize","currenPageSize","Show","CurrentDate","StartDate","EndDate","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","po_no","Badge","color","order_status","display_code","supplier_name","total","created_date","className","render","history","size","onClick","push","pathname","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","HandleDateWiseReport","e","preventDefault","pageparmission","JSON","parse","localStorage","getItem","FormData","append","Userinfo","id","role","axiosConfig","post","then","response","alllist","console","log","message","swal","catch","err","onRemove","selectedList","removedItem","date","Date","toISOString","this","split","newparmisson","find","value","pageName","Viewpermisson","permission","includes","Createpermisson","Editpermisson","Deletepermisson","users","selectedItem","name","Error","Row","Col","sm","Card","lg","md","for","onChange","target","type","pattern","min","max","map","ele","i","key","full_name","Button","CardBody","UncontrolledDropdown","DropdownToggle","tag","length","DropdownMenu","right","DropdownItem","Input","placeholder","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/533.65dbe083.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n// import { components } from \"react-select\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nconst selectItem1 = [];\r\n\r\nclass DateWiseReport extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    Userlist: [],\r\n    multiSelect: [],\r\n    SelectedClient: \"\",\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    Show: false,\r\n    CurrentDate: \"\",\r\n    StartDate: \"\",\r\n    EndDate: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"PoNo\",\r\n        field: \"po_no\",\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.po_no}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"OrderStatus\",\r\n        field: \"order_status\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <Badge color=\"success\">{params.data.order_status}</Badge>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Branch Code\",\r\n        field: \"display_code\",\r\n        filter: true,\r\n        width: 180,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.display_code}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"mobileno\",\r\n      //   field: \"product\",\r\n      //   filter: true,\r\n      //   width: 190,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.user_mobile_no}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"useremail\",\r\n      //   field: \"user_email\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.user_email}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"phoneno\",\r\n      //   field: \"phone_no\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.phone_no}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"createdby\",\r\n      //   field: \"created_by\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.created_by}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"state\",\r\n      //   field: \"state_title\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.state_title}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"suppliername\",\r\n        field: \"supplier_name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.supplier_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"total\",\r\n        field: \"total\",\r\n        filter: true,\r\n        width: 130,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <Badge color=\"success\">{params.data.total}</Badge>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"suppliercity\",\r\n      //   field: \"supplier_city_name\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.supplier_city_name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"companyname\",\r\n      //   field: \"company_name\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.company_name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"companytype\",\r\n      //   field: \"company_type\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.company_type}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"createddate\",\r\n        field: \"created_date\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.created_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Block\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Unblock\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/freshlist/cart/ViewoneFinalreport`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    const date = new Date().toISOString();\r\n    // console.log(date.split(\"T\")[0]);\r\n    this.setState({ CurrentDate: date.split(\"T\")[0] });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(pageparmission.role);\r\n    let newparmisson = pageparmission?.role?.find(\r\n      value => value?.pageName === \"Date Wise\"\r\n    );\r\n    // console.log(newparmisson);\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n    const data = new FormData();\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"role\", pageparmission?.Userinfo?.role);\r\n    axiosConfig\r\n      .post(\"/getReportUserlist\", data)\r\n      .then(response => {\r\n        console.log(response?.data?.data?.users);\r\n        this.setState({ Userlist: response?.data?.data?.users });\r\n      })\r\n      .catch(err => {\r\n        // console.log(err);\r\n      });\r\n\r\n    // const formdata = new FormData();\r\n    // formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    // formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    // axiosConfig\r\n    //   .post(\"/reportApi\", formdata)\r\n    //   .then((response) => {\r\n    //     // console.log(response?.data?.data);\r\n    //     let rowData = response?.data?.data;\r\n    //     this.setState({ rowData });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     // console.log(err);\r\n    //   });\r\n  }\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  HandleDateWiseReport = e => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    const data = new FormData();\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"role\", pageparmission?.Userinfo?.role);\r\n    data.append(\"client_id\", this.state.SelectedClient);\r\n    data.append(\"from_date \", this.state.StartDate);\r\n    data.append(\"to_date\", this.state.EndDate);\r\n    axiosConfig\r\n      .post(\"/reportApi\", data)\r\n      .then(response => {\r\n        let alllist = response?.data?.data;\r\n        console.log(response.data?.message);\r\n        if (response.data?.message === \"Record Not Found.\") {\r\n          swal(`${response.data?.message}`);\r\n          this.setState({ rowData: \"\" });\r\n        } else {\r\n          this.setState({ Show: true });\r\n          this.setState({ rowData: alllist });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response?.data.message);\r\n        swal(`${err.response?.data.message}`);\r\n        // if (err.response?.data.message) {\r\n        // }\r\n      });\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    // console.log(selectedList[0]?.id);\r\n    selectItem1 = [selectedList];\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectItem1.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // if (selectedList[0]?.id) {\r\n    //   this.setState({ SelectedClient: selectedList[0]?.id });\r\n    // }\r\n    console.log(selectItem1);\r\n  }\r\n  onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n\r\n    console.log(removedItem);\r\n  };\r\n  render() {\r\n    const { Show, rowData, columnDefs, defaultColDef, Userlist } = this.state;\r\n\r\n    return (\r\n      // console.log(rowData),\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col sm=\"3\" lg=\"3\" md=\"3\">\r\n                <h1 className=\"float-left\">Date Wise Report</h1>\r\n              </Col>\r\n              <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                <label for=\"start\">Start Date:</label>\r\n\r\n                <input\r\n                  onChange={e => {\r\n                    this.setState({ StartDate: e.target.value });\r\n                  }}\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  id=\"start\"\r\n                  name=\"trip-start\"\r\n                  pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n                  // value=\"2018-07-22\"\r\n                  min=\"2019-01-01\"\r\n                  max={this.state.CurrentDate && this.state.CurrentDate}\r\n                />\r\n              </Col>\r\n              <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                <label for=\"start\">End Date:</label>\r\n\r\n                <input\r\n                  onChange={e => {\r\n                    this.setState({ EndDate: e.target.value });\r\n                  }}\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  id=\"start\"\r\n                  name=\"trip-start\"\r\n                  pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n                  // value=\"2018-07-22\"\r\n                  min=\"2019-01-01\"\r\n                  max={this.state.CurrentDate && this.state.CurrentDate}\r\n                />\r\n              </Col>\r\n              <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                <label for=\"cars\">Choose a User:</label>\r\n                {/* <Multiselect\r\n                  // singleSelect\r\n                  selectionLimit=\"1\"\r\n                  options={Userlist} // Options to display in the dropdown\r\n                  selectedValues={this.state.SelectedClient} // Preselected value to persist in dropdown\r\n                  onSelect={this.onSelect} // Function will trigger on select event\r\n                  onRemove={this.onRemove} // Function will trigger on remove event\r\n                  displayValue=\"full_name\" // Property name to display in the dropdown options\r\n                /> */}\r\n                <select\r\n                  onChange={e =>\r\n                    this.setState({ SelectedClient: e.target.value })\r\n                  }\r\n                  className=\"form-control\"\r\n                  name=\"cars\"\r\n                  id=\"cars\"\r\n                >\r\n                  <option value=\"not Selected\">--Select User--</option>\r\n                  {Userlist?.map((ele, i) => (\r\n                    <option key={i} value={ele.id}>\r\n                      {ele.full_name} &nbsp; &nbsp;({ele.role})\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Col>\r\n\r\n              <Col lg=\"2\" className=\"d-flex justify-content-end\">\r\n                <Button\r\n                  className=\"mt-2\"\r\n                  onClick={e => this.HandleDateWiseReport(e)}\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            {Show ? (\r\n              <>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={e =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {context => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </>\r\n            ) : null}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default DateWiseReport;\r\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"sourceRoot":""}