{"version":3,"sources":["views/apps/freshlist/cart/Logs.js"],"names":["Logs","state","rowData","paginationPageSize","currenPageSize","Log","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","full_name","log","JSON","parse","log_event","className","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","pageparmission","localStorage","getItem","newparmisson","role","find","value","pageName","console","this","Viewpermisson","permission","includes","Createpermisson","Editpermisson","Deletepermisson","FormData","append","Userinfo","id","axiosConfig","post","then","response","catch","err","sm","tag","length","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"0WA0BMA,EAAI,iKAsLN,OAtLM,oCACRC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,IAAK,GACLC,YAAa,GACbC,cAAe,CACbC,UAAU,EAEVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAEV,CACEJ,WAAY,OACZE,MAAO,YACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,6BACE,8BAAkB,QAAlB,EAAOA,EAAOC,YAAI,aAAX,EAAaC,cAK5B,CACER,WAAY,WACZE,MAAO,UACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EAE7BG,EAAMC,KAAKC,MAAY,OAANL,QAAM,IAANA,GAAY,QAAN,EAANA,EAAQC,YAAI,WAAN,EAAN,EAAcK,WACnC,OACE,yBAAKC,UAAU,4CACb,8BAAU,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKF,WAqFtB,EAiCFO,YAAc,SAACR,GACb,EAAKS,QAAUT,EAAOU,IACtB,EAAKC,cAAgBX,EAAOY,UAC5B,EAAKC,SAAS,CACZ3B,eAAgB,EAAKuB,QAAQK,2BAA6B,EAC1D1B,YAAa,EAAKqB,QAAQM,wBAC1BC,WAAY,EAAKP,QAAQQ,6BAE3B,EACFC,kBAAoB,SAACC,GACnB,EAAKV,QAAQW,eAAeD,IAC5B,EACFE,WAAa,SAACF,GACR,EAAKV,UACP,EAAKA,QAAQa,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACZ3B,eAAgBiC,EAChB/B,YAAa+B,MAGlB,EAkHA,OAlHA,8CApDD,WAAqB,IAAD,aACdK,EAAiBpB,KAAKC,MAAMoB,aAAaC,QAAQ,aAEjDC,EAA6B,OAAdH,QAAc,IAAdA,GAAoB,QAAN,EAAdA,EAAgBI,YAAI,WAAN,EAAd,EAAsBC,MACvC,SAACC,GAAK,MAAyB,UAAf,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,aAEpBC,QAAQ7B,IAAIwB,GACZM,KAAKpB,SAAS,CAAEqB,cAA2B,OAAZP,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,WAAWC,SAAS,UACjEH,KAAKpB,SAAS,CACZwB,gBAA6B,OAAZV,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,WAAWC,SAAS,YAErDH,KAAKpB,SAAS,CACZyB,cAA2B,OAAZX,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,WAAWC,SAAS,UAEnDH,KAAKpB,SAAS,CACZ0B,gBAA6B,OAAZZ,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,WAAWC,SAAS,YAGrD,IAAMnC,EAAO,IAAIuC,SACjBvC,EAAKwC,OAAO,UAAyB,OAAdjB,QAAc,IAAdA,GAAwB,QAAV,EAAdA,EAAgBkB,gBAAQ,WAAV,EAAd,EAA0BC,IACjD1C,EAAKwC,OAAO,OAAsB,OAAdjB,QAAc,IAAdA,GAAwB,QAAV,EAAdA,EAAgBkB,gBAAQ,WAAV,EAAd,EAA0Bd,MAC9CgB,IACGC,KAAK,cAAe5C,GACpB6C,MAAK,SAACC,GAAc,IAAD,IAClBf,QAAQ7B,IAAY,OAAR4C,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAU9C,YAAI,WAAN,EAAR,EAAgBA,MAE5B,EAAKY,SAAS,CAAE7B,QAAiB,OAAR+D,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAU9C,YAAI,WAAN,EAAR,EAAgBA,UAE1C+C,OAAM,SAACC,SAGX,oBAsBD,WAAU,IAAD,OACP,EAA+ChB,KAAKlD,MAA5CC,EAAO,EAAPA,QAASS,EAAU,EAAVA,WAAYJ,EAAa,EAAbA,cAC7B,OACE2C,QAAQ7B,IAAInB,GAEV,kBAAC,IAAG,CAACuB,UAAU,iBACb,kBAAC,IAAG,CAAC2C,GAAG,OACR,kBAAC,IAAG,CAACA,GAAG,MACN,kBAAC,IAAI,KACH,kBAAC,IAAG,CAAC3C,UAAU,OACb,kBAAC,IAAG,KACF,wBAAI2C,GAAG,IAAI3C,UAAU,cAAa,iBAKtC,kBAAC,IAAQ,KACiB,OAAvB0B,KAAKlD,MAAMC,QAAmB,KAC7B,yBAAKuB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAoB,CAACA,UAAU,mBAC9B,kBAAC,IAAc,CAAC4C,IAAI,OACjBlB,KAAKxB,QACFwB,KAAKlD,MAAMG,eACX,GAAK+C,KAAKlD,MAAMK,aACf6C,KAAKlD,MAAMK,YAAc,GAAI,IAAI,IACpC,IACD6C,KAAKlD,MAAMC,QAAQoE,OAClBnB,KAAKlD,MAAMG,eACT+C,KAAKlD,MAAMK,YACf,EACI6C,KAAKlD,MAAMG,eACX+C,KAAKlD,MAAMK,YACX6C,KAAKlD,MAAMC,QAAQoE,OAAQ,IAAI,MAC/BnB,KAAKlD,MAAMC,QAAQoE,OACvB,kBAAC,IAAW,CAAC7C,UAAU,QAAQ8C,KAAM,MAEvC,kBAAC,IAAY,CAACC,OAAK,GACjB,kBAAC,IAAY,CACXH,IAAI,MACJI,QAAS,kBAAM,EAAKlC,WAAW,MAChC,MAGD,kBAAC,IAAY,CACX8B,IAAI,MACJI,QAAS,kBAAM,EAAKlC,WAAW,MAChC,MAGD,kBAAC,IAAY,CACX8B,IAAI,MACJI,QAAS,kBAAM,EAAKlC,WAAW,OAChC,OAGD,kBAAC,IAAY,CACX8B,IAAI,MACJI,QAAS,kBAAM,EAAKlC,WAAW,OAChC,UAMP,yBAAKd,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAK,CACJiD,YAAY,YACZC,SAAU,SAACC,GAAC,OACV,EAAKxC,kBAAkBwC,EAAEC,OAAO7B,QAElCA,MAAOG,KAAKlD,MAAM+C,SAGtB,yBAAKvB,UAAU,cACb,kBAAC,IAAOqD,OAAM,CACZC,MAAM,UACNN,QAAS,kBAAM,EAAK9C,QAAQqD,oBAC7B,oBAMP,kBAAC,IAAcC,SAAQ,MACpB,SAACC,GAAO,OACP,kBAAC,cAAW,CACVC,YAAa,GACbC,aAAa,WACb7E,cAAeA,EACfI,WAAYA,EACZT,QAASA,EACTwB,YAAa,EAAKA,YAClB2D,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZrF,mBAAoB,EAAKF,MAAME,mBAC/BsF,eAAe,SACfC,UAAuC,QAA5BR,EAAQjF,MAAM0F,wBAYhD,EAxSO,CAASC,IAAMC,WA0SV7F","file":"static/js/534.1293c882.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n\r\nimport { Route, Link } from \"react-router-dom\";\r\n// import { components } from \"react-select\";\r\n\r\nclass Logs extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    Log: [],\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"full_name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.full_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Activity\",\r\n        field: \"product\",\r\n        filter: true,\r\n        width: 700,\r\n        cellRendererFramework: (params) => {\r\n          // console.log(params?.data?.log_event);\r\n          let log = JSON.parse(params?.data?.log_event);\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{log?.data}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"How Many Day\",\r\n      //   field: \"validity\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.validity}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"How Many Orders Placed\",\r\n      //   field: \"orders\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.orders}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"How Many Remaining\",\r\n      //   field: \"remaining\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.remaining}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Block\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Unblock\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Actions\",\r\n      //   field: \"sortorder\",\r\n      //   field: \"transactions\",\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Eye\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"green\"\r\n      //           onClick={() =>\r\n      //             history.push(\r\n      //               `/app/freshlist/subscriber/viewSubscriber/${params.data._id}`\r\n      //             )\r\n      //           }\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(pageparmission.role);\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Logs\"\r\n    );\r\n    console.log(newparmisson);\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n\r\n    const data = new FormData();\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"role\", pageparmission?.Userinfo?.role);\r\n    axiosConfig\r\n      .post(\"/getAllLogs\", data)\r\n      .then((response) => {\r\n        console.log(response?.data?.data);\r\n\r\n        this.setState({ rowData: response?.data?.data });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n      });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Logs Report\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default Logs;\r\n"],"sourceRoot":""}