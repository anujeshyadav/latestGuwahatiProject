{"version":3,"sources":["views/apps/freshlist/cart/ProductWise.js"],"names":["i","ProductWise","state","rowData","paginationPageSize","CurrentDate","Show","StartDate","EndDate","currenPageSize","filteredRowData","Productlist","originalRowData","productFilterText","SelectedProduct","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","po_no","className","product_name","color","order_status","display_code","supplier_name","total","created_date","render","history","size","onClick","push","pathname","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleProductWiseReport","e","preventDefault","pageparmission","JSON","parse","localStorage","getItem","FormData","append","Userinfo","id","role","axiosConfig","post","then","response","alllist","console","log","message","swal","catch","err","date","Date","toISOString","this","split","newparmisson","find","value","pageName","Viewpermisson","permission","includes","Createpermisson","Editpermisson","Deletepermisson","formdata","sm","lg","md","onChange","target","type","name","pattern","min","max","map","ele","key","title","tag","length","right","placeholder","Ripple","exportDataAsCsv","Consumer","context","rowHeight","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/535.c7bfcdbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nconst rowHeight = 100;\r\nconst newarr = [];\r\nclass ProductWise extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    CurrentDate: \"\",\r\n    Show: false,\r\n    StartDate: \"\",\r\n    EndDate: \"\",\r\n    currenPageSize: \"\",\r\n    filteredRowData: [],\r\n    Productlist: [],\r\n    originalRowData: [], // Store the original data\r\n    productFilterText: \"\",\r\n    SelectedProduct: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 80,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"PoNo\",\r\n        field: \"po_no\",\r\n        filter: true,\r\n        // innerHeight: 100,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.po_no}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Product Name\",\r\n        field: \"product_name\",\r\n        filter: true,\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex flex-wrap\">\r\n              {/* {params?.data?.products &&\r\n                params?.data?.products?.map((ele, i) => (\r\n                  <span key={i}>{ele?.title} ,</span>\r\n                ))} */}\r\n              <span>{params.data?.product_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"OrderStatus\",\r\n        field: \"order_status\",\r\n        filter: true,\r\n\r\n        // filter: \"agSetColumnFilter\",\r\n\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <Badge color=\"success\">{params.data?.order_status}</Badge>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Branch Code\",\r\n        field: \"display_code\",\r\n        filter: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.display_code}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"mobileno\",\r\n      //   field: \"product\",\r\n      //   filter: true,\r\n      //   width: 190,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.user_mobile_no}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"useremail\",\r\n      //   field: \"user_email\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.user_email}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"phoneno\",\r\n      //   field: \"phone_no\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.phone_no}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"createdby\",\r\n      //   field: \"created_by\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.created_by}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"state\",\r\n      //   field: \"state_title\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.state_title}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"suppliername\",\r\n        field: \"supplier_name\",\r\n        filter: true,\r\n        width: 180,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.supplier_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"total\",\r\n\r\n        field: \"total\",\r\n        filter: true,\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <Badge color=\"success\">{params.data.total}</Badge>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"suppliercity\",\r\n      //   field: \"supplier_city_name\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.supplier_city_name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"companyname\",\r\n      //   field: \"company_name\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.company_name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"companytype\",\r\n      //   field: \"company_type\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.company_type}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"createddate\",\r\n        field: \"created_date\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.created_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Block\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Unblock\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Actions\",\r\n        // field: \"sortorder\",\r\n        // field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/freshlist/cart/ViewoneFinalreport`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  // handleProductFilterChange = (event) => {\r\n  //   const filterText = event.target.value.toLowerCase();\r\n  //   let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n  //   // const formdata = new FormData();\r\n  //   // formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n  //   // formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n  //   // axiosConfig\r\n  //   //   .post(\"/reportApi\", formdata)\r\n  //   //   .then((response) => {\r\n  //   //     let rowData = response?.data?.data;\r\n  //   //     this.setState({ rowData });\r\n  //   //   })\r\n  //   //   .catch((err) => {\r\n  //   //     // console.log(err);\r\n  //   //   });\r\n\r\n  //   const { originalRowData, rowData } = this.state;\r\n\r\n  //   const filteredRowData = rowData.map((row) => {\r\n  //     const filteredProducts = row.products.filter((product) =>\r\n  //       product.title.toLowerCase().includes(filterText)\r\n  //     );\r\n  //     return {\r\n  //       ...row,\r\n  //       products: filteredProducts,\r\n  //     };\r\n  //   });\r\n\r\n  //   let newarrr = filteredRowData.filter((ele, i) => ele?.products.length > 0);\r\n  //   console.log(newarrr);\r\n  //   this.searchiTem(newarrr);\r\n  // // };\r\n  // searchiTem = (data) => {\r\n  //   this.setState({ rowData: data });\r\n  // };\r\n\r\n  // componentDidUpdate() {\r\n  //   this.setState({ rowData: newarr });\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    const date = new Date().toISOString();\r\n    this.setState({ CurrentDate: date.split(\"T\")[0] });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Product Wise\"\r\n    );\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getReportProductList\", formdata)\r\n      .then((response) => {\r\n        let rowData = response?.data?.data;\r\n        this.setState({ Productlist: rowData });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n      });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleProductWiseReport = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    const data = new FormData();\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"role\", pageparmission?.Userinfo?.role);\r\n    data.append(\"product_id\", this.state.SelectedProduct);\r\n    data.append(\"from_date \", this.state.StartDate);\r\n    data.append(\"to_date\", this.state.EndDate);\r\n    if (this.state.SelectedProduct) {\r\n      axiosConfig\r\n        .post(\"/getReportProductWise\", data)\r\n        .then((response) => {\r\n          let alllist = response?.data?.data;\r\n          console.log(response.data?.data);\r\n          if (response.data?.message === \"Record Not Found.\") {\r\n            swal(`${response.data?.message}`);\r\n            this.setState({ rowData: \"\" });\r\n          } else {\r\n            this.setState({ Show: true });\r\n            this.setState({ rowData: alllist });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response?.data.message);\r\n          swal(`${err.response?.data.message}`);\r\n        });\r\n    } else {\r\n      swal(\"Warning\", \"Select Product first\");\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      Show,\r\n      filteredRowData,\r\n      Productlist,\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n    } = this.state;\r\n    return (\r\n      // console.log(filteredRowData),\r\n      // console.log(productFilterText),\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col sm=\"4\" lg=\"4\" md=\"4\">\r\n                <h1 className=\"float-left\">Product Wise Report</h1>\r\n              </Col>\r\n              <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                <label>Start Date:</label>\r\n\r\n                <input\r\n                  onChange={(e) => {\r\n                    this.setState({ StartDate: e.target.value });\r\n                  }}\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  id=\"start\"\r\n                  name=\"trip-start\"\r\n                  pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n                  // value=\"2018-07-22\"\r\n                  min=\"2019-01-01\"\r\n                  max={this.state.CurrentDate && this.state.CurrentDate}\r\n                />\r\n              </Col>\r\n              <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                <label>End Date:</label>\r\n\r\n                <input\r\n                  onChange={(e) => {\r\n                    this.setState({ EndDate: e.target.value });\r\n                  }}\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  id=\"start\"\r\n                  name=\"trip-start\"\r\n                  pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n                  // value=\"2018-07-22\"\r\n                  min=\"2019-01-01\"\r\n                  max={this.state.CurrentDate && this.state.CurrentDate}\r\n                />\r\n              </Col>\r\n              <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                <label\r\n                  onChange={(e) => {\r\n                    this.setState({ SelectedProduct: e.target.value });\r\n                  }}\r\n                >\r\n                  Choose a Product:\r\n                </label>\r\n\r\n                <select\r\n                  onChange={(e) =>\r\n                    this.setState({ SelectedProduct: e.target.value })\r\n                  }\r\n                  className=\"form-control\"\r\n                  name=\"cars\"\r\n                  id=\"cars\"\r\n                >\r\n                  <option value=\"not Selected\">--Select User--</option>\r\n                  {Productlist?.map((ele, i) => (\r\n                    <option key={i} value={ele.id}>\r\n                      {ele.title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Col>\r\n              <Col lg=\"2\" className=\"d-flex justify-content-end\">\r\n                <Button\r\n                  className=\"mt-2\"\r\n                  onClick={(e) => this.handleProductWiseReport(e)}\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            {Show ? (\r\n              <>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) => {\r\n                                this.updateSearchQuery(e.target.value);\r\n                                // this.handleProductFilterChange(e);\r\n                              }}\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            rowHeight={rowHeight}\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </>\r\n            ) : null}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default ProductWise;\r\n"],"sourceRoot":""}