{"version":3,"sources":["views/apps/freshlist/customer/AddFund.js"],"names":["AddFund","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","axios","post","state","then","response","alert","history","push","catch","error","first_name","last_name","customer_email","mobile_no","sortorder","className","onSubmit","this","lg","md","sm","type","onChange","required","placeholder","Ripple","color","Component"],"mappings":"oXAeqBA,EAAO,kDACxB,WAAaC,GAAQ,IAAD,EAUd,OAVc,qBAChB,cAAMA,IAYVC,gBAAkB,SAACC,GACf,EAAKC,SAAS,CAAEC,aAAcF,EAAMG,OAAOC,MAAM,KACjD,EAAKH,SAAS,CAAEI,aAAcL,EAAMG,OAAOC,MAAM,GAAGE,OACpDC,QAAQC,IAAIR,EAAMG,OAAOC,MAAM,KACjC,EACFK,eAAiB,SAACC,GACd,EAAKT,SAAS,CAAEU,OAAQD,EAAEP,OAAOS,SACnC,EACFC,cAAgB,SAACH,GACb,EAAKT,SAAS,eAAGS,EAAEP,OAAOG,KAAOI,EAAEP,OAAOS,SAC5C,EACFE,cAAgB,SAACJ,GACbA,EAAEK,iBAGFC,IAAMC,KAAK,8CAA+C,EAAKC,OAC1DC,MAAK,SAACC,GACHb,QAAQC,IAAIY,GACZC,MAAM,6BACN,EAAKvB,MAAMwB,QAAQC,KAAK,iCAE3BC,OAAM,SAACC,GACJlB,QAAQC,IAAIiB,OAjCpB,EAAKP,MAAQ,CACTQ,WAAY,GACZC,UAAW,GACXC,eAAgB,GAChBC,UAAW,GACXC,UAAW,GACX5B,aAAc,KACdS,OAAQ,IACV,EAgFL,OA/EA,mCA4BD,WACI,OACI,6BACI,kBAAC,IAAI,KACD,kBAAC,IAAU,KACP,kBAAC,IAAS,KAAC,aAEf,kBAAC,IAAQ,KACL,kBAAC,IAAI,CAACoB,UAAU,MAAMC,SAAUC,KAAKnB,eACjC,kBAAC,IAAG,KACA,kBAAC,IAAG,CAACoB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAChC,kBAAC,IAAK,KAAC,YACP,kBAAC,IAAW,CACRM,KAAK,SACL/B,KAAK,OACLM,MAAOqB,KAAKf,MAAMmB,KAClBC,SAAUL,KAAKpB,eAEf,gCAAQ,uBACR,4BAAQD,MAAM,KAAI,KAClB,4BAAQA,MAAM,KAAI,KAClB,4BAAQA,MAAM,KAAI,OAG1B,kBAAC,IAAG,CAACsB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAChC,kBAAC,IAAK,KAAC,QACP,kBAAC,IAAK,CACFQ,UAAQ,EACRF,KAAK,OACL/B,KAAK,YACLkC,YAAY,kBACZ5B,MAAOqB,KAAKf,MAAMS,UAClBW,SAAUL,KAAKpB,kBAI3B,kBAAC,IAAG,KACA,kBAAC,IAAG,CAACqB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAChC,kBAAC,IAAOU,OAAM,CACVC,MAAM,UACNL,KAAK,SACLN,UAAU,aAAY,oBAUzD,EA3FuB,CAASY","file":"static/js/539.f4668b63.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Label,\r\n    Input,\r\n    CustomInput,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nexport default class AddFund extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            customer_email: \"\",\r\n            mobile_no: \"\",\r\n            sortorder: \"\",\r\n            selectedFile: null,\r\n            status: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n        this.setState({ selectedName: event.target.files[0].name });\r\n        console.log(event.target.files[0]);\r\n    };\r\n    changeHandler1 = (e) => {\r\n        this.setState({ status: e.target.value });\r\n    };\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        axios.post(\"http://35.154.86.59/api/user/customersignup\", this.state)\r\n            .then((response) => {\r\n                console.log(response);\r\n                alert(\"Customer Added Successful\")\r\n                this.props.history.push(\"/app/customer/customerList\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CardTitle>Add Fund</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                            <Row>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Label>Customer</Label>\r\n                                    <CustomInput\r\n                                        type=\"select\"\r\n                                        name=\"type\"\r\n                                        value={this.state.type}\r\n                                        onChange={this.changeHandler}\r\n                                    >\r\n                                        <option>--Select Customer--</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                    </CustomInput>\r\n                                </Col>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Label>Fund</Label>\r\n                                    <Input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        name=\"last_name\"\r\n                                        placeholder=\"Enter Last Name\"\r\n                                        value={this.state.last_name}\r\n                                        onChange={this.changeHandler}>\r\n                                    </Input>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Button.Ripple\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        className=\"mr-1 mb-1\">\r\n                                        Submit\r\n                                    </Button.Ripple>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}