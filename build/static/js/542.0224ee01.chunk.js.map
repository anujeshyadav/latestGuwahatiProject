{"version":3,"sources":["views/apps/freshlist/customer/CustomerRegistration.js"],"names":["CustomerRegistration","useState","hub_name","desc","email","phone","address","d_zone","cat","subcat","status","formData","selectedCountry","formDataList","setFormDataList","CustomerRegistView","setCustomerRegistView","CustomerDropdown","setCustomerDropdown","useEffect","Customer_Registration","then","res","jsonAllData","xmlJs","xml2json","data","compact","spaces","console","log","JSON","parse","xml2js","parseString","err","result","error","ProductRgistration","catch","isoCode","State","getStatesOfCountry","handleInputChange","e","target","name","value","className","col-sm-6","onSubmit","preventDefault","axiosConfig","post","response","props","history","push","input","map","val","i","key","lg","md","sm","label","_text","type","_attributes","placeholder","onChange","MyDropdown","dropdown","option","index","color"],"mappings":"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","file":"static/js/542.0224ee01.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport xmlJs from \"xml-js\";\r\nimport xml2js from \"xml2js\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Customer_Registration } from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nconst CustomerRegistration = () => {\r\n  const [formData, setFormData] = useState({\r\n    hub_name: \"\",\r\n    desc: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    d_zone: \"\",\r\n    cat: \"\",\r\n    subcat: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [formDataList, setFormDataList] = useState({});\r\n\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [CustomerRegistView, setCustomerRegistView] = useState({});\r\n  const [CustomerDropdown, setCustomerDropdown] = useState({});\r\n\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Customer_Registration()\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        const jsonAllData = xmlJs.xml2json(res.data, {\r\n          compact: true,\r\n          spaces: 2,\r\n        });\r\n        console.log(JSON.parse(jsonAllData));\r\n        debugger;\r\n        setCustomerRegistView(JSON.parse(jsonAllData));\r\n        setCustomerDropdown(JSON.parse(jsonAllData));\r\n        xml2js.parseString(res?.data, (err, result) => {\r\n          if (err) {\r\n            console.error(\"Error parsing XML:\", err);\r\n          } else {\r\n            console.log(result.ProductRgistration);\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedCountry);\r\n    console.log(selectedCountry?.isoCode);\r\n    console.log(State?.getStatesOfCountry(selectedCountry?.isoCode));\r\n  }, [selectedCountry]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submitHandler\", formData);\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addcategory\", formData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/freshlist/order/orderList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormDataList({\r\n      ...formDataList,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Customer Registration\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={submitHandler}>\r\n            <Row className=\"mb-2\">\r\n              {CustomerRegistView &&\r\n                CustomerRegistView.CustomerRegistration?.input?.map(\r\n                  (val, i) => {\r\n                    return (\r\n                      <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>{val?.label?._text}</Label>\r\n                          <Input\r\n                            // type=\"date\"\r\n                            type={val?._attributes?.type}\r\n                            name={val?.name?._text}\r\n                            value={formDataList[val?.name?._text]}\r\n                            placeholder={val?.placeholder?._text}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                )}\r\n\r\n              <Col lg=\"6\" md=\"6\">\r\n                <Label>\r\n                  {CustomerDropdown &&\r\n                    CustomerDropdown?.CustomerRegistration?.MyDropdown?.dropdown\r\n                      ?.label?._text}\r\n                </Label>\r\n                <CustomInput\r\n                  type=\"select\"\r\n                  className=\"form-control\"\r\n                  name={\r\n                    CustomerDropdown?.CustomerRegistration?.MyDropdown?.dropdown\r\n                      ?.name?._text\r\n                  }\r\n                  value={\r\n                    formDataList[\r\n                      CustomerDropdown?.CustomerRegistration?.MyDropdown\r\n                        ?.dropdown?.name?._text\r\n                    ]\r\n                  }\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"\">Select an option</option>\r\n                  {CustomerDropdown?.CustomerRegistration?.MyDropdown?.dropdown?.option.map(\r\n                    (option, index) => (\r\n                      <option key={index} value={option?._attributes?.value}>\r\n                        {/* {option?._text} */}\r\n                        {option?._attributes?.value}\r\n                      </option>\r\n                    )\r\n                  )}\r\n                </CustomInput>\r\n              </Col>\r\n              {/* {CustomerDropdown &&\r\n                CustomerDropdown?.CustomerRegistration?.MyDropdown?.dropdown?.map(\r\n                  (val, i) => {\r\n                    console.log(val);\r\n                    return (\r\n                      <Col lg=\"6\" md=\"6\">\r\n                        <Label>{val?.label?._text}</Label>\r\n                        <CustomInput\r\n                          type=\"select\"\r\n                          key={i}\r\n                          className=\"form-control\"\r\n                          name={val?.name?._text}\r\n                          value={formDataList[val?.name?._text]}\r\n                          onChange={handleInputChange}\r\n                        >\r\n                          <option value=\"\">Select an option</option>\r\n                          {val?.option.map((option, index) => (\r\n                            <option\r\n                              key={index}\r\n                              value={option?._attributes?.value}\r\n                            >\r\n                              {option?._text}\r\n                            </option>\r\n                          ))}\r\n                        </CustomInput>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                )} */}\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Order Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Invoice Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Registered To</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Registered To\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Product Price</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Product Price\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"exampleSelect\">Warranty Applied</Label>\r\n                  <Input id=\"exampleSelect\" name=\"select\" type=\"select\">\r\n                    <option> Standard Warranty </option>\r\n                    <option> Extended Warranty </option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Warranty Start Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Warranty End Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Industry</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    // name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Used as</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    // name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>ZipCode/PinCode</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    // onKeyDown={e =>\r\n                    //   [\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()\r\n                    // }\r\n                    // min={0}\r\n                    placeholder=\"Enter ZipCode/PinCode\"\r\n                    // name=\"B_PinCode\"\r\n                    // value={B_PinCode}\r\n                    // onChange={e => setB_PinCode(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n            </Row>\r\n\r\n            <Row className=\"m-2\">\r\n              <Button color=\"primary\" type=\"submit\" className=\"mr-1 mb-1\">\r\n                Customer Registration\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerRegistration;\r\n"],"sourceRoot":""}