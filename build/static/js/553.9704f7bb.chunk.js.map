{"version":3,"sources":["views/apps/freshlist/dealOfDay/DealOfDay.js"],"names":["DealOfDay","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","src","data","product_img","alt","height","product","item_name","product_price","product_qty","value","status","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","sm","col-sm-6","render","tag","length","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"uXAuBMA,G,OAAS,iKAmKX,OAnKW,oCACbC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAEV,CACEJ,WAAY,QACZE,MAAO,cACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,yBAAKC,UAAU,4CACb,yBACEA,UAAU,uBACVC,IAAgB,QAAb,EAAEF,EAAOG,YAAI,aAAX,EAAaC,YAClBC,IAAI,SACJC,OAAO,KACPT,MAAM,UAMhB,CACEH,WAAY,QACZE,MAAO,UACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,yBAAKC,UAAU,IACb,8BAA0B,QAA1B,EAAOD,EAAOG,KAAKI,eAAO,aAAnB,EAAqBC,cAKpC,CACEd,WAAY,WACZE,MAAO,gBACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,IACb,8BAAOD,EAAOG,KAAKM,kBAK3B,CACEf,WAAY,iBACZE,MAAO,cACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,SACb,8BAAOD,EAAOG,KAAKO,gBAK3B,CACEhB,WAAY,SACZE,MAAO,SACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,MAAwB,WAAjBA,EAAOW,MACZ,yBAAKV,UAAU,mCACZD,EAAOG,KAAKS,QAEI,aAAjBZ,EAAOW,MACT,yBAAKV,UAAU,iCACZD,EAAOG,KAAKS,QAEb,OAGR,CACElB,WAAY,UACZE,MAAO,eACPC,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,0BACb,kBAAC,IAAI,CACHA,UAAU,QACVY,KAAM,GACNC,QAAS,kBACPC,IAAQC,KAAK,0CAAD,OACgChB,EAAOG,KAAKc,SAI5D,kBAAC,IAAM,CACLJ,KAAM,GACNC,QAAS,WACP,IAAII,EAAe,EAAKC,QAAQC,kBAChC,EAAKC,gBAAgBrB,EAAOG,KAAKc,KACjC,EAAKE,QAAQG,cAAc,CAAEC,OAAQL,YAQnD,EAiBFM,YAAc,SAACxB,GACb,EAAKmB,QAAUnB,EAAOyB,IACtB,EAAKC,cAAgB1B,EAAO2B,UAC5B,EAAKC,SAAS,CACZ1C,eAAgB,EAAKiC,QAAQU,2BAA6B,EAC1D1C,YAAa,EAAKgC,QAAQW,wBAC1BC,WAAY,EAAKZ,QAAQa,6BAE3B,EAEFC,kBAAoB,SAACC,GACnB,EAAKf,QAAQgB,eAAeD,IAC5B,EAEFE,WAAa,SAACF,GACR,EAAKf,UACP,EAAKA,QAAQkB,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACZ1C,eAAgBgD,EAChB/C,YAAa+C,MAGlB,EA4HA,OA5HA,mCAED,WAAU,IAAD,OACP,EAA+CK,KAAKxD,MAA5CC,EAAO,EAAPA,QAASS,EAAU,EAAVA,WAAYL,EAAa,EAAbA,cAC7B,OACE,kBAAC,IAAG,CAACa,UAAU,iBACb,kBAAC,IAAG,CAACuC,GAAG,OACR,kBAAC,IAAG,CAACA,GAAG,MACN,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACvC,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIwC,YAAA,EAASxC,UAAU,cAAa,cAItC,kBAAC,IAAG,KACF,kBAAC,IAAK,CACJyC,OAAQ,gBAAG3B,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLd,UAAU,6BACVa,QAAS,kBACPC,EAAQC,KAAK,2CAEhB,oBAOT,kBAAC,IAAQ,KACiB,OAAvBuB,KAAKxD,MAAMC,QAAmB,KAC7B,yBAAKiB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAoB,CAACA,UAAU,mBAC9B,kBAAC,IAAc,CAAC0C,IAAI,OACjBJ,KAAKpB,QACFoB,KAAKxD,MAAMG,eACX,GAAKqD,KAAKxD,MAAMI,aACfoD,KAAKxD,MAAMI,YAAc,GAAI,IAAI,IACpC,IACDoD,KAAKxD,MAAMC,QAAQ4D,OAClBL,KAAKxD,MAAMG,eAAiBqD,KAAKxD,MAAMI,YACzC,EACIoD,KAAKxD,MAAMG,eAAiBqD,KAAKxD,MAAMI,YACvCoD,KAAKxD,MAAMC,QAAQ4D,OAAQ,IAAI,MAC/BL,KAAKxD,MAAMC,QAAQ4D,OACvB,kBAAC,IAAW,CAAC3C,UAAU,QAAQY,KAAM,MAEvC,kBAAC,IAAY,CAACgC,OAAK,GACjB,kBAAC,IAAY,CACXF,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,MAChC,MAGD,kBAAC,IAAY,CACXO,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,MAChC,MAGD,kBAAC,IAAY,CACXO,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,OAChC,OAGD,kBAAC,IAAY,CACXO,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,OAChC,UAMP,yBAAKnC,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAK,CACJ6C,YAAY,YACZC,SAAU,SAACC,GAAC,OACV,EAAKf,kBAAkBe,EAAEC,OAAOtC,QAElCA,MAAO4B,KAAKxD,MAAM4B,SAGtB,yBAAKV,UAAU,cACb,kBAAC,IAAOiD,OAAM,CACZC,MAAM,UACNrC,QAAS,kBAAM,EAAKK,QAAQiC,oBAC7B,oBAMP,kBAAC,IAAcC,SAAQ,MACpB,SAACC,GAAO,OACP,kBAAC,cAAW,CACVC,YAAa,GACbC,aAAa,WACbpE,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTwC,YAAa,EAAKA,YAClBiC,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZ3E,mBAAoB,EAAKF,MAAME,mBAC/B4E,eAAe,SACfC,UAAuC,QAA5BR,EAAQvE,MAAMgF,wBAW9C,EA/RY,CAASC,IAAMC,YAiSfnF","file":"static/js/553.9704f7bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nclass DealOfDay extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"product_img\",\r\n        filter: false,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <img\r\n                className=\"rounded-circle  mr-4\"\r\n                src={params.data?.product_img}\r\n                alt=\" brand\"\r\n                height=\"40\"\r\n                width=\"40\"\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Title\",\r\n        field: \"product\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              <span>{params.data.product?.item_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Duration\",\r\n        field: \"product_price\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              <span>{params.data.product_price}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Active Product\",\r\n        field: \"product_qty\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\" mr-4\">\r\n              <span>{params.data.product_qty}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success \">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-danger\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size={15}\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/app/freshlist/flashSale/editFlashSale/${params.data._id}`\r\n                  )\r\n                }\r\n              />\r\n              <Trash2\r\n                size={15}\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  // async componentDidMount() {\r\n  //   await axiosConfig.get(\"/allbundleoffer\").then((response) => {\r\n  //     let rowData = response.data.data;\r\n  //     console.log(rowData);\r\n  //     this.setState({ rowData });\r\n  //   });\r\n  // }\r\n\r\n  // async runthisfunction(id) {\r\n  //   console.log(id);\r\n  //   await axiosConfig.get(`/delbundleoffer/${id}`).then((response) => {\r\n  //     console.log(response);\r\n  //   });\r\n  // }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  DealOfDay\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn btn-danger float-right\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/freshlist/flashSale/addFlashSale\")\r\n                      }\r\n                    >\r\n                      Add Product\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default DealOfDay;\r\n\r\n// import React from \"react\";\r\n// import {\r\n//     Card, CardBody, Input, Row, Col, Button, UncontrolledDropdown,\r\n//     DropdownMenu, DropdownItem, DropdownToggle,\r\n// } from \"reactstrap\";\r\n// // import axiosConfig from \"../../../../axiosConfig\";\r\n// import axios from \"axios\";\r\n// import { ContextLayout } from \"../../../../utility/context/Layout\";\r\n// import { AgGridReact } from \"ag-grid-react\";\r\n// import { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n// import { history } from \"../../../../history\";\r\n// import \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import \"../../../../assets/scss/pages/users.scss\";\r\n// import Deal from \"./Deal\";\r\n\r\n// class DealOfDay extends React.Component {\r\n//     state = {\r\n//         rowData: [],\r\n//         paginationPageSize: 20,\r\n//         currenPageSize: \"\",\r\n//         getPageSize: \"\",\r\n//         defaultColDef: {\r\n//             sortable: true,\r\n//             editable: true,\r\n//             resizable: true,\r\n//             suppressMenu: true,\r\n//         },\r\n//         columnDefs: [\r\n//             {\r\n//                 headerName: \"S.No\",\r\n//                 valueGetter: \"node.rowIndex + 1\",\r\n//                 field: \"node.rowIndex + 1\",\r\n//                 width: 150,\r\n//                 filter: true,\r\n//             },\r\n//             {\r\n//                 headerName: \"Title\",\r\n//                 field: \"customerId\",\r\n//                 filter: true,\r\n//                 width: 200,\r\n//                 cellRendererFramework: (params) => {\r\n//                     return (\r\n//                         <div>\r\n//                             <span>{params.data.customerId}</span>\r\n//                         </div>\r\n//                     );\r\n//                 },\r\n//             },\r\n\r\n//             {\r\n//                 headerName: \"Product Info\",\r\n//                 field: \"mobile\",\r\n//                 filter: true,\r\n//                 width: 200,\r\n//                 cellRendererFramework: (params) => {\r\n//                     return (\r\n//                         <div>\r\n//                             <span>{params.data.mobile}</span>\r\n//                         </div>\r\n//                     );\r\n//                 },\r\n//             },\r\n\r\n//             {\r\n//                 headerName: \"Actions\",\r\n//                 field: \"sortorder\",\r\n//                 field: \"transactions\",\r\n//                 width: 100,\r\n//                 cellRendererFramework: (params) => {\r\n//                     return (\r\n//                         <div className=\"actions cursor-pointer\">\r\n//                             {/* <Eye\r\n//                                 className=\"mr-50\"\r\n//                                 size=\"25px\"\r\n//                                 color=\"green\"\r\n//                                 onClick={() =>\r\n//                                     history.push(`/app/customer/viewCustomer/${params.data._id}`)}\r\n//                             /> */}\r\n//                             <Edit\r\n//                                 className=\"mr-50\"\r\n//                                 size=\"25px\"\r\n//                                 color=\"blue\"\r\n//                                 onClick={() => history.push(\"/app/freshlist/dealofday/editDealOfDay\")}\r\n//                             />\r\n//                             <Trash2\r\n//                                 className=\"mr-50\"\r\n//                                 size=\"25px\"\r\n//                                 color=\"red\"\r\n//                                 onClick={() => {\r\n//                                     let selectedData = this.gridApi.getSelectedRows();\r\n//                                     this.runthisfunction(params.data._id);\r\n//                                     this.gridApi.updateRowData({ remove: selectedData });\r\n//                                 }}\r\n//                             />\r\n//                         </div>\r\n//                     );\r\n//                 },\r\n//             },\r\n//         ],\r\n//     };\r\n//     // async componentDidMount() {\r\n//     //     await axios.get(`http://35.154.86.59/api/user/view_onecust/${id}`)\r\n//     //         .then((response) => {\r\n//     //             let rowData = response.data.data;\r\n//     //             console.log(rowData);\r\n//     //             this.setState({ rowData });\r\n//     //         });\r\n//     // }\r\n//     // async componentDidMount() {\r\n//     //     await axios\r\n//     //         .get(\"http://35.154.86.59/api/user/allcustomer\")\r\n//     //         .then((response) => {\r\n//     //             let rowData = response.data.data;\r\n//     //             console.log(rowData);\r\n//     //             this.setState({ rowData });\r\n//     //         });\r\n//     // }\r\n//     // async componentDidMount() {\r\n//     //   let { id } = this.props.match.params;\r\n//     //   await axios\r\n//     //     .get(`/http://35.154.86.59/api/user/allcustomer/${id}`, {\r\n//     //       headers: {\r\n//     //         \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n//     //       },\r\n//     //     })}\r\n//     // async runthisfunction(id) {\r\n//     //     console.log(id);\r\n//     //     await axios.get(`http://35.154.86.59/api/user/delcustomer/${id}`).then(\r\n//     //         (response) => {\r\n//     //             console.log(response);\r\n//     //         },\r\n//     //         (error) => {\r\n//     //             console.log(error);\r\n//     //         }\r\n//     //     );\r\n//     // }\r\n\r\n//     onGridReady = (params) => {\r\n//         this.gridApi = params.api;\r\n//         this.gridColumnApi = params.columnApi;\r\n//         this.setState({\r\n//             currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n//             getPageSize: this.gridApi.paginationGetPageSize(),\r\n//             totalPages: this.gridApi.paginationGetTotalPages(),\r\n//         });\r\n//     };\r\n//     updateSearchQuery = (val) => {\r\n//         this.gridApi.setQuickFilter(val);\r\n//     };\r\n//     filterSize = (val) => {\r\n//         if (this.gridApi) {\r\n//             this.gridApi.paginationSetPageSize(Number(val));\r\n//             this.setState({\r\n//                 currenPageSize: val,\r\n//                 getPageSize: val,\r\n//             });\r\n//         }\r\n//     };\r\n//     render() {\r\n//         const { rowData, columnDefs, defaultColDef } = this.state;\r\n//         return (\r\n//             console.log(rowData),\r\n//             (\r\n//                 <Row className=\"app-user-list\">\r\n//                     <Col sm=\"12\">\r\n//                         <Col>\r\n//                             <h1 sm='12'>\r\n//                                 <Deal />\r\n//                             </h1>\r\n//                         </Col>\r\n//                     </Col>\r\n//                     <Col sm=\"12\">\r\n//                         <Card>\r\n//                             <CardBody>\r\n//                                 <Row>\r\n//                                     <Col>\r\n//                                         <h3 className=\"float-left\">\r\n//                                             Deal Of the Day\r\n//                                         </h3>\r\n//                                     </Col>\r\n//                                 </Row>\r\n//                                 {this.state.rowData === null ? null : (\r\n//                                     <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n//                                         <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n//                                             <div className=\"mb-1\">\r\n//                                                 <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n//                                                     <DropdownToggle tag=\"div\">\r\n//                                                         {this.gridApi\r\n//                                                             ? this.state.currenPageSize\r\n//                                                             : \"\" * this.state.getPageSize -\r\n//                                                             (this.state.getPageSize - 1)}{\" \"}\r\n//                                                         -{\" \"}\r\n//                                                         {this.state.rowData.length -\r\n//                                                             this.state.currenPageSize *\r\n//                                                             this.state.getPageSize >\r\n//                                                             0\r\n//                                                             ? this.state.currenPageSize *\r\n//                                                             this.state.getPageSize\r\n//                                                             : this.state.rowData.length}{\" \"}\r\n//                                                         of {this.state.rowData.length}\r\n//                                                         <ChevronDown className=\"ml-50\" size={15} />\r\n//                                                     </DropdownToggle>\r\n//                                                     <DropdownMenu right>\r\n//                                                         <DropdownItem\r\n//                                                             tag=\"div\"\r\n//                                                             onClick={() => this.filterSize(20)}\r\n//                                                         >\r\n//                                                             20\r\n//                                                         </DropdownItem>\r\n//                                                         <DropdownItem\r\n//                                                             tag=\"div\"\r\n//                                                             onClick={() => this.filterSize(50)}\r\n//                                                         >\r\n//                                                             50\r\n//                                                         </DropdownItem>\r\n//                                                         <DropdownItem\r\n//                                                             tag=\"div\"\r\n//                                                             onClick={() => this.filterSize(100)}\r\n//                                                         >\r\n//                                                             100\r\n//                                                         </DropdownItem>\r\n//                                                         <DropdownItem\r\n//                                                             tag=\"div\"\r\n//                                                             onClick={() => this.filterSize(134)}\r\n//                                                         >\r\n//                                                             134\r\n//                                                         </DropdownItem>\r\n//                                                     </DropdownMenu>\r\n//                                                 </UncontrolledDropdown>\r\n//                                             </div>\r\n\r\n//                                         </div>\r\n//                                         <ContextLayout.Consumer>\r\n//                                             {(context) => (\r\n//                                                 <AgGridReact\r\n//                                                     gridOptions={{}}\r\n//                                                     rowSelection=\"multiple\"\r\n//                                                     defaultColDef={defaultColDef}\r\n//                                                     columnDefs={columnDefs}\r\n//                                                     rowData={rowData}\r\n//                                                     onGridReady={this.onGridReady}\r\n//                                                     colResizeDefault={\"shift\"}\r\n//                                                     animateRows={true}\r\n//                                                     floatingFilter={false}\r\n//                                                     pagination={true}\r\n//                                                     paginationPageSize={this.state.paginationPageSize}\r\n//                                                     pivotPanelShow=\"always\"\r\n//                                                     enableRtl={context.state.direction === \"rtl\"}\r\n//                                                 />\r\n//                                             )}\r\n//                                         </ContextLayout.Consumer>\r\n//                                     </div>\r\n//                                 )}\r\n//                             </CardBody>\r\n//                         </Card>\r\n//                     </Col>\r\n//                 </Row >\r\n//             )\r\n//         );\r\n//     }\r\n// }\r\n// export default DealOfDay;\r\n"],"sourceRoot":""}