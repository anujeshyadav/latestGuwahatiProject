{"version":3,"sources":["views/apps/freshlist/featuredeal/DealList.js","views/apps/freshlist/featuredeal/FeatureDeal.js"],"names":["DealList","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","data","FormData","append","state","sortorder","desc","axiosConfig","post","then","response","history","push","catch","error","product_img","Card","CardBody","Form","onSubmit","this","Row","className","Col","lg","Label","Input","required","type","placeholder","bannertype","onChange","style","float","Button","Ripple","color","Component","i","FeatureDeal","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","customerId","mobile","size","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","match","id","axios","get","headers","localStorage","getItem","sm","marginLeft","UncontrolledDropdown","DropdownToggle","tag","length","DropdownMenu","right","DropdownItem","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React"],"mappings":"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","file":"static/js/561.f73350bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\"\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Col,\r\n    Form,\r\n    Row,\r\n    Input,\r\n    CustomInput,\r\n    Label,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n\r\nexport class DealList extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            selectedFile: null,\r\n            selectedName: \"\",\r\n            sortorder: \"\",\r\n            desc: \"\",\r\n            product_img: \"\",\r\n            status: \"\",\r\n        };\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n        this.setState({ selectedName: event.target.files[0].name });\r\n        console.log(event.target.files[0]);\r\n    };\r\n\r\n    changeHandler1 = (e) => {\r\n        this.setState({ status: e.target.value });\r\n    };\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData();\r\n        data.append(\"name\", this.state.name);\r\n        data.append(\"sortorder\", this.state.sortorder);\r\n        data.append(\"desc\", this.state.desc);\r\n        data.append(\"status\", this.state.status);\r\n        data.append(\r\n            \"product_img\",\r\n            this.state.selectedFile,\r\n            this.state.selectedName\r\n        );\r\n        //   for (var value of data.values()) {\r\n        //     console.log(value);\r\n        //  }\r\n        axiosConfig\r\n            .post(\" /addproductcategory\", data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.props.history.push(\"/app/category/category\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> Feature Deal </h1>\r\n                <div>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Form onSubmit={this.submitHandler}>\r\n                                <Row className=\"mb-1\">\r\n                                    <Col lg=\"12\">\r\n\r\n                                        <Label>Title</Label>\r\n                                        <Input\r\n                                            required\r\n                                            type=\"text\"\r\n                                            name=\"bannertype\"\r\n                                            placeholder=\"Enter Title\"\r\n                                            value={this.state.bannertype}\r\n                                            onChange={this.changeHandler}>\r\n\r\n                                        </Input>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <Label>Start Date</Label>\r\n                                        <Input\r\n                                            required\r\n                                            type=\"date\"\r\n                                            name=\"bannertype\"\r\n                                            placeholder=\"\"\r\n                                            value={this.state.bannertype}\r\n                                            onChange={this.changeHandler}>\r\n\r\n                                        </Input>\r\n                                    </Col>\r\n                                    <Col lg=\"6\">\r\n                                        <Label>End Date</Label>\r\n                                        <Input\r\n                                            required\r\n                                            type=\"date\"\r\n                                            name=\"bannertype\"\r\n                                            placeholder=\"\"\r\n                                            value={this.state.bannertype}\r\n                                            onChange={this.changeHandler}>\r\n\r\n                                        </Input>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{ float: 'right' }}>\r\n                                    <Button.Ripple\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        className=\"mr-1 mb-1 \"\r\n                                    >\r\n                                        submit\r\n                                    </Button.Ripple>\r\n                                </Row>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div >\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\nexport default DealList;","import React from \"react\";\r\nimport {\r\n    Card, CardBody, Input, Row, Col, Button, UncontrolledDropdown,\r\n    DropdownMenu, DropdownItem, DropdownToggle,\r\n} from \"reactstrap\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport DealList from \"./DealList\";\r\n\r\nclass FeatureDeal extends React.Component {\r\n    state = {\r\n        rowData: [],\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {\r\n            sortable: true,\r\n            editable: true,\r\n            resizable: true,\r\n            suppressMenu: true,\r\n        },\r\n        columnDefs: [\r\n            {\r\n                headerName: \"S.No\",\r\n                valueGetter: \"node.rowIndex + 1\",\r\n                field: \"node.rowIndex + 1\",\r\n                width: 150,\r\n                filter: true,\r\n            },\r\n            {\r\n                headerName: \"Title\",\r\n                field: \"customerId\",\r\n                filter: true,\r\n                width: 200,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div>\r\n                            <span>{params.data.customerId}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                headerName: \"Start Date\",\r\n                field: \"mobile\",\r\n                filter: true,\r\n                width: 200,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div>\r\n                            <span>{params.data.mobile}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"End Date\",\r\n                field: \"mobile\",\r\n                filter: true,\r\n                width: 200,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div>\r\n                            <span>{params.data.mobile}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Status\",\r\n                field: \"status\",\r\n                filter: true,\r\n                width: 150,\r\n                cellRendererFramework: (params) => {\r\n                    return params.value === \"Block\" ? (\r\n                        <div className=\"badge badge-pill badge-success\">\r\n                            {params.data.status}\r\n                        </div>\r\n                    ) : params.value === \"Unblock\" ? (\r\n                        <div className=\"badge badge-pill badge-warning\">\r\n                            {params.data.status}\r\n                        </div>\r\n                    ) : null;\r\n                },\r\n            },\r\n\r\n            {\r\n                headerName: \"Actions\",\r\n                field: \"sortorder\",\r\n                field: \"transactions\",\r\n                width: 100,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"actions cursor-pointer\">\r\n                            <Edit\r\n                                className=\"mr-50\"\r\n                                size=\"25px\"\r\n                                color=\"blue\"\r\n                                onClick={() => history.push(\"/app/freshlist/featuredeal/editFeatureDeal\")}\r\n                            />\r\n                            <Trash2\r\n                                className=\"mr-50\"\r\n                                size=\"25px\"\r\n                                color=\"red\"\r\n                                onClick={() => {\r\n                                    let selectedData = this.gridApi.getSelectedRows();\r\n                                    this.runthisfunction(params.data._id);\r\n                                    this.gridApi.updateRowData({ remove: selectedData });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    async componentDidMount() {\r\n        await axios.get(``)\r\n            .then((response) => {\r\n                let rowData = response.data.data;\r\n                console.log(rowData);\r\n                this.setState({ rowData });\r\n            });\r\n    }\r\n    async componentDidMount() {\r\n        await axios\r\n            .get(\"http://35.154.86.59/api/user/allcustomer\")\r\n            .then((response) => {\r\n                let rowData = response.data.data;\r\n                console.log(rowData);\r\n                this.setState({ rowData });\r\n            });\r\n    }\r\n    async componentDidMount() {\r\n        let { id } = this.props.match.params;\r\n        await axios\r\n            .get(``, {\r\n                headers: {\r\n                    \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n                },\r\n            })\r\n    }\r\n    async runthisfunction(id) {\r\n        console.log(id);\r\n        await axios.get(``).then(\r\n            (response) => {\r\n                console.log(response);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        this.setState({\r\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n            getPageSize: this.gridApi.paginationGetPageSize(),\r\n            totalPages: this.gridApi.paginationGetTotalPages(),\r\n        });\r\n    };\r\n    updateSearchQuery = (val) => {\r\n        this.gridApi.setQuickFilter(val);\r\n    };\r\n    filterSize = (val) => {\r\n        if (this.gridApi) {\r\n            this.gridApi.paginationSetPageSize(Number(val));\r\n            this.setState({\r\n                currenPageSize: val,\r\n                getPageSize: val,\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        const { rowData, columnDefs, defaultColDef } = this.state;\r\n        return (\r\n            console.log(rowData),\r\n            (\r\n                <Row className=\"app-user-list\">\r\n                    <Col sm=\"12\">\r\n                        <Col>\r\n                            <h1 sm='12'>\r\n                                <DealList />\r\n                            </h1>\r\n                        </Col>\r\n                    </Col>\r\n\r\n                    <Col sm=\"12\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <h3 className=\"float-left\">\r\n                                            Feature Deal Table\r\n                                        </h3>\r\n                                    </Col>\r\n                                    <div className=\"\"\r\n                                        style={{ marginLeft: \"8rem\" }}>\r\n                                        <Input\r\n                                            placeholder=\"search...\"\r\n                                            onChange={(e) =>\r\n                                                this.updateSearchQuery(e.target.value)\r\n                                            }\r\n                                            value={this.state.value}\r\n                                        />\r\n                                    </div>\r\n                                    <Col>\r\n                                        <Button\r\n                                            className=\"btn btn-danger float-right\"\r\n                                            onClick={() => history.push(\"/app/freshlist/featuredeal/addFeatureDeal\")}\r\n                                        >\r\n                                            Add Feature Deal\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                {this.state.rowData === null ? null : (\r\n                                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                                        <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                                            <div className=\"mb-1\">\r\n                                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                                    <DropdownToggle tag=\"div\">\r\n                                                        {this.gridApi\r\n                                                            ? this.state.currenPageSize\r\n                                                            : \"\" * this.state.getPageSize -\r\n                                                            (this.state.getPageSize - 1)}{\" \"}\r\n                                                        -{\" \"}\r\n                                                        {this.state.rowData.length -\r\n                                                            this.state.currenPageSize *\r\n                                                            this.state.getPageSize >\r\n                                                            0\r\n                                                            ? this.state.currenPageSize *\r\n                                                            this.state.getPageSize\r\n                                                            : this.state.rowData.length}{\" \"}\r\n                                                        of {this.state.rowData.length}\r\n                                                        <ChevronDown className=\"ml-50\" size={15} />\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu right>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(20)}\r\n                                                        >\r\n                                                            20\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(50)}\r\n                                                        >\r\n                                                            50\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(100)}\r\n                                                        >\r\n                                                            100\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(134)}\r\n                                                        >\r\n                                                            134\r\n                                                        </DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </UncontrolledDropdown>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <ContextLayout.Consumer>\r\n                                            {(context) => (\r\n                                                <AgGridReact\r\n                                                    gridOptions={{}}\r\n                                                    rowSelection=\"multiple\"\r\n                                                    defaultColDef={defaultColDef}\r\n                                                    columnDefs={columnDefs}\r\n                                                    rowData={rowData}\r\n                                                    onGridReady={this.onGridReady}\r\n                                                    colResizeDefault={\"shift\"}\r\n                                                    animateRows={true}\r\n                                                    floatingFilter={false}\r\n                                                    pagination={true}\r\n                                                    paginationPageSize={this.state.paginationPageSize}\r\n                                                    pivotPanelShow=\"always\"\r\n                                                    enableRtl={context.state.direction === \"rtl\"}\r\n                                                />\r\n                                            )}\r\n                                        </ContextLayout.Consumer>\r\n                                    </div>\r\n                                )}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row >\r\n            )\r\n        );\r\n    }\r\n}\r\nexport default FeatureDeal;"],"sourceRoot":""}