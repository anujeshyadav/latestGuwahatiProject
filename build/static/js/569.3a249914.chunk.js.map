{"version":3,"sources":["views/apps/freshlist/house/AssignedPage.js"],"names":["AddProduct","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","userData","JSON","parse","localStorage","getItem","data","FormData","append","Userinfo","id","state","productid","quantity","location","category_id","User","axiosConfig","post","then","response","swal","console","log","catch","error","userid","productName","AssignRole","rowData","category_name","type","feature","selectedFile1","selectedName1","selectedFile2","selectedName2","selectedFile3","selectedName3","selectedFile4","selectedName4","this","match","params","get","users","className","render","history","onClick","push","onSubmit","lg","md","required","placeholder","onChange","map","i","key","full_name","Ripple","color","Component"],"mappings":"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","file":"static/js/569.3a249914.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productid: \"\",\r\n      userid: \"\",\r\n      User: \"\",\r\n      quantity: \"\",\r\n      productName: [],\r\n      AssignRole: \"\",\r\n      rowData: [],\r\n      category_name: \"\",\r\n      type: \"\",\r\n      feature: \"\",\r\n      status: \"\",\r\n      selectedFile1: null,\r\n      selectedName1: \"\",\r\n      selectedFile2: null,\r\n      selectedName2: \"\",\r\n      selectedFile3: null,\r\n      selectedName3: \"\",\r\n      selectedFile4: null,\r\n      selectedName4: \"\",\r\n    };\r\n  }\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const data = new FormData();\r\n\r\n    data.append(\"user_id\", userData?.Userinfo.id);\r\n    data.append(\"product_id\", this.state.productid);\r\n    data.append(\"qty\", this.state.quantity);\r\n    data.append(\"category_id\", this.props.location.state?.category_id);\r\n    data.append(\"client_id\", this.state.User);\r\n\r\n    axiosConfig\r\n      .post(`/assign_to_client`, data)\r\n      .then((response) => {\r\n        swal(\"Success\", \"Sucessfully Assigned to client\");\r\n        console.log(response);\r\n        this.setState({ User: \"\" });\r\n        this.setState({ productid: \"\" });\r\n        this.setState({ quantity: \"\" });\r\n        // if (response.data.msg === \"success\") {\r\n        //   swal(\"Success!\", \"You Data IS been Submitted\", \"success\");\r\n        //   this.props.history.push(\"/app/freshlist/category/categoryList\");\r\n        // }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    this.setState({ productid: id });\r\n    axiosConfig.get(\"/getuserlist\").then((response) => {\r\n      console.log(response?.data?.data?.users);\r\n      let rowData = response?.data?.data?.users;\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h2>Assign To Client</h2>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/house/assigntoclient\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1 \">\r\n                  <Label>Client List</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"User\"\r\n                    placeholder=\"Enter Iden Type\"\r\n                    value={this.state.User}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"12ROW\">--Selecte--</option>\r\n                    {this.state.rowData &&\r\n                      this.state.rowData?.map((value, i) => (\r\n                        <option key={i} value={value?.id}>\r\n                          {value?.full_name}\r\n                        </option>\r\n                      ))}\r\n                  </Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1 \">\r\n                  <Label>Quantity</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    placeholder=\"Enter Quantity...\"\r\n                    value={this.state.quantity}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mx-1 mb-1\"\r\n                >\r\n                  Assign To Client\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddProduct;\r\n"],"sourceRoot":""}