{"version":3,"sources":["views/apps/freshlist/house/Typelist.js"],"names":["i","Typelist","state","rowData","Viewpermisson","Editpermisson","Createpermisson","Deletepermisson","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","product_type","className","description","status","render","history","size","color","onClick","push","id","runthisfunction","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","pageparmission","JSON","parse","localStorage","getItem","newparmisson","role","find","value","pageName","this","permission","includes","formdata","FormData","append","Userinfo","axiosConfig","post","then","response","console","log","selectedData","getSelectedRows","swal","buttons","cancel","catch","text","resp","message","success","updateRowData","remove","err","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/571.4110cde3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass Typelist extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    Viewpermisson: null,\r\n    Editpermisson: null,\r\n    Createpermisson: null,\r\n    Deletepermisson: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      // {\r\n      //   headerName: \"Image\",\r\n      //   field: \"image\",\r\n      //   filter: true,\r\n      //   width: 100,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <img\r\n      //           className=\"rounded-circle mr-50\"\r\n      //           src={params?.data?.image}\r\n      //           alt=\"user avatar\"\r\n      //           height=\"40\"\r\n      //           width=\"40\"\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"product_type\",\r\n        field: \"product_type\",\r\n        filter: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.product_type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Description\",\r\n        field: \"description\",\r\n        filter: true,\r\n        width: 190,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params?.data?.description}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.data?.status === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.data?.status === \"Deactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <>\r\n                    {/* {this.state.Viewpermisson && (\r\n                      <Eye\r\n                        className=\"mr-50\"\r\n                        size=\"25px\"\r\n                        color=\"green\"\r\n                        onClick={() =>\r\n                          history.push(`/app/house/ViewType/${params.data.id}`)\r\n                        }\r\n                      />\r\n                    )} */}\r\n\r\n                    {this.state.Editpermisson && (\r\n                      <Edit\r\n                        className=\"mr-50\"\r\n                        size=\"25px\"\r\n                        color=\"blue\"\r\n                        onClick={() =>\r\n                          history.push(\r\n                            `/app/freshlist/house/EditType/${params.data.id}`\r\n                          )\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {this.state.Deletepermisson && (\r\n                      <Trash2\r\n                        className=\"mr-50\"\r\n                        size=\"25px\"\r\n                        color=\"red\"\r\n                        onClick={() => {\r\n                          this.runthisfunction(params.data.id);\r\n                          // this.gridApi.updateRowData({ remove: selectedData });\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Type\"\r\n    );\r\n\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/producttypelistview\", formdata)\r\n      .then((response) => {\r\n        let rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          let data = new FormData();\r\n          let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n          data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n          data.append(\"role\", pageparmission?.Userinfo?.role);\r\n          data.append(\"tablename\", \"product_type\");\r\n          data.append(\"delete_id\", id);\r\n          axiosConfig\r\n            .post(\"/deleterecord\", data)\r\n            .then((resp) => {\r\n              console.log(resp?.data.message);\r\n              if (resp?.data.success) {\r\n                swal(\"Success\", \"Type Deleted Successfully\");\r\n                this.gridApi.updateRowData({ remove: selectedData });\r\n              }\r\n              if (!resp?.data?.success) {\r\n                console.log(\"object\");\r\n                swal(\"Error\", `${resp?.data.message}`);\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              // swal(\"Somethig Went Wrong\");\r\n            });\r\n\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\">\r\n                  Type List here\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                {this.state.Createpermisson && (\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\"btn float-right\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          history.push(\"/app/freshlist/house/AddType\")\r\n                        }\r\n                      >\r\n                        Add New\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Typelist;\r\n"],"sourceRoot":""}