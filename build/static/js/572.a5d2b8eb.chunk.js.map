{"version":3,"sources":["views/apps/freshlist/hubs/HubList.js"],"names":["i","HubList","state","name","mobile","email","address","delivery_zone","status","rowData","paginationPageSize","currenPageSize","getPageSize","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","value","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","delete","error","this","defaultColDef","sm","style","marginRight","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/572.a5d2b8eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nclass HubList extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    delivery_zone: \"\",\r\n    status: \"\",\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    // defaultColDef: {\r\n    //   sortable: true,\r\n    //   editable: true,\r\n    //   resizable: true,\r\n    //   suppressMenu: true,\r\n    // },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Hub Name\",\r\n        field: \"name\",\r\n        filter: true,\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Mobile No.\",\r\n        field: \"mobile\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Address\",\r\n        field: \"address\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.address}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Delivery Zone\",\r\n        field: \"delivery_zone\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.delivery_zone}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/hubs/ViewHub/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/hubs/editHub/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Trash2\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"red\"\r\n                    onClick={() => {\r\n                      let selectedData = this.gridApi.getSelectedRows();\r\n                      this.runthisfunction(params.data._id);\r\n                      this.gridApi.updateRowData({ remove: selectedData });\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"admin/hublist\").then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.delete(`/admin/del_hub/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Hub List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    style={{ marginRight: \"-22rem\" }}\r\n                    className=\"btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/category/CategoryList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\"btn btn-primary float-right\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          history.push(\"/app/freshlist/hubs/AddHub\")\r\n                        }\r\n                      >\r\n                        Add Hub\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default HubList;\r\n"],"sourceRoot":""}