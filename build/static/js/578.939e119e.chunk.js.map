{"version":3,"sources":["views/apps/freshlist/order/AddReturnProductionProduct.js"],"names":["i","GrandTotal","SelectedITems","AddReturnProductionProduct","args","useState","Other_Expenses","GSTApplied","Other_charges","discount","ExtraCharges","setExtraCharges","setIndex","index","Loader","setLoader","ProductList","setProductList","grandTotalAmt","setGrandTotalAmt","GrandReturnTotalAmt","setGrandReturnTotalAmt","setUserInfo","MainProduct","setMainProduct","modalOne","setModalOne","toggleOne","id","useParams","handleExtraCharge","e","target","name","value","product","productId","selecetedUnit","AvailaleQty","availableQty","ReturnPrice","Return_Qty","ReturnUnit","transferQty","RequiredQty","price","totalprice","Size","unitType","stockTrxDate","targetEndDate","Shipping","tax","grandTotal","setProduct","handleProductChangeProductTwo","list","handleProductChangeProductone","amt","ReturnAmt","length","x","map","val","Y","Number","reduce","a","b","console","log","toFixed","handleRemoveSelected","selectedList","selectedItem","splice","ele","qty","Product_MRP","indextotal","useEffect","userdata","JSON","parse","localStorage","getItem","URl","ViewOne_Production","_Get","then","res","ProductListView","_id","database","Response","Product","MainProduct_id","Production","product_name","SeletedMainProduct","filter","selectRawProduct","productItems","catch","err","miscellaneousExpennses","gstApplied","otherCharges","userInfo","submitHandler","preventDefault","returnItems","unit","totalPrice","payload","returnAmount","_Put","Save_Producton_Return","swal","style","display","justifyContent","alignItems","height","window","innerHeight","className","lg","md","sm","render","history","cursor","color","onClick","goBack","onSubmit","required","disablePreSelectedValues","selectionLimit","isObject","selectedValues","displayValue","key","options","onRemove","for","readOnly","placeholder","type","aria-readonly","onChange","min","step","max","Ripple","maxWidth","isOpen","toggle"],"mappings":";oaACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAsCA,IAAIC,EAAa,GACbC,EAAgB,GAm8BLC,UAh8BoB,SAACC,GAAU,IAAD,EAC3C,EAAgCC,mBAAS,IAAG,mBAC5C,GADe,KAAa,KACYA,mBAAS,CAC/CC,eAAgB,IAChBC,WAAY,GACZC,cAAe,GACfC,SAAU,MACV,mBALKC,EAAY,KAAEC,EAAe,KAOpC,EAA0BN,mBAAS,IAAG,mBAAxBO,GAAF,KAAU,MACtB,EAA0BP,mBAAS,IAAG,mBAA/BQ,EAAK,KACZ,GADsB,KACMR,oBAAS,IAAM,mBAApCS,EAAM,KAAEC,EAAS,KACxB,EAAsCV,mBAAS,IAAG,mBAA3CW,EAAW,KAAEC,EAAc,KAClC,EAA4CZ,mBAAS,IAAG,mBACxD,GADqB,KAAmB,KACSA,mBAAS,KAAG,mBAC7D,IADuB,KAAsB,KACLA,mBAAS,KAAG,qBACpD,IADmB,MAAiB,MACMA,mBAAS,IAAE,qBAA9Ca,GAAa,MAAEC,GAAgB,MACtC,GAAsDd,mBAAS,GAAE,qBAA1De,GAAmB,MAAEC,GAAsB,MAClD,GAAgChB,mBAAS,IAAG,qBAA3BiB,IAAF,MAAa,OAC5B,GAAsCjB,mBAAS,IAAG,qBAA3CkB,GAAW,MAAEC,GAAc,MAElC,GAAgCnB,oBAAS,GAAM,qBAAxCoB,GAAQ,MAAEC,GAAW,MACtBC,GAAY,WAAH,OAASD,IAAaD,KAC/BG,GAAOC,cAAPD,GAEAE,GAAoB,SAACC,GACzB,MAAsBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACZvB,EAAgB,2BACXD,GAAY,kBACduB,EAAOC,MAIZ,GAA8B7B,mBAAS,CACrC,CACE8B,QAAS,GACTC,UAAW,GACXC,cAAe,GACfC,YAAa,KACbC,aAAc,GACdC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,YAAa,EACbC,YAAa,GACbC,MAAO,GACPC,WAAY,GACZC,KAAM,GACNC,SAAU,GACVC,aAAc,GACdC,cAAe,GACfzC,SAAU,GACV0C,SAAU,GACVC,IAAK,GACLC,WAAY,MAEd,qBAvBKlB,GAAO,MAAEmB,GAAU,MAgEpBC,GAAgC,SAACxB,EAAGlB,GACxCD,EAASC,GAET,MAAwBkB,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACRsB,EAAI,YAAOrB,IACjBqB,EAAK3C,GAAOoB,GAAQC,EACpBoB,GAAWE,IAuBPC,GAAgC,SAAC1B,EAAGlB,GACxCD,EAASC,GACT,MAAwBkB,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACRsB,EAAI,YAAOrB,IACjBqB,EAAK3C,GAAOoB,GAAQC,EAEpB,IAAIwB,EAAM,EACNC,EAAY,EAChB,GAAIH,EAAKI,OAAS,EAAG,CACnB,IAAMC,EAAQ,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,KAAI,SAACC,GAGnB,OAFA9D,EAAWY,GAASkD,EAAIlB,MAAQkB,EAAInB,YACpCY,EAAK3C,GAAmB,WAAIkD,EAAIlB,MAAQkB,EAAInB,aAClC,OAAHmB,QAAG,IAAHA,OAAG,EAAHA,EAAKlB,QAAW,OAAHkB,QAAG,IAAHA,OAAG,EAAHA,EAAKnB,gBAErBoB,EAAQ,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMM,KAAI,SAACC,GACnB,OAAOA,EAAIlB,MAAQoB,OAAOF,EAAItB,eAEhCiB,EAAMG,EAAEK,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,KAC7BT,EAAYK,EAAEE,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,KACnCC,QAAQC,IAAI,aAAcZ,GAE5BJ,GAAWE,GACXrC,GAAiBuC,EAAIa,QAAQ,IAC7BlD,GAAuBsC,EAAUY,QAAQ,KAErCC,GAAuB,SAACC,EAAcC,EAAc7D,GACxDX,EAAcyE,OAAO9D,EAAO,GAC5B,IAOI6C,GAPe,OAAPvB,SAAO,IAAPA,QAAO,EAAPA,GAAS2B,KAAI,SAACc,EAAK5E,GAAO,IAAD,IACnCqE,QAAQC,KAAO,OAAHM,QAAG,IAAHA,OAAG,EAAHA,EAAKC,MAAqB,QAAlB,EAAGH,EAAa1E,UAAE,aAAf,EAAiB8E,cACxC,IAAIC,GAAgB,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKC,MAAsB,QAAnB,EAAG3E,EAAcF,UAAE,aAAhB,EAAkB8E,aAE9C,OADA7E,EAAWY,GAASkE,EACbA,MAGOb,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,KAErCjD,GAAiBuC,IAkEnBsB,qBAAU,WACR,IAAIC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aAC3CC,EAAMC,KACVxE,GAAU,GACVyE,aAAKF,EAAK1D,IACP6D,MAAK,SAACC,GAAS,IAAD,QACbC,aAAwB,OAARV,QAAQ,IAARA,OAAQ,EAARA,EAAUW,IAAa,OAARX,QAAQ,IAARA,OAAQ,EAARA,EAAUY,UACtCJ,MAAK,SAACK,GAAc,IAAD,YAClBzB,QAAQC,IAAY,OAARwB,QAAQ,IAARA,OAAQ,EAARA,EAAUC,SACtB9E,EAAuB,OAAR6E,QAAQ,IAARA,OAAQ,EAARA,EAAUC,SACzB,IAmB6C,IAnBzCC,EAAoB,OAAHN,QAAG,IAAHA,GAAe,QAAZ,EAAHA,EAAKO,kBAAU,OAAc,QAAd,EAAf,EAAiBC,oBAAY,WAA1B,EAAH,EAA+BN,IAChDO,EAA6B,OAARL,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUC,eAAO,WAAT,EAAR,EAAmBK,QAC1C,SAACxB,GAAG,OAAQ,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKgB,MAAOI,KAEnBK,EAAiC,QAAjB,EAAGX,EAAIO,kBAAU,OAAc,QAAd,EAAd,EAAgBK,oBAAY,WAAd,EAAd,EAA8BxC,KACnD,SAACc,EAAK5E,GAAO,IAAD,IACV,MAAO,CACLoC,UAAc,OAAHwC,QAAG,IAAHA,GAAc,QAAX,EAAHA,EAAKxC,iBAAS,WAAX,EAAH,EAAgBwD,IAC3BvD,cAAkB,OAAHuC,QAAG,IAAHA,OAAG,EAAHA,EAAK5B,SACpBV,YAAa,KACbG,WAAY,EACZG,YAAgB,OAAHgC,QAAG,IAAHA,OAAG,EAAHA,EAAKC,IAClBhC,MAAU,OAAH+B,QAAG,IAAHA,OAAG,EAAHA,EAAK/B,MACZG,SAAa,OAAH4B,QAAG,IAAHA,OAAG,EAAHA,EAAK5B,SACfvC,SAAa,OAAHmE,QAAG,IAAHA,GAAc,QAAX,EAAHA,EAAKxC,iBAAS,WAAX,EAAH,EAAgB3B,aAI5BiD,EAAM,GACQ,QAAd,EAAAgC,EAAIO,kBAAU,aAAd,EAAgBK,aAAa1C,QAAS,IAKxCF,GAJwB,QAAjB,EAAGgC,EAAIO,kBAAU,OAAc,QAAd,EAAd,EAAgBK,oBAAY,WAAd,EAAd,EAA8BxC,KAAI,SAACC,GAE3C,OADA9D,EAAWY,GAASkD,EAAIlB,MAAQkB,EAAIc,KAC1B,OAAHd,QAAG,IAAHA,OAAG,EAAHA,EAAKlB,QAAW,OAAHkB,QAAG,IAAHA,OAAG,EAAHA,EAAKc,SAEnBX,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,KAC7BC,QAAQC,IAAI,aAAcZ,IAE5BvC,GAAiBuC,EAAIa,QAAQ,IAC7BjB,GAAW+C,GACX7E,GAAe2E,GACfpF,GAAU,MAEXwF,OAAM,SAACC,GACNnC,QAAQC,IAAIkC,MAGhB7F,EAAgB,CACdL,eAAmB,OAAHoF,QAAG,IAAHA,GAAe,QAAZ,EAAHA,EAAKO,kBAAU,WAAZ,EAAH,EAAiBQ,uBACjClG,WAAe,OAAHmF,QAAG,IAAHA,GAAe,QAAZ,EAAHA,EAAKO,kBAAU,WAAZ,EAAH,EAAiBS,WAC7BlG,cAAkB,OAAHkF,QAAG,IAAHA,GAAe,QAAZ,EAAHA,EAAKO,kBAAU,WAAZ,EAAH,EAAiBU,aAChClG,SAAa,OAAHiF,QAAG,IAAHA,GAAe,QAAZ,EAAHA,EAAKO,kBAAU,WAAZ,EAAH,EAAiBxF,cAG9B8F,OAAM,SAACC,GACNnC,QAAQC,IAAIkC,QAEf,IACHxB,qBAAU,WACR,IAAM4B,EAAW1B,KAAKC,MAAMC,aAAaC,QAAQ,aAEjD/D,GAAYsF,KACX,IAEH,IAgKY,GA1ENC,GAAa,uCAAG,WAAO9E,GAAC,2EAmB3B,OAlBDA,EAAE+E,iBAEa5B,KAAKC,MAAMC,aAAaC,QAAQ,aAE3C0B,EAAqB,OAAP5E,SAAO,IAAPA,QAAO,EAAPA,GAAS2B,KAAI,SAACc,EAAK5E,GACnC,MAAO,CACLoC,UAAc,OAAHwC,QAAG,IAAHA,OAAG,EAAHA,EAAKxC,UAChB4E,KAAS,OAAHpC,QAAG,IAAHA,OAAG,EAAHA,EAAKlC,WACXG,MAAU,OAAH+B,QAAG,IAAHA,OAAG,EAAHA,EAAK/B,MACZgC,IAAKZ,OAAU,OAAHW,QAAG,IAAHA,OAAG,EAAHA,EAAKnC,YACjBO,SAAa,OAAH4B,QAAG,IAAHA,OAAG,EAAHA,EAAKlC,WACfuE,YAAe,OAAHrC,QAAG,IAAHA,OAAG,EAAHA,EAAK/B,OAAQoB,OAAU,OAAHW,QAAG,IAAHA,OAAG,EAAHA,EAAKnC,gBAIrCyE,EAAU,CACZH,YAAaA,EACbI,aAAclD,OAAO7C,KACrB,EAAD,OAEKgG,aAAKC,KAAqC,QAAhB,EAAE9F,GAAY,UAAE,aAAd,EAAgBqE,IAAKsB,GACpDzB,MAAK,SAACC,GACLrB,QAAQC,IAAIoB,GACZ4B,IAAK,mCAENf,OAAM,SAACC,GACNc,IAAK,uBAELjD,QAAQC,IAAIkC,MACX,KAAD,sCACL,gBA/BkB,sCA0EnB,OAAI1F,EAEA,oCACE,kBAAC,IAAI,KACH,kBAAC,IAAQ,KACP,yBACEyG,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAc,QAAR,GAAEC,cAAM,cAAN,GAAQC,cAElB,4BAAI,kBAQd,6BACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACC,UAAU,OACb,kBAAC,IAAG,CAACC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIH,UAAU,aAClC,6BACE,wBAAIA,UAAU,IAAG,wCAGrB,kBAAC,IAAG,KACF,yBAAKA,UAAU,eACb,kBAAC,IAAK,CACJI,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLZ,MAAO,CAAEa,OAAQ,WACjBN,UAAU,mBACVO,MAAM,UACNC,QAAS,kBAAMH,EAAQI,WACtB,IAAI,cASjB,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACT,UAAU,MAAMU,SAAU3B,IAE9B,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACiB,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,8BAEP,kBAAC,IAAW,CACVW,UAAQ,EACRC,0BAAwB,EACxBC,eAAgB,EAEhBC,SAAS,QAETC,eAAgBtH,GAGhBuH,aAAa,qBAKpB3G,KACQ,OAAPA,SAAO,IAAPA,QAAO,EAAPA,GAAS2B,KAAI,SAAC3B,EAAStB,GACrB,IAAIsF,EAAgC,OAAXnF,QAAW,IAAXA,OAAW,EAAXA,EAAaoF,QACpC,SAACxB,GAAG,OAAQ,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKgB,OAAc,OAAPzD,QAAO,IAAPA,OAAO,EAAPA,EAASC,cAGhC,OACE,oCACE,kBAAC,IAAG,CAAC0F,UAAU,GAAGiB,IAAKlI,GACrB,kBAAC,IAAG,CAACiH,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,iBACP,kBAAC,IAAW,CACVY,0BAAwB,EACxBC,eAAgB,EAEhBC,SAAS,QACTI,QAAShI,EACT6H,eAAgB1C,EAQhB8C,SAAU,SAACxE,EAAcC,GACvBF,GACEC,EACAC,EACA7D,IAGJiI,aAAa,oBAInB,kBAAC,IAAG,CAAChB,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,2BAAOoB,IAAI,QAAO,iBAClB,4BACEC,UAAQ,EACRrB,UAAU,eACV7F,KAAK,gBACLmH,YAAY,gBACZlH,MAAc,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASE,cAIhBT,GAAG,QACH,4BAAQM,MAAM,IAAG,mBACjB,4BAAQA,MAAM,MAAK,iBACnB,4BAAQA,MAAM,OAAM,gBACpB,4BAAQA,MAAM,KAAI,YAClB,4BAAQA,MAAM,SAAQ,sBACtB,4BAAQA,MAAM,KAAI,aAClB,4BAAQA,MAAM,MAAK,mBACnB,4BAAQA,MAAM,MAAK,mBACnB,4BAAQA,MAAM,MAAK,aACnB,4BAAQA,MAAM,MAAK,aACnB,4BAAQA,MAAM,MAAK,uBACnB,4BAAQA,MAAM,KAAI,aAClB,4BAAQA,MAAM,MAAK,mBACnB,4BAAQA,MAAM,KAAI,cAClB,4BAAQA,MAAM,OAAM,gBACpB,4BAAQA,MAAM,MAAK,aACnB,4BAAQA,MAAM,SAAK,mBACnB,4BAAQA,MAAM,SAAK,sBACnB,4BAAQA,MAAM,MAAK,eACnB,4BAAQA,MAAM,OAAM,aACpB,4BAAQA,MAAM,OAAM,2BACpB,4BAAQA,MAAM,QAAO,8BAGrB,4BAAQA,MAAM,KAAI,cAClB,4BAAQA,MAAM,KAAI,YAClB,4BAAQA,MAAM,KAAI,YAClB,4BAAQA,MAAM,MAAK,oBAIzB,kBAAC,IAAG,CAAC4F,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,UACS,OAAP3F,QAAO,IAAPA,OAAO,EAAPA,EAASa,YAAmB,OAAPb,QAAO,IAAPA,OAAO,EAAPA,EAASa,WAEvC,kBAAC,IAAK,CACJqG,KAAK,SACLpH,KAAK,QACLkH,UAAQ,EACRG,iBAAA,EACAC,SAAU,SAACxH,GAAC,OACV0B,GAA8B1B,EAAGlB,IAEnCuI,YAAY,QACZlH,MAAOC,EAAQU,UAIrB,kBAAC,IAAG,CAACiF,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,WACP,kBAAC,IAAK,CACJqB,UAAQ,EACRE,KAAK,SACLG,IAAK,EACLC,KAAK,MACLxH,KAAK,cACLmH,YAAY,UACZlH,MAAc,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASS,YAChB2G,SAAU,SAACxH,GAAC,OACV0B,GAA8B1B,EAAGlB,QAKzC,kBAAC,IAAG,CAACiH,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,2BAAOoB,IAAI,QAAO,eAClB,4BACET,UAAQ,EACRX,UAAU,eACV7F,KAAK,aACLmH,YAAY,aACZlH,MAAc,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASO,WAChB6G,SAAU,SAACxH,GAAC,OACVwB,GAA8BxB,EAAGlB,IAEnCe,GAAG,QACH,4BAAQM,MAAM,IAAG,mBACjB,4BAAQA,MAAM,MAAK,iBACnB,4BAAQA,MAAM,OAAM,gBACpB,4BAAQA,MAAM,KAAI,YAClB,4BAAQA,MAAM,SAAQ,sBACtB,4BAAQA,MAAM,KAAI,aAClB,4BAAQA,MAAM,MAAK,mBACnB,4BAAQA,MAAM,MAAK,mBACnB,4BAAQA,MAAM,MAAK,aACnB,4BAAQA,MAAM,MAAK,aACnB,4BAAQA,MAAM,MAAK,uBACnB,4BAAQA,MAAM,KAAI,aAClB,4BAAQA,MAAM,MAAK,mBACnB,4BAAQA,MAAM,KAAI,cAClB,4BAAQA,MAAM,OAAM,gBACpB,4BAAQA,MAAM,MAAK,aACnB,4BAAQA,MAAM,SAAK,mBACnB,4BAAQA,MAAM,SAAK,sBACnB,4BAAQA,MAAM,MAAK,eACnB,4BAAQA,MAAM,OAAM,aACpB,4BAAQA,MAAM,OAAM,2BACpB,4BAAQA,MAAM,QAAO,8BAGrB,4BAAQA,MAAM,KAAI,cAClB,4BAAQA,MAAM,KAAI,YAClB,4BAAQA,MAAM,KAAI,YAClB,4BAAQA,MAAM,MAAK,oBAIzB,kBAAC,IAAG,CAAC4F,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,cACP,kBAAC,IAAK,CACJuB,KAAK,SACLG,IAAK,EACLE,IAAY,OAAPvH,QAAO,IAAPA,OAAO,EAAPA,EAASS,YACd6G,KAAK,MACLxH,KAAK,aACLmH,YAAY,aACZlH,MAAc,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASM,WAChB8G,SAAU,SAACxH,GAAC,OACV0B,GAA8B1B,EAAGlB,QAKzC,kBAAC,IAAG,CAACiH,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,gBACP,kBAAC,IAAK,CACJuB,KAAK,SACLpH,KAAK,cACLkH,UAAQ,EACRC,YAAY,cACZlH,OAAc,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASU,QAAe,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASM,gBAiBvC,kBAAC,IAAG,CAACqF,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,eACP,kBAAC,IAAK,CACJuB,KAAK,SACLpH,KAAK,aACLkH,UAAQ,EACRC,YAAY,WACZlH,OAAc,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASU,QAAe,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASS,uBAkCjD,kBAAC,IAAG,MAsCJ,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACkF,UAAU,OAAOC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACvC,yBAAKH,UAAU,+BACb,kBAAC,IAAK,CAACA,UAAU,QAAO,gBACR,IACd,+BACG5G,IAAkC,OAAjBA,GACd,EACAA,GAAe,OAIzB,yBAAK4G,UAAU,+BACb,kBAAC,IAAK,CAACA,UAAU,QAAO,iBACP,IACf,+BACG1G,IAA8C,OAAvBA,GACpB,EACAA,GAAqB,SAMnC,kBAAC,IAAG,KACF,kBAAC,IAAG,KACF,yBAAK0G,UAAU,iCACb,kBAAC,IAAO6B,OAAM,CAACtB,MAAM,UAAUgB,KAAK,SAASvB,UAAU,QAAO,gBAS1E,kBAAC,IAAK,eACJP,MAAO,CAAEqC,SAAU,UACnBC,OAAQpI,GACRqI,OAAQnI,IACJvB,GACJ,kBAAC,IAAW,CAAC0J,OAAQnI,IAAW,eAChC,kBAAC,IAAS,KACR,kBAAC,IAAI,CAACmG,UAAU,MAAMU,SAAU3B,IAC9B,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACiB,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,2BAEP,2BACEA,UAAU,eACV7F,KAAK,iBACLC,MAAmB,OAAZxB,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,eACrBiJ,SAAUzH,GACVuH,KAAK,aAIX,kBAAC,IAAG,CAACvB,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,gBAEP,kBAAC,IAAW,CACVA,UAAU,eACV7F,KAAK,aACLC,MAAmB,OAAZxB,QAAY,IAAZA,OAAY,EAAZA,EAAcH,WACrBgJ,SAAUzH,GACVuH,KAAK,UACL,gCAAQ,cACR,4BAAQnH,MAAO,IAAI,MACnB,4BAAQA,MAAO,GAAG,QAIxB,kBAAC,IAAG,CAAC4F,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,kBAEP,2BACEA,UAAU,eACV7F,KAAK,gBACLC,MAAmB,OAAZxB,QAAY,IAAZA,OAAY,EAAZA,EAAcF,cACrB+I,SAAUzH,GACVuH,KAAK,aAIX,kBAAC,IAAG,CAACvB,UAAU,OAAOC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAKH,UAAU,IACb,kBAAC,IAAK,KAAC,aACP,2BACEA,UAAU,eACV5F,MAAmB,OAAZxB,QAAY,IAAZA,OAAY,EAAZA,EAAcD,SACrBwB,KAAK,WACLsH,SAAUzH,GACVuH,KAAK,cAYb,kBAAC,IAAG,KACF,kBAAC,IAAG,KACF,yBAAKvB,UAAU,8BACb,gCAAQ,cAAoB,IAC3B5G,IAAkC,OAAjBA,GAAyB,EAAIA,GAAe,KAEhE,yBAAK4G,UAAU,8BACb,gCAAQ,mBACK,OAAZpH,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,gBAEjB,yBAAKwH,UAAU,8BACb,gCAAQ,SAAe,KACT,OAAZpH,QAAY,IAAZA,OAAY,EAAZA,EAAcH,YAAaW,GAAiB,KAEhD,yBAAK4G,UAAU,8BACb,gCAAQ,WACK,OAAZpH,QAAY,IAAZA,OAAY,EAAZA,EAAcF,eAEjB,yBAAKsH,UAAU,8BACb,gCAAQ,eACK,OAAZpH,QAAY,IAAZA,OAAY,EAAZA,EAAcD,UAEjB,yBAAKqH,UAAU,8BACb,gCAAQ,gBAOwB,QAPH,EAG3B7D,OAAO/C,IACP+C,OAAmB,OAAZvD,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,gBACrB2D,OAAmB,OAAZvD,QAAY,IAAZA,OAAY,EAAZA,EAAcF,eACpByD,OAAO/C,KAA6B,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcH,YAAc,IACrD0D,OAAmB,OAAZvD,QAAY,IAAZA,OAAY,EAAZA,EAAcD,iBAAS,aAL/B,EAME8D,QAAQ,MAIjB,kBAAC,IAAG,KACF,kBAAC,IAAG,KACF,yBAAKuD,UAAU,iCACb,kBAAC,IAAM,CAACO,MAAM,UAAUgB,KAAK,UAAS,UAE5B,SAMpB,kBAAC,IAAW","file":"static/js/578.939e119e.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { Routes, Route, useParams } from \"react-router-dom\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  UnitListView,\r\n  WarehousetoWareHouseTrx,\r\n  Warehouse_Temporarlylist,\r\n  _Post,\r\n  _PostSave,\r\n  _Get,\r\n  _Put,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  Save_Producton_Process,\r\n  Save_Producton_Return,\r\n  ViewOne_Production,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\n\r\nconst AddReturnProductionProduct = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [ExtraCharges, setExtraCharges] = useState({\r\n    Other_Expenses: 100,\r\n    GSTApplied: 18,\r\n    Other_charges: 50,\r\n    discount: 10,\r\n  });\r\n\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [Loader, setLoader] = useState(false);\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [ProductWTWList, setProductWTWList] = useState([]);\r\n  const [ProductinProduct, setProductionProduct] = useState({});\r\n  const [WareHousetwo, setWareHousetwo] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [GrandReturnTotalAmt, setGrandReturnTotalAmt] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [MainProduct, setMainProduct] = useState({});\r\n\r\n  const [modalOne, setModalOne] = useState(false);\r\n  const toggleOne = () => setModalOne(!modalOne);\r\n  let { id } = useParams();\r\n\r\n  const handleExtraCharge = (e) => {\r\n    let { name, value } = e.target;\r\n    setExtraCharges({\r\n      ...ExtraCharges,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      selecetedUnit: \"\",\r\n      AvailaleQty: null,\r\n      availableQty: \"\",\r\n      ReturnPrice: \"\",\r\n      Return_Qty: \"\",\r\n      ReturnUnit: \"\",\r\n      transferQty: 1,\r\n      RequiredQty: \"\",\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      stockTrxDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= Number(e.target.value)) {\r\n      setIndex(index);\r\n      console.log(product);\r\n\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      if (name.includes(\"transferQty\")) {\r\n        // list[index][\"Size\"] = Number(value);\r\n        let available = Number(list[index][\"AvailaleQty\"]);\r\n        let Askingfor = Number(value);\r\n        if (available >= Askingfor) {\r\n          list[index][name] = Askingfor;\r\n        } else {\r\n          swal(\"Can not Transfer More then Stock\");\r\n          list[index][name] = available - 1;\r\n        }\r\n      } else {\r\n        list[index][name] = value;\r\n      }\r\n      console.log(GrandTotal);\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map((val) => {\r\n          GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n          list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n          return val.Size * val.price * val.transferQty;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      // console.log(list)\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const handleProductChangeProductTwo = (e, index) => {\r\n    setIndex(index);\r\n\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    setProduct(list);\r\n  };\r\n  const handleSubmitCharges = (e) => {\r\n    e.preventDefault();\r\n\r\n    const list = [...product];\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n    }\r\n\r\n    let Totalamount =\r\n      amt +\r\n      ExtraCharges?.Other_Expenses +\r\n      (amt * ExtraCharges?.GSTApplied) / 100 +\r\n      ExtraCharges?.Other_charges -\r\n      ExtraCharges?.discount;\r\n\r\n    setGrandTotalAmt(Totalamount.toFixed(2));\r\n  };\r\n  const handleProductChangeProductone = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n\r\n    let amt = 0;\r\n    let ReturnAmt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        GrandTotal[index] = val.price * val.RequiredQty;\r\n        list[index][\"totalprice\"] = val.price * val.RequiredQty;\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      const Y = list?.map((val) => {\r\n        return val.price * Number(val.Return_Qty);\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      ReturnAmt = Y.reduce((a, b) => a + b);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt.toFixed(2));\r\n    setGrandReturnTotalAmt(ReturnAmt.toFixed(2));\r\n  };\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleRemoveSelectedone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.Size * ele?.price * SelectedSize[i]?.unitQty);\r\n      let indextotal = ele?.Size * SelectedSize[i]?.unitQty;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?.productId?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionProduct = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProduct.discount = selectedItem?.discount;\r\n      if (selectedItem?.unitType) {\r\n        updatedProduct.unitType = selectedItem?.unitType.split(\" \")[1];\r\n      }\r\n      // updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem?.unitQty; // Update the price of the copied product\r\n      updatedProduct.unitType = selectedItem?.primaryUnit;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty);\r\n        let indextotal =\r\n          ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr?.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URl = ViewOne_Production;\r\n    setLoader(true);\r\n    _Get(URl, id)\r\n      .then((res) => {\r\n        ProductListView(userdata?._id, userdata?.database)\r\n          .then((Response) => {\r\n            console.log(Response?.Product);\r\n            setProductList(Response?.Product);\r\n            let MainProduct_id = res?.Production?.product_name?._id;\r\n            let SeletedMainProduct = Response?.Product?.filter(\r\n              (ele) => ele?._id == MainProduct_id\r\n            );\r\n            let selectRawProduct = res.Production?.productItems?.map(\r\n              (ele, i) => {\r\n                return {\r\n                  productId: ele?.productId?._id,\r\n                  selecetedUnit: ele?.unitType,\r\n                  AvailaleQty: null,\r\n                  Return_Qty: 0,\r\n                  RequiredQty: ele?.qty,\r\n                  price: ele?.price,\r\n                  unitType: ele?.unitType,\r\n                  discount: ele?.productId?.discount,\r\n                };\r\n              }\r\n            );\r\n            let amt = 0;\r\n            if (res.Production?.productItems.length > 0) {\r\n              const x = res.Production?.productItems?.map((val) => {\r\n                GrandTotal[index] = val.price * val.qty;\r\n                return val?.price * val?.qty;\r\n              });\r\n              amt = x.reduce((a, b) => a + b);\r\n              console.log(\"GrandTotal\", amt);\r\n            }\r\n            setGrandTotalAmt(amt.toFixed(2));\r\n            setProduct(selectRawProduct);\r\n            setMainProduct(SeletedMainProduct);\r\n            setLoader(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        setExtraCharges({\r\n          Other_Expenses: res?.Production?.miscellaneousExpennses,\r\n          GSTApplied: res?.Production?.gstApplied,\r\n          Other_charges: res?.Production?.otherCharges,\r\n          discount: res?.Production?.discount,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        selecetedUnit: \"\",\r\n        AvailaleQty: null,\r\n        availableQty: \"\",\r\n        ReturnPrice: \"\",\r\n        Return_Qty: \"\",\r\n        ReturnUnit: \"\",\r\n        transferQty: 1, //\r\n        RequiredQty: \"\",\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Size: \"\",\r\n        unitType: \"\",\r\n        stockTrxDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const WareHousetoWareHouse = (e) => {\r\n    e.preventDefault();\r\n    // body: warehouse, productId, Size, unitType, transferQty, price, totalPrice;\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        unitType: ele?.unitType,\r\n        price: ele?.price,\r\n        Size: ele?.Size,\r\n        transferQty: ele?.transferQty,\r\n        totalPrice: ele?.totalprice,\r\n        currentStock: ele?.transferQty * ele?.Size,\r\n      };\r\n    });\r\n    let payload = {\r\n      productItems: Allproduct,\r\n      warehouseToId: WareHousetwo[0]?._id,\r\n      warehouseFromId: ProductinProduct[0]?._id,\r\n      stockTransferDate: StockTrxdate,\r\n      grandTotal: grandTotalAmt,\r\n      transferStatus: \"InProcess\",\r\n      created_by: userdata?._id,\r\n    };\r\n    console.log(payload);\r\n    WarehousetoWareHouseTrx(payload)\r\n      .then((res) => {\r\n        //   window.location.reload();\r\n        // history.goBack();\r\n        swal(\"Stock transerffered is Initiated\");\r\n\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n  const handleAddCharges = (e) => {\r\n    toggleOne();\r\n\r\n    e.preventDefault();\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    debugger;\r\n    let returnItems = product?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.productId,\r\n        unit: ele?.ReturnUnit,\r\n        price: ele?.price,\r\n        qty: Number(ele?.Return_Qty),\r\n        unitType: ele?.ReturnUnit,\r\n        totalPrice: ele?.price * Number(ele?.Return_Qty),\r\n      };\r\n    });\r\n\r\n    let payload = {\r\n      returnItems: returnItems,\r\n      returnAmount: Number(GrandReturnTotalAmt),\r\n    };\r\n\r\n    await _Put(Save_Producton_Return, MainProduct[0]?._id, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"Production Return is Created\");\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Somthing went Wrong\");\r\n\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList[0]);\r\n    setProductionProduct(selectedList[0]);\r\n    // setProductList(selectedList[0].productItems);\r\n  };\r\n  const onSelectone = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n\r\n    setProductionProduct(selectedList);\r\n    // const list = [...product];\r\n    let MySelectedwarehouseProduct = selectedList[0].productItems?.map(\r\n      (ele, i) => {\r\n        let myproduct = ele?.productId;\r\n        ele[\"Product_Title\"] = myproduct?.Product_Title;\r\n        ele[\"Product_id\"] = myproduct?._id;\r\n        ele[\"Product_MRP\"] = myproduct?.Product_MRP;\r\n        ele[\"discount\"] = myproduct?.discount;\r\n        ele[\"transferQty\"] = myproduct?.transferQty;\r\n        ele[\"MIN_stockalert\"] = myproduct?.MIN_stockalert;\r\n      }\r\n    );\r\n\r\n    console.log(selectedList[0]?.productItems);\r\n\r\n    setProductWTWList(selectedList[0]?.productItems);\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onRemoveone = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onSelect2 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n    setWareHousetwo(selectedList);\r\n  };\r\n  const onRemove2 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  if (Loader) {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardBody>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: window?.innerHeight,\r\n              }}>\r\n              <h3>Loading...</h3>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col lg=\"8\" md=\"8\" sm=\"8\" className=\"mb-2 mt-1\">\r\n            <div>\r\n              <h1 className=\"\">Add Return Raw Material of Product</h1>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"float-right\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"float-right mr-1\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.goBack()}>\r\n                    {\" \"}\r\n                    Back\r\n                    {/* <FaPlus size={15} /> Create User */}\r\n                  </Button>\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={submitHandler}>\r\n            {/* <Form className=\"m-1\" onSubmit={handleAddCharges}> */}\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Choose Production Product </Label>\r\n\r\n                  <Multiselect\r\n                    required\r\n                    disablePreSelectedValues\r\n                    selectionLimit={1}\r\n                    // showCheckbox=\"true\"\r\n                    isObject=\"false\"\r\n                    // options={ProductList} // Options to display in the dropdown\r\n                    selectedValues={MainProduct} // Preselected value to persist in dropdown\r\n                    // onSelect={onSelect1} // Function will trigger on select event\r\n                    // onRemove={onRemove1} // Function will trigger on remove event\r\n                    displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {product &&\r\n              product?.map((product, index) => {\r\n                let SeletedMainProduct = ProductList?.filter(\r\n                  (ele) => ele?._id == product?.productId\r\n                );\r\n\r\n                return (\r\n                  <>\r\n                    <Row className=\"\" key={index}>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Choose item *</Label>\r\n                          <Multiselect\r\n                            disablePreSelectedValues\r\n                            selectionLimit={1}\r\n                            // showCheckbox=\"true\"\r\n                            isObject=\"false\"\r\n                            options={ProductList}\r\n                            selectedValues={SeletedMainProduct} // Preselected value to persist in dropdown\r\n                            // onSelect={(selectedList, selectedItem) =>\r\n                            //   handleSelectionProduct(\r\n                            //     selectedList,\r\n                            //     selectedItem,\r\n                            //     index\r\n                            //   )\r\n                            // }\r\n                            onRemove={(selectedList, selectedItem) => {\r\n                              handleRemoveSelected(\r\n                                selectedList,\r\n                                selectedItem,\r\n                                index\r\n                              );\r\n                            }}\r\n                            displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <label for=\"unit\">Selected Unit</label>\r\n                          <select\r\n                            readOnly\r\n                            className=\"form-control\"\r\n                            name=\"selecetedUnit\"\r\n                            placeholder=\"selecetedUnit\"\r\n                            value={product?.selecetedUnit}\r\n                            // onChange={(e) =>\r\n                            //   handleProductChangeProductTwo(e, index)\r\n                            // }\r\n                            id=\"unit\">\r\n                            <option value=\"\">--select Unit--</option>\r\n                            <option value=\"kg\">Kilogram (kg)</option>\r\n                            <option value=\"Pcs\">Pieces (Pcs)</option>\r\n                            <option value=\"g\">Gram (g)</option>\r\n                            <option value=\"tonne\">Metric Ton (tonne)</option>\r\n                            <option value=\"m\">Meter (m)</option>\r\n                            <option value=\"cm\">Centimeter (cm)</option>\r\n                            <option value=\"mm\">Millimeter (mm)</option>\r\n                            <option value=\"in\">Inch (in)</option>\r\n                            <option value=\"ft\">Foot (ft)</option>\r\n                            <option value=\"m3\">Cubic Meter (m³)</option>\r\n                            <option value=\"L\">Liter (L)</option>\r\n                            <option value=\"ml\">Milliliter (ml)</option>\r\n                            <option value=\"s\">Second (s)</option>\r\n                            <option value=\"min\">Minute (min)</option>\r\n                            <option value=\"hr\">Hour (hr)</option>\r\n                            <option value=\"°C\">Celsius (°C)</option>\r\n                            <option value=\"°F\">Fahrenheit (°F)</option>\r\n                            <option value=\"Pa\">Pascal (Pa)</option>\r\n                            <option value=\"bar\">Bar (bar)</option>\r\n                            <option value=\"m/s\">Meters per Second (m/s)</option>\r\n                            <option value=\"km/h\">\r\n                              Kilometers per Hour (km/h)\r\n                            </option>\r\n                            <option value=\"A\">Ampere (A)</option>\r\n                            <option value=\"V\">Volt (V)</option>\r\n                            <option value=\"W\">Watt (W)</option>\r\n                            <option value=\"kW\">Kilowatt (kW)</option>\r\n                          </select>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>\r\n                            Price/{product?.unitType && product?.unitType}\r\n                          </Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            readOnly\r\n                            aria-readonly\r\n                            onChange={(e) =>\r\n                              handleProductChangeProductone(e, index)\r\n                            }\r\n                            placeholder=\"Price\"\r\n                            value={product.price}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Req_Qty</Label>\r\n                          <Input\r\n                            readOnly\r\n                            type=\"number\"\r\n                            min={0}\r\n                            step=\"any\"\r\n                            name=\"RequiredQty\"\r\n                            placeholder=\"Req_Qty\"\r\n                            value={product?.RequiredQty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProductone(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <label for=\"unit\">Return Unit</label>\r\n                          <select\r\n                            required\r\n                            className=\"form-control\"\r\n                            name=\"ReturnUnit\"\r\n                            placeholder=\"ReturnUnit\"\r\n                            value={product?.ReturnUnit}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProductTwo(e, index)\r\n                            }\r\n                            id=\"unit\">\r\n                            <option value=\"\">--select Unit--</option>\r\n                            <option value=\"kg\">Kilogram (kg)</option>\r\n                            <option value=\"Pcs\">Pieces (Pcs)</option>\r\n                            <option value=\"g\">Gram (g)</option>\r\n                            <option value=\"tonne\">Metric Ton (tonne)</option>\r\n                            <option value=\"m\">Meter (m)</option>\r\n                            <option value=\"cm\">Centimeter (cm)</option>\r\n                            <option value=\"mm\">Millimeter (mm)</option>\r\n                            <option value=\"in\">Inch (in)</option>\r\n                            <option value=\"ft\">Foot (ft)</option>\r\n                            <option value=\"m3\">Cubic Meter (m³)</option>\r\n                            <option value=\"L\">Liter (L)</option>\r\n                            <option value=\"ml\">Milliliter (ml)</option>\r\n                            <option value=\"s\">Second (s)</option>\r\n                            <option value=\"min\">Minute (min)</option>\r\n                            <option value=\"hr\">Hour (hr)</option>\r\n                            <option value=\"°C\">Celsius (°C)</option>\r\n                            <option value=\"°F\">Fahrenheit (°F)</option>\r\n                            <option value=\"Pa\">Pascal (Pa)</option>\r\n                            <option value=\"bar\">Bar (bar)</option>\r\n                            <option value=\"m/s\">Meters per Second (m/s)</option>\r\n                            <option value=\"km/h\">\r\n                              Kilometers per Hour (km/h)\r\n                            </option>\r\n                            <option value=\"A\">Ampere (A)</option>\r\n                            <option value=\"V\">Volt (V)</option>\r\n                            <option value=\"W\">Watt (W)</option>\r\n                            <option value=\"kW\">Kilowatt (kW)</option>\r\n                          </select>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Return_Qty</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            min={0}\r\n                            max={product?.RequiredQty}\r\n                            step=\"any\"\r\n                            name=\"Return_Qty\"\r\n                            placeholder=\"Return_Qty\"\r\n                            value={product?.Return_Qty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProductone(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Return Total</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"ReturnPrice\"\r\n                            readOnly\r\n                            placeholder=\"ReturnPrice\"\r\n                            value={product?.price * product?.Return_Qty}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      {/* <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Discount</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"discount\"\r\n                            readOnly\r\n                            placeholder=\"Discount\"\r\n                            value={product.discount}\r\n                          />\r\n                        </div>\r\n                      </Col> */}\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Total Price</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"totalprice\"\r\n                            readOnly\r\n                            placeholder=\"TtlPrice\"\r\n                            value={product?.price * product?.RequiredQty}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      {/* <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <div className=\"btnStyle\">\r\n                          {index ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              color=\"danger\"\r\n                              className=\"button remove \"\r\n                              //   onClick={() => removeMoreProduct(index)}\r\n                            >\r\n                              - Remove\r\n                            </Button>\r\n                          ) : null}\r\n                        </div>\r\n\r\n                        <div className=\"btnStyle\">\r\n                          <Button\r\n                            className=\"ml-1 mb-1\"\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            // onClick={() => addMoreProduct()}\r\n                          >\r\n                            + Add\r\n                          </Button>\r\n                        </div>\r\n                      </Col> */}\r\n                    </Row>\r\n                  </>\r\n                );\r\n              })}\r\n            <Row>\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Discount</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"discount\"\r\n                          readOnly\r\n                          placeholder=\"Dissct\"\r\n                          value={product.discount}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Shipping Cost</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"Shipcst\"\r\n                          readOnly\r\n                          placeholder=\"Shipcst\"\r\n                          value={product.Shipping}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Tax</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"tax\"\r\n                          readOnly\r\n                          placeholder=\"Tax\"\r\n                          value={product.tax}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                <div className=\" d-flex justify-content-end\">\r\n                  <Label className=\"pr-5\">\r\n                    Grand Total :{\" \"}\r\n                    <stron>\r\n                      {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                        ? 0\r\n                        : grandTotalAmt}{\" \"}\r\n                    </stron>\r\n                  </Label>\r\n                </div>\r\n                <div className=\" d-flex justify-content-end\">\r\n                  <Label className=\"pr-5\">\r\n                    Return Total :{\" \"}\r\n                    <stron>\r\n                      {GrandReturnTotalAmt && GrandReturnTotalAmt == \"NaN\"\r\n                        ? 0\r\n                        : GrandReturnTotalAmt}{\" \"}\r\n                    </stron>\r\n                  </Label>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        style={{ maxWidth: \"1050px\" }}\r\n        isOpen={modalOne}\r\n        toggle={toggleOne}\r\n        {...args}>\r\n        <ModalHeader toggle={toggleOne}>Add Charges</ModalHeader>\r\n        <ModalBody>\r\n          <Form className=\"m-1\" onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Miscellaneous Expenses </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_Expenses\"\r\n                    value={ExtraCharges?.Other_Expenses}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>GST Applied </Label>\r\n\r\n                  <CustomInput\r\n                    className=\"form-control\"\r\n                    name=\"GSTApplied\"\r\n                    value={ExtraCharges?.GSTApplied}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"select\">\r\n                    <option>--select--</option>\r\n                    <option value={18}>18</option>\r\n                    <option value={9}>9</option>\r\n                  </CustomInput>\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Other Charges </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_charges\"\r\n                    value={ExtraCharges?.Other_charges}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Discount </Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    value={ExtraCharges?.discount}\r\n                    name=\"discount\"\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\" mt-2\">\r\n                  <Button color=\"primary\" onClick={handleSubmitCharges}>\r\n                    Add Charges\r\n                  </Button>\r\n                </div>\r\n              </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> SubTotal:</strong>{\" \"}\r\n                  {grandTotalAmt && grandTotalAmt == \"NaN\" ? 0 : grandTotalAmt}{\" \"}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> Miscellaneous:</strong>\r\n                  {ExtraCharges?.Other_Expenses}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> GST:</strong>{\" \"}\r\n                  {(ExtraCharges?.GSTApplied * grandTotalAmt) / 100}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> other:</strong>\r\n                  {ExtraCharges?.Other_charges}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> Discount: </strong>\r\n                  {ExtraCharges?.discount}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> GrandTotal:</strong>\r\n\r\n                  {(\r\n                    Number(grandTotalAmt) +\r\n                    Number(ExtraCharges?.Other_Expenses) +\r\n                    Number(ExtraCharges?.Other_charges) +\r\n                    (Number(grandTotalAmt) * ExtraCharges?.GSTApplied) / 100 -\r\n                    Number(ExtraCharges?.discount)\r\n                  )?.toFixed(2)}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>{\" \"}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter></ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddReturnProductionProduct;\r\n"],"sourceRoot":""}