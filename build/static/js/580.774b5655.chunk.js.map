{"version":3,"sources":["views/apps/freshlist/order/EditProductionProcess.js"],"names":["GrandTotal","SelectedITems","EditProductionProcess","args","useState","Other_Expenses","GSTApplied","Other_charges","discount","ExtraCharges","setExtraCharges","setIndex","index","Loader","setLoader","ProductList","setProductList","ProductinProduct","grandTotalAmt","setGrandTotalAmt","setUserInfo","MainProduct","setMainProduct","modalOne","setModalOne","toggleOne","id","useParams","handleExtraCharge","e","target","name","value","product","productId","selecetedUnit","AvailaleQty","availableQty","transferQty","RequiredQty","price","totalprice","Size","unitType","stockTrxDate","targetEndDate","Shipping","tax","grandTotal","setProduct","handleProductChangeProductTwo","list","handleProductChangeProductone","Number","amt","length","map","val","reduce","a","b","console","log","toFixed","handleRemoveSelected","selectedList","selectedItem","splice","ele","i","qty","Product_MRP","indextotal","useEffect","userdata","JSON","parse","localStorage","getItem","URl","ViewOne_Production","_Get","then","res","ProductListView","_id","database","Response","Product","MainProduct_id","Production","product_name","SeletedMainProduct","filter","selectRawProduct","productItems","catch","err","miscellaneousExpennses","gstApplied","otherCharges","userInfo","addMoreProduct","removeMoreProduct","newFormValues","style","display","justifyContent","alignItems","height","window","innerHeight","className","lg","md","sm","render","history","cursor","color","onClick","goBack","onSubmit","preventDefault","required","disablePreSelectedValues","selectionLimit","isObject","selectedValues","displayValue","key","options","onSelect","push","prevProductList","updatedProductList","updatedProduct","split","handleSelectionProduct","onRemove","for","placeholder","onChange","type","readOnly","aria-readonly","min","step","Ripple","maxWidth","isOpen","toggle","Allproduct","unit","totalPrice","ALL","payload","created_by","_PostSave","Save_Producton_Process","swal"],"mappings":"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","file":"static/js/580.774b5655.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { Routes, Route, useParams } from \"react-router-dom\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  UnitListView,\r\n  WarehousetoWareHouseTrx,\r\n  Warehouse_Temporarlylist,\r\n  _Post,\r\n  _PostSave,\r\n  _Get,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  Save_Producton_Process,\r\n  ViewOne_Production,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst EditProductionProcess = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [ExtraCharges, setExtraCharges] = useState({\r\n    Other_Expenses: 100,\r\n    GSTApplied: 18,\r\n    Other_charges: 50,\r\n    discount: 10,\r\n  });\r\n\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [Loader, setLoader] = useState(false);\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [ProductWTWList, setProductWTWList] = useState([]);\r\n  const [ProductinProduct, setProductionProduct] = useState({});\r\n  const [WareHousetwo, setWareHousetwo] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [MainProduct, setMainProduct] = useState({});\r\n\r\n  const [modalOne, setModalOne] = useState(false);\r\n  const toggleOne = () => setModalOne(!modalOne);\r\n  let { id } = useParams();\r\n\r\n  const handleExtraCharge = (e) => {\r\n    let { name, value } = e.target;\r\n    setExtraCharges({\r\n      ...ExtraCharges,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      selecetedUnit: \"\",\r\n      AvailaleQty: null,\r\n      availableQty: \"\",\r\n      transferQty: 1,\r\n      RequiredQty: \"\",\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      stockTrxDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= Number(e.target.value)) {\r\n      setIndex(index);\r\n      console.log(product);\r\n\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      if (name.includes(\"transferQty\")) {\r\n        // list[index][\"Size\"] = Number(value);\r\n        let available = Number(list[index][\"AvailaleQty\"]);\r\n        let Askingfor = Number(value);\r\n        if (available >= Askingfor) {\r\n          list[index][name] = Askingfor;\r\n        } else {\r\n          swal(\"Can not Transfer More then Stock\");\r\n          list[index][name] = available - 1;\r\n        }\r\n      } else {\r\n        list[index][name] = value;\r\n      }\r\n      console.log(GrandTotal);\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map((val) => {\r\n          GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n          list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n          return val.Size * val.price * val.transferQty;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      // console.log(list)\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const handleProductChangeProductTwo = (e, index) => {\r\n    setIndex(index);\r\n\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    setProduct(list);\r\n  };\r\n  const handleSubmitCharges = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    const list = [...product];\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n    }\r\n\r\n    let Totalamount =\r\n      amt +\r\n      ExtraCharges?.Other_Expenses +\r\n      (amt * ExtraCharges?.GSTApplied) / 100 +\r\n      ExtraCharges?.Other_charges -\r\n      ExtraCharges?.discount;\r\n\r\n    setGrandTotalAmt(Totalamount.toFixed(2));\r\n  };\r\n  const handleProductChangeProductone = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n\r\n    list[index][name] = Number(value);\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        GrandTotal[index] = val.price * val.RequiredQty;\r\n        list[index][\"totalprice\"] = val.price * val.RequiredQty;\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt.toFixed(2));\r\n  };\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(selectedItem); // removed item\r\n    // console.log(product);\r\n    // console.log(index);\r\n    // console.log(SelectedITems);\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleRemoveSelectedone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.Size * ele?.price * SelectedSize[i]?.unitQty);\r\n      let indextotal = ele?.Size * SelectedSize[i]?.unitQty;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?.productId?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionProduct = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProduct.discount = selectedItem?.discount;\r\n      if (selectedItem?.unitType) {\r\n        updatedProduct.unitType = selectedItem?.unitType.split(\" \")[1];\r\n      }\r\n      // updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem?.unitQty; // Update the price of the copied product\r\n      updatedProduct.unitType = selectedItem?.primaryUnit;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty);\r\n        let indextotal =\r\n          ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr?.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URl = ViewOne_Production;\r\n    setLoader(true);\r\n    _Get(URl, id)\r\n      .then((res) => {\r\n        ProductListView(userdata?._id, userdata?.database)\r\n          .then((Response) => {\r\n            console.log(Response?.Product);\r\n            setProductList(Response?.Product);\r\n            let MainProduct_id = res?.Production?.product_name?._id;\r\n            let SeletedMainProduct = Response?.Product?.filter(\r\n              (ele) => ele?._id == MainProduct_id\r\n            );\r\n            let selectRawProduct = res.Production?.productItems?.map(\r\n              (ele, i) => {\r\n                return {\r\n                  productId: ele?.productId?._id,\r\n                  selecetedUnit: ele?.unitType,\r\n                  AvailaleQty: null,\r\n                  //   transferQty: 1,\r\n                  RequiredQty: ele?.qty,\r\n                  price: ele?.price,\r\n                  unitType: ele?.unitType,\r\n                  discount: ele?.productId?.discount,\r\n                };\r\n              }\r\n            );\r\n            let amt = 0;\r\n            if (res.Production?.productItems.length > 0) {\r\n              const x = res.Production?.productItems?.map((val) => {\r\n                GrandTotal[index] = val.price * val.qty;\r\n                return val?.price * val?.qty;\r\n              });\r\n              amt = x.reduce((a, b) => a + b);\r\n              console.log(\"GrandTotal\", amt);\r\n            }\r\n            setGrandTotalAmt(amt.toFixed(2));\r\n            setProduct(selectRawProduct);\r\n            setMainProduct(SeletedMainProduct);\r\n            setLoader(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        setExtraCharges({\r\n          Other_Expenses: res?.Production?.miscellaneousExpennses,\r\n          GSTApplied: res?.Production?.gstApplied,\r\n          Other_charges: res?.Production?.otherCharges,\r\n          discount: res?.Production?.discount,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        selecetedUnit: \"\",\r\n        AvailaleQty: null,\r\n        availableQty: \"\",\r\n        transferQty: 1, //\r\n        RequiredQty: \"\",\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Size: \"\",\r\n        unitType: \"\",\r\n        stockTrxDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const WareHousetoWareHouse = (e) => {\r\n    e.preventDefault();\r\n    // body: warehouse, productId, Size, unitType, transferQty, price, totalPrice;\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        unitType: ele?.unitType,\r\n        price: ele?.price,\r\n        Size: ele?.Size,\r\n        transferQty: ele?.transferQty,\r\n        totalPrice: ele?.totalprice,\r\n        currentStock: ele?.transferQty * ele?.Size,\r\n      };\r\n    });\r\n    let payload = {\r\n      productItems: Allproduct,\r\n      warehouseToId: WareHousetwo[0]?._id,\r\n      warehouseFromId: ProductinProduct[0]?._id,\r\n      stockTransferDate: StockTrxdate,\r\n      grandTotal: grandTotalAmt,\r\n      transferStatus: \"InProcess\",\r\n      created_by: userdata?._id,\r\n    };\r\n    console.log(payload);\r\n    WarehousetoWareHouseTrx(payload)\r\n      .then((res) => {\r\n        //   window.location.reload();\r\n        // history.goBack();\r\n        swal(\"Stock transerffered is Initiated\");\r\n\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n  const handleAddCharges = (e) => {\r\n    toggleOne();\r\n    e.preventDefault();\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let Allproduct = product?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.productId,\r\n        unit: ele?.unitType,\r\n        price: ele?.price,\r\n        qty: ele?.RequiredQty,\r\n        unitType: ele?.selecetedUnit,\r\n        totalPrice: ele?.price * ele?.RequiredQty,\r\n      };\r\n    });\r\n    let ALL =\r\n      Number(grandTotalAmt) +\r\n      Number(ExtraCharges?.Other_Expenses) +\r\n      Number(ExtraCharges?.Other_charges) +\r\n      (Number(grandTotalAmt) * ExtraCharges?.GSTApplied) / 100 -\r\n      Number(ExtraCharges?.discount);\r\n    let payload = {\r\n      created_by: userdata?._id,\r\n      product_name: ProductinProduct?._id,\r\n      productItems: Allproduct,\r\n      miscellaneousExpennses: ExtraCharges?.Other_Expenses,\r\n      gstApplied: ExtraCharges?.GSTApplied,\r\n      otherCharges: ExtraCharges?.Other_charges,\r\n      discount: ExtraCharges?.discount,\r\n      grandTotal: ALL,\r\n    };\r\n\r\n    _PostSave(Save_Producton_Process, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"Production Process is Created\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList[0]);\r\n    setProductionProduct(selectedList[0]);\r\n    // setProductList(selectedList[0].productItems);\r\n  };\r\n  const onSelectone = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n\r\n    setProductionProduct(selectedList);\r\n    // const list = [...product];\r\n    let MySelectedwarehouseProduct = selectedList[0].productItems?.map(\r\n      (ele, i) => {\r\n        let myproduct = ele?.productId;\r\n        ele[\"Product_Title\"] = myproduct?.Product_Title;\r\n        ele[\"Product_id\"] = myproduct?._id;\r\n        ele[\"Product_MRP\"] = myproduct?.Product_MRP;\r\n        ele[\"discount\"] = myproduct?.discount;\r\n        ele[\"transferQty\"] = myproduct?.transferQty;\r\n        ele[\"MIN_stockalert\"] = myproduct?.MIN_stockalert;\r\n      }\r\n    );\r\n\r\n    console.log(selectedList[0]?.productItems);\r\n\r\n    setProductWTWList(selectedList[0]?.productItems);\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onRemoveone = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onSelect2 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n    setWareHousetwo(selectedList);\r\n  };\r\n  const onRemove2 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  if (Loader) {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardBody>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: window?.innerHeight,\r\n              }}>\r\n              <h3>Loading...</h3>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col lg=\"8\" md=\"8\" sm=\"8\" className=\"mb-2 mt-1\">\r\n            <div>\r\n              <h1 className=\"\">Edit Production Process</h1>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"float-right\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"float-right mr-1\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.goBack()}>\r\n                    {\" \"}\r\n                    Back\r\n                    {/* <FaPlus size={15} /> Create User */}\r\n                  </Button>\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={handleAddCharges}>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Choose Production Product </Label>\r\n\r\n                  <Multiselect\r\n                    required\r\n                    disablePreSelectedValues\r\n                    selectionLimit={1}\r\n                    // showCheckbox=\"true\"\r\n                    isObject=\"false\"\r\n                    // options={ProductList} // Options to display in the dropdown\r\n                    selectedValues={MainProduct} // Preselected value to persist in dropdown\r\n                    // onSelect={onSelect1} // Function will trigger on select event\r\n                    // onRemove={onRemove1} // Function will trigger on remove event\r\n                    displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {product &&\r\n              product?.map((product, index) => {\r\n                let SeletedMainProduct = ProductList?.filter(\r\n                  (ele) => ele?._id == product?.productId\r\n                );\r\n\r\n                return (\r\n                  <>\r\n                    <Row className=\"\" key={index}>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Choose item *</Label>\r\n                          <Multiselect\r\n                            required\r\n                            selectionLimit={1}\r\n                            // showCheckbox=\"true\"\r\n                            isObject=\"false\"\r\n                            options={ProductList}\r\n                            selectedValues={SeletedMainProduct} // Preselected value to persist in dropdown\r\n                            onSelect={(selectedList, selectedItem) =>\r\n                              handleSelectionProduct(\r\n                                selectedList,\r\n                                selectedItem,\r\n                                index\r\n                              )\r\n                            }\r\n                            onRemove={(selectedList, selectedItem) => {\r\n                              handleRemoveSelected(\r\n                                selectedList,\r\n                                selectedItem,\r\n                                index\r\n                              );\r\n                            }}\r\n                            displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <label for=\"unit\">Select Unit</label>\r\n                          <select\r\n                            required\r\n                            className=\"form-control\"\r\n                            name=\"selecetedUnit\"\r\n                            placeholder=\"selecetedUnit\"\r\n                            value={product?.selecetedUnit}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProductTwo(e, index)\r\n                            }\r\n                            id=\"unit\">\r\n                            <option value=\"\">--select Unit--</option>\r\n                            <option value=\"kg\">Kilogram (kg)</option>\r\n                            <option value=\"Pcs\">Pieces (Pcs)</option>\r\n                            <option value=\"g\">Gram (g)</option>\r\n                            <option value=\"tonne\">Metric Ton (tonne)</option>\r\n                            <option value=\"m\">Meter (m)</option>\r\n                            <option value=\"cm\">Centimeter (cm)</option>\r\n                            <option value=\"mm\">Millimeter (mm)</option>\r\n                            <option value=\"in\">Inch (in)</option>\r\n                            <option value=\"ft\">Foot (ft)</option>\r\n                            <option value=\"m3\">Cubic Meter (m³)</option>\r\n                            <option value=\"L\">Liter (L)</option>\r\n                            <option value=\"ml\">Milliliter (ml)</option>\r\n                            <option value=\"s\">Second (s)</option>\r\n                            <option value=\"min\">Minute (min)</option>\r\n                            <option value=\"hr\">Hour (hr)</option>\r\n                            <option value=\"°C\">Celsius (°C)</option>\r\n                            <option value=\"°F\">Fahrenheit (°F)</option>\r\n                            <option value=\"Pa\">Pascal (Pa)</option>\r\n                            <option value=\"bar\">Bar (bar)</option>\r\n                            <option value=\"m/s\">Meters per Second (m/s)</option>\r\n                            <option value=\"km/h\">\r\n                              Kilometers per Hour (km/h)\r\n                            </option>\r\n                            <option value=\"A\">Ampere (A)</option>\r\n                            <option value=\"V\">Volt (V)</option>\r\n                            <option value=\"W\">Watt (W)</option>\r\n                            <option value=\"kW\">Kilowatt (kW)</option>\r\n                          </select>\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>\r\n                            Price{product?.unitType && product?.unitType}\r\n                          </Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            readOnly\r\n                            aria-readonly\r\n                            onChange={(e) =>\r\n                              handleProductChangeProductone(e, index)\r\n                            }\r\n                            placeholder=\"Price\"\r\n                            value={product.price}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Req_Qty</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            min={0}\r\n                            step=\"any\"\r\n                            name=\"RequiredQty\"\r\n                            placeholder=\"Req_Qty\"\r\n                            value={product?.RequiredQty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProductone(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Discount</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"discount\"\r\n                            readOnly\r\n                            placeholder=\"Discount\"\r\n                            value={product.discount}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Total Price</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"totalprice\"\r\n                            readOnly\r\n                            placeholder=\"TtlPrice\"\r\n                            value={product?.price * product?.RequiredQty}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <div className=\"btnStyle\">\r\n                          {index ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              color=\"danger\"\r\n                              className=\"button remove \"\r\n                              onClick={() => removeMoreProduct(index)}>\r\n                              - Remove\r\n                            </Button>\r\n                          ) : null}\r\n                        </div>\r\n\r\n                        <div className=\"btnStyle\">\r\n                          <Button\r\n                            className=\"ml-1 mb-1\"\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            onClick={() => addMoreProduct()}>\r\n                            + Add\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </>\r\n                );\r\n              })}\r\n            <Row>\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Discount</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"discount\"\r\n                          readOnly\r\n                          placeholder=\"Dissct\"\r\n                          value={product.discount}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Shipping Cost</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"Shipcst\"\r\n                          readOnly\r\n                          placeholder=\"Shipcst\"\r\n                          value={product.Shipping}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Tax</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"tax\"\r\n                          readOnly\r\n                          placeholder=\"Tax\"\r\n                          value={product.tax}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                <div className=\" d-flex justify-content-end\">\r\n                  <Label className=\"pr-5\">\r\n                    Grand Total :{\" \"}\r\n                    <stron>\r\n                      {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                        ? 0\r\n                        : grandTotalAmt}{\" \"}\r\n                    </stron>\r\n                  </Label>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        style={{ maxWidth: \"1050px\" }}\r\n        isOpen={modalOne}\r\n        toggle={toggleOne}\r\n        {...args}>\r\n        <ModalHeader toggle={toggleOne}>Add Charges</ModalHeader>\r\n        <ModalBody>\r\n          <Form className=\"m-1\" onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Miscellaneous Expenses </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_Expenses\"\r\n                    value={ExtraCharges?.Other_Expenses}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>GST Applied </Label>\r\n\r\n                  <CustomInput\r\n                    className=\"form-control\"\r\n                    name=\"GSTApplied\"\r\n                    value={ExtraCharges?.GSTApplied}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"select\">\r\n                    <option>--select--</option>\r\n                    <option value={18}>18</option>\r\n                    <option value={9}>9</option>\r\n                  </CustomInput>\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Other Charges </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_charges\"\r\n                    value={ExtraCharges?.Other_charges}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Discount </Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    value={ExtraCharges?.discount}\r\n                    name=\"discount\"\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\" mt-2\">\r\n                  <Button color=\"primary\" onClick={handleSubmitCharges}>\r\n                    Add Charges\r\n                  </Button>\r\n                </div>\r\n              </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> SubTotal:</strong>{\" \"}\r\n                  {grandTotalAmt && grandTotalAmt == \"NaN\" ? 0 : grandTotalAmt}{\" \"}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> Miscellaneous:</strong>\r\n                  {ExtraCharges?.Other_Expenses}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> GST:</strong>{\" \"}\r\n                  {(ExtraCharges?.GSTApplied * grandTotalAmt) / 100}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> other:</strong>\r\n                  {ExtraCharges?.Other_charges}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> Discount: </strong>\r\n                  {ExtraCharges?.discount}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> GrandTotal:</strong>\r\n\r\n                  {(\r\n                    Number(grandTotalAmt) +\r\n                    Number(ExtraCharges?.Other_Expenses) +\r\n                    Number(ExtraCharges?.Other_charges) +\r\n                    (Number(grandTotalAmt) * ExtraCharges?.GSTApplied) / 100 -\r\n                    Number(ExtraCharges?.discount)\r\n                  )?.toFixed(2)}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>{\" \"}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter></ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default EditProductionProcess;\r\n"],"sourceRoot":""}