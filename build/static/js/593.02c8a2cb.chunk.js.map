{"version":3,"sources":["views/apps/freshlist/order/purchase/EditPurchase.js"],"names":["EditPurchase","args","useState","error","status","setstatus","orderData","setOrderData","Params","useParams","history","useLocation","useHistory","useEffect","PurchaseOrderView","id","then","resp","orderHistory","console","log","catch","err","className","render","style","cursor","color","size","onClick","goBack","onSubmit","e","preventDefault","payload","swal","PurchaseStatusOrder","_id","res","push","lg","md","sm","required","type","placeholder","name","value","onChange","target","Ripple"],"mappings":"2SAwIeA,UA/GM,SAAAC,GACnB,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KACZ,GADsB,KACMD,mBAAS,KAAG,mBAAjCE,EAAM,KAAEC,EAAS,KACxB,EAAkCH,mBAAS,IAAG,mBAAvCI,EAAS,KAAEC,EAAY,KACxBC,EAASC,cAETC,GADWC,cACDC,eAEhBC,qBAAU,WAERC,aAAwB,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQO,IACvBC,MAAK,SAAAC,GACJV,EAAaU,EAAKC,cAClBb,EAAUY,EAAKC,aAAad,QAC5Be,QAAQC,IAAIH,EAAKC,iBAElBG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAEf,IA0BH,OACE,6BACE,6BACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACC,UAAU,OACb,kBAAC,IAAG,CAACA,UAAU,IACb,6BACE,wBAAIA,UAAU,IAAG,gCAGrB,kBAAC,IAAG,KACF,yBAAKA,UAAU,eACb,kBAAC,IAAK,CACJC,OAAQ,gBAAGd,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLe,MAAO,CAAEC,OAAQ,WACjBH,UAAU,mBACVI,MAAM,UACNC,KAAK,KACLC,QAAS,kBAAMnB,EAAQoB,WACxB,cASX,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACP,UAAU,MAAMQ,SAlDV,SAAAC,GACpBA,EAAEC,iBACF,IAAIC,EAAU,CACZ9B,OAAQA,GAEND,EACFgC,KAAK,wCAELC,aAAoBF,EAAS5B,EAAU+B,KACpCrB,MAAK,SAAAsB,GACJnB,QAAQC,IAAIkB,GACZH,KAAK,+BACLzB,EAAQ6B,KAAK,2CAEdlB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAoCR,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACkB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAInB,UAAU,QAClC,kBAAC,IAAK,KAAC,UACP,kBAAC,IAAW,CACVoB,UAAQ,EACRC,KAAK,SACLC,YAAY,SACZC,KAAK,SACLC,MAAO3C,EACP4C,SAhEG,SAAAhB,GACnBb,QAAQC,IAAIY,EAAEiB,OAAOF,OACrB1C,EAAU2B,EAAEiB,OAAOF,SAgEH,4BAAQA,MAAM,WAAU,WACxB,4BAAQA,MAAM,aAAY,aAC1B,4BAAQA,MAAM,aAAY,eAG9B,kBAAC,IAAG,CAACP,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAInB,UAAU,QAClC,yBAAKA,UAAU,iCACb,kBAAC,IAAO2B,OAAM,CACZvB,MAAM,UACNiB,KAAK,SACLrB,UAAU,QACX","file":"static/js/593.02c8a2cb.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  PurchaseStatusOrder,\r\n  PurchaseOrderView,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst EditPurchase = args => {\r\n  const [error, setError] = useState(\"\");\r\n  const [status, setstatus] = useState(\"\");\r\n  const [orderData, setOrderData] = useState(\"\");\r\n  const Params = useParams();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // console.log(location?.state?._id);\r\n    PurchaseOrderView(Params?.id)\r\n      .then(resp => {\r\n        setOrderData(resp.orderHistory);\r\n        setstatus(resp.orderHistory.status);\r\n        console.log(resp.orderHistory);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    console.log(e.target.value);\r\n    setstatus(e.target.value);\r\n  };\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    let payload = {\r\n      status: status,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      PurchaseStatusOrder(payload, orderData._id)\r\n        .then(res => {\r\n          console.log(res);\r\n          swal(\"Status changed Successfully\");\r\n          history.push(\"/app/AJgroup/order/purchaseOrderList\");\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h2 className=\"\">Edit Purchase Order Status</h2>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={() => history.goBack()}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Status</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    placeholder=\"status\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"pending\">pending</option>\r\n                    <option value=\"cancelled\">cancelled</option>\r\n                    <option value=\"completed\">completed</option>\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EditPurchase;\r\n"],"sourceRoot":""}