{"version":3,"sources":["views/apps/freshlist/parts/AddPart.js"],"names":["AddPart","useState","hub_name","desc","email","phone","address","d_zone","cat","subcat","status","formData","selectedCountry","CustomerRegistView","setCustomerRegistView","CustomerDropdown","setCustomerDropdown","useEffect","CreateParts","then","res","console","log","data","jsonAllData","xmlJs","xml2json","compact","spaces","JSON","parse","xml2js","parseString","err","result","error","ProductRgistration","catch","isoCode","State","getStatesOfCountry","className","col-sm-6","onSubmit","e","preventDefault","axiosConfig","post","response","props","history","push","input","map","val","i","key","lg","md","sm","label","_text","type","_attributes","name","placeholder","MyDropdown","dropdown","value","option","index","color"],"mappings":"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","file":"static/js/595.8587fdb5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport xmlJs from \"xml-js\";\r\nimport xml2js from \"xml2js\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CreateParts } from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nconst AddPart = () => {\r\n  const [formData, setFormData] = useState({\r\n    hub_name: \"\",\r\n    desc: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    d_zone: \"\",\r\n    cat: \"\",\r\n    subcat: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [CustomerRegistView, setCustomerRegistView] = useState({});\r\n  const [CustomerDropdown, setCustomerDropdown] = useState({});\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //   const handleInputChange = e => {\r\n  //     // Handle input changes and update formData state\r\n  //     const { name, value } = e.target;\r\n  //     setFormData({\r\n  //       ...formData,\r\n  //       [name]: value,\r\n  //     });\r\n  //   };\r\n  useEffect(() => {\r\n    CreateParts()\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const jsonAllData = xmlJs.xml2json(res.data, {\r\n          compact: true,\r\n          spaces: 2,\r\n        });\r\n        console.log(JSON.parse(jsonAllData));\r\n        setCustomerRegistView(JSON.parse(jsonAllData));\r\n        setCustomerDropdown(JSON.parse(jsonAllData));\r\n        xml2js.parseString(res?.data, (err, result) => {\r\n          if (err) {\r\n            console.error(\"Error parsing XML:\", err);\r\n          } else {\r\n            console.log(result.ProductRgistration);\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedCountry);\r\n    console.log(selectedCountry?.isoCode);\r\n    console.log(State?.getStatesOfCountry(selectedCountry?.isoCode));\r\n  }, [selectedCountry]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submitHandler\", formData);\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addcategory\", formData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/freshlist/order/orderList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Create Part\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={submitHandler}>\r\n            <Row className=\"mb-2\">\r\n              {CustomerRegistView &&\r\n                CustomerRegistView.ProductRgistration?.input?.map((val, i) => {\r\n                  return (\r\n                    <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>{val?.label?._text}</Label>\r\n                        <Input\r\n                          // type=\"date\"\r\n                          type={val?.type?._attributes?.type}\r\n                          name={val?.name?._text}\r\n                          placeholder={val?.placeholder?._text}\r\n                          // onChange={changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  );\r\n                })}\r\n\r\n              {CustomerDropdown &&\r\n                CustomerDropdown?.ProductRgistration?.MyDropdown?.dropdown?.map(\r\n                  (val, i) => {\r\n                    console.log(val);\r\n                    return (\r\n                      <Col lg=\"6\" md=\"6\">\r\n                        <Label>{val?.label?._text}</Label>\r\n                        <select\r\n                          key={i}\r\n                          className=\"form-control\"\r\n                          name={val?.name._text}\r\n                          // value={selectedOption}\r\n                          // onChange={handleOptionChange}\r\n                        >\r\n                          <option value=\"\">Select an option</option>\r\n                          {val?.option.map((option, index) => (\r\n                            <option\r\n                              key={index}\r\n                              value={option?._attributes?.value}\r\n                            >\r\n                              {option?._text}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                )}\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Order Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Invoice Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Registered To</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Registered To\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Product Price</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Product Price\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"exampleSelect\">Warranty Applied</Label>\r\n                  <Input id=\"exampleSelect\" name=\"select\" type=\"select\">\r\n                    <option> Standard Warranty </option>\r\n                    <option> Extended Warranty </option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Warranty Start Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Warranty End Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Industry</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    // name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Used as</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    // name=\"customer_name\"\r\n                    // value={formData.customer_name}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>ZipCode/PinCode</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    // onKeyDown={e =>\r\n                    //   [\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()\r\n                    // }\r\n                    // min={0}\r\n                    placeholder=\"Enter ZipCode/PinCode\"\r\n                    // name=\"B_PinCode\"\r\n                    // value={B_PinCode}\r\n                    // onChange={e => setB_PinCode(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n            </Row>\r\n\r\n            <Row className=\"m-2\">\r\n              <Button color=\"primary\" type=\"submit\" className=\"mr-1 mb-1\">\r\n                Add Part\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPart;\r\n"],"sourceRoot":""}