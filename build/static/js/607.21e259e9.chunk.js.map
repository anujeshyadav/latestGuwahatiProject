{"version":3,"sources":["views/apps/freshlist/subcategory/inVoices.js"],"names":["i","inVoices","state","rowData","paginationPageSize","currenPageSize","Viewpermisson","Editpermisson","Createpermisson","Deletepermisson","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","src","data","image","alt","height","subcategory_name","category","category_name","type","feature","value","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","pageparmission","JSON","parse","localStorage","getItem","console","log","role","newparmisson","find","pageName","this","permission","includes","formdata","FormData","append","Userinfo","id","axiosConfig","get","then","response","delete","error","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/607.21e259e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass inVoices extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    Viewpermisson: null,\r\n    Editpermisson: null,\r\n    Createpermisson: null,\r\n    Deletepermisson: null,\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"image\",\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <img\r\n              className=\" rounded-circle mr-50\"\r\n              src={params.data.image}\r\n              alt=\"user avatar\"\r\n              height=\"40\"\r\n              width=\"40\"\r\n            />\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"subcategory_name\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center\">\r\n              <span>{params.data.subcategory_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Category\",\r\n        field: \"category.category_name\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center\">\r\n              <span>{params.data.category?.category_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Type\",\r\n        field: \"type\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center\">\r\n              <span>{params.data?.type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Feature\",\r\n        field: \"feature\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center\">\r\n              <span>{params.data?.feature}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                                className=\"mr-50\"\r\n                                size=\"25px\"\r\n                                color=\"green\"\r\n                                onClick={() =>\r\n                                    history.push(`/app/customer/viewCustomer/${params.data._id}`)}\r\n                            /> */}\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/subcategory/editSubCategory/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Trash2\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"red\"\r\n                    onClick={() => {\r\n                      let selectedData = this.gridApi.getSelectedRows();\r\n                      this.runthisfunction(params.data._id);\r\n                      this.gridApi.updateRowData({ remove: selectedData });\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(pageparmission.role);\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"invoices\"\r\n    );\r\n    console.log(newparmisson);\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n    // console.log(newparmisson?.permission.includes(\"View\"));\r\n    // console.log(newparmisson?.permission.includes(\"Create\"));\r\n    // console.log(newparmisson?.permission.includes(\"Edit\"));\r\n    // console.log(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig.get(`/admin/getalldata`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.delete(`/admin/del_subcategory/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\">\r\n                  invoices\r\n                </h1>\r\n              </Col>\r\n              {/* <Col>\r\n                  <Button\r\n                    style={{ marginRight: \"-22rem\" }}\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/subcategory/SubCategoryList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Col> */}\r\n              {/* <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          \"/app/freshlist/subcategory/addSubCategory\"\r\n                        )\r\n                      }\r\n                    >\r\n                      Add New\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default inVoices;\r\n"],"sourceRoot":""}