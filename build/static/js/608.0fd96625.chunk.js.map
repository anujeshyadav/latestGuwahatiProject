{"version":3,"sources":["views/apps/freshlist/subcategory/paymentcompleted.js"],"names":["i","paymentcompleted","state","rowData","paginationPageSize","currenPageSize","Viewpermisson","Editpermisson","Createpermisson","Deletepermisson","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","order_ids","color","size","status","grandtotal","created_date","totcgst","totsgst","other_charges","discount_value","delivery_charges","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","pageparmission","JSON","parse","localStorage","getItem","console","log","role","newparmisson","find","value","pageName","this","permission","includes","formdata","FormData","append","Userinfo","id","axiosConfig","post","then","res","catch","err","delete","response","error","sm","tag","length","right","onClick","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/608.0fd96625.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass paymentcompleted extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    Viewpermisson: null,\r\n    Editpermisson: null,\r\n    Createpermisson: null,\r\n    Deletepermisson: null,\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 80,\r\n        filter: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Orderid\",\r\n        field: \"order_ids\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params?.data?.order_ids}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Payment Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span color=\"green\">\r\n                  <Badge size=\"sm\" color=\"success\">\r\n                    {params.data?.status}\r\n                  </Badge>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Grandtotal\",\r\n        field: \"grandtotal\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <Badge color=\"success\">{params.data?.grandtotal}</Badge>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Invoice\",\r\n      //   field: \"invoice\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>\r\n      //             <AiOutlineDownload\r\n      //               onClick={() => this.handleBillDownload(params.data)}\r\n      //               fill=\"green\"\r\n      //               size=\"30px\"\r\n      //             />\r\n      //           </span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"created_date\",\r\n        field: \"created_date\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n              <div>\r\n                <span>{params?.data?.created_date}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Suppliername\",\r\n      //   field: \"supplier_name\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 210,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.orders[0]?.supplier_name}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"CGST\",\r\n        field: \"totcgst\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data?.totcgst}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"SGST\",\r\n        field: \"totsgst\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data?.totsgst}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"discount_value\",\r\n      //   field: \"discount_value\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 210,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.discount_value}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"other_charges\",\r\n        field: \"other_charges\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data?.other_charges}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Discount\",\r\n        field: \"discount_value\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data?.discount_value}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"delivery_charges\",\r\n        field: \"delivery_charges\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data?.delivery_charges}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Add Payment\",\r\n      //   field: \"category.category_name\",\r\n      //   filter: true,\r\n      //   width: 300,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div\r\n      //         style={{ padding: \"6px 0px\" }}\r\n      //         className=\"d-flex align-items-center custominputbox\"\r\n      //       >\r\n      //         <input\r\n      //           type=\"text\"\r\n      //           className=\"form-control\"\r\n      //           placeholder=\"Enter Amount\"\r\n      //           onChange={(e) => {\r\n      //             this.setState({ Addmoney: e.target.value });\r\n      //           }}\r\n      //         />\r\n      //         <Button\r\n      //           style={{\r\n      //             position: \"absolute\",\r\n      //             right: \"26px\",\r\n      //             padding: \"11px 11px\",\r\n      //           }}\r\n      //           size=\"sm\"\r\n      //           onClick={(e) => this.handleAddMoney(e, params?.data)}\r\n      //           color=\"primary\"\r\n      //         >\r\n      //           add\r\n      //         </Button>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Add Now\",\r\n      //   field: \"type\",\r\n      //   filter: true,\r\n      //   width: 210,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div\r\n      //         style={{ padding: \"6px 0px\" }}\r\n      //         className=\"d-flex align-items-center custombutton\"\r\n      //       >\r\n      //         <Button\r\n      //           size=\"sm\"\r\n      //           onClick={(e) => this.handleAddMoney(e, params?.data)}\r\n      //           color=\"primary\"\r\n      //         >\r\n      //           ADD Payment\r\n      //         </Button>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n    // columnDefs: [\r\n    //   {\r\n    //     headerName: \"S.No\",\r\n    //     valueGetter: \"node.rowIndex + 1\",\r\n    //     field: \"node.rowIndex + 1\",\r\n    //     width: 100,\r\n    //     filter: true,\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Image\",\r\n    //     field: \"image\",\r\n    //     filter: true,\r\n    //     width: 100,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <img\r\n    //           className=\" rounded-circle mr-50\"\r\n    //           src={params.data.image}\r\n    //           alt=\"user avatar\"\r\n    //           height=\"40\"\r\n    //           width=\"40\"\r\n    //         />\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Name\",\r\n    //     field: \"subcategory_name\",\r\n    //     filter: true,\r\n    //     width: 150,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center\">\r\n    //           <span>{params.data.subcategory_name}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n\r\n    //   {\r\n    //     headerName: \"Category\",\r\n    //     field: \"category.category_name\",\r\n    //     filter: true,\r\n    //     width: 150,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center\">\r\n    //           <span>{params.data.category?.category_name}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Type\",\r\n    //     field: \"type\",\r\n    //     filter: true,\r\n    //     width: 150,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center\">\r\n    //           <span>{params.data?.type}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Feature\",\r\n    //     field: \"feature\",\r\n    //     filter: true,\r\n    //     width: 150,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center\">\r\n    //           <span>{params.data?.feature}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n\r\n    //   {\r\n    //     headerName: \"Status\",\r\n    //     field: \"status\",\r\n    //     filter: true,\r\n    //     width: 150,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return params.value === \"Active\" ? (\r\n    //         <div className=\"badge badge-pill badge-success\">\r\n    //           {params.data.status}\r\n    //         </div>\r\n    //       ) : params.value === \"Inactive\" ? (\r\n    //         <div className=\"badge badge-pill badge-warning\">\r\n    //           {params.data.status}\r\n    //         </div>\r\n    //       ) : null;\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Actions\",\r\n    //     field: \"sortorder\",\r\n    //     field: \"transactions\",\r\n    //     width: 150,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"actions cursor-pointer\">\r\n    //           {/* <Eye\r\n    //                             className=\"mr-50\"\r\n    //                             size=\"25px\"\r\n    //                             color=\"green\"\r\n    //                             onClick={() =>\r\n    //                                 history.push(`/app/customer/viewCustomer/${params.data._id}`)}\r\n    //                         /> */}\r\n    //           <Route\r\n    //             render={({ history }) => (\r\n    //               <Edit\r\n    //                 className=\"mr-50\"\r\n    //                 size=\"25px\"\r\n    //                 color=\"blue\"\r\n    //                 onClick={() =>\r\n    //                   history.push(\r\n    //                     `/app/freshlist/subcategory/editSubCategory/${params.data._id}`\r\n    //                   )\r\n    //                 }\r\n    //               />\r\n    //             )}\r\n    //           />\r\n    //           <Route\r\n    //             render={({ history }) => (\r\n    //               <Trash2\r\n    //                 className=\"mr-50\"\r\n    //                 size=\"25px\"\r\n    //                 color=\"red\"\r\n    //                 onClick={() => {\r\n    //                   let selectedData = this.gridApi.getSelectedRows();\r\n    //                   this.runthisfunction(params.data._id);\r\n    //                   this.gridApi.updateRowData({ remove: selectedData });\r\n    //                 }}\r\n    //               />\r\n    //             )}\r\n    //           />\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(pageparmission.role);\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Payment completed\"\r\n    );\r\n    console.log(newparmisson);\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    // formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(`/getPaymentStatusComplete`, formdata)\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        let rowData = res.data.data;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.delete(`/admin/del_subcategory/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\">\r\n                  Payment completed\r\n                </h1>\r\n              </Col>\r\n              {/* <Col>\r\n                  <Button\r\n                    style={{ marginRight: \"-22rem\" }}\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/subcategory/SubCategoryList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Col> */}\r\n              {/* <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          \"/app/freshlist/subcategory/addSubCategory\"\r\n                        )\r\n                      }\r\n                    >\r\n                      Add New\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default paymentcompleted;\r\n"],"sourceRoot":""}