{"version":3,"sources":["views/apps/freshlist/zone/ZonesList.js"],"names":["i","ZonesList","state","rowData","paginationPageSize","currenPageSize","getPageSize","open","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","shop_name","firstname","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","this","defaultColDef","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/617.801dd93e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nclass ZonesList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    open: \"false\",\r\n    // defaultColDef: {\r\n    //   sortable: true,\r\n    //   editable: true,\r\n    //   resizable: true,\r\n    //   suppressMenu: true,\r\n    // },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 200,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"shop_name\",\r\n        filter: true,\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params.data.shop_name}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Vendor\",\r\n        field: \"firstname\",\r\n        //filter: true,\r\n        filter: \"agSetColumnFilter\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params.data.firstname}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/vendor/viewVendor/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Trash2\r\n                    size={20}\r\n                    color=\"red\"\r\n                    onClick={() => {\r\n                      let selectedData = this.gridApi.getSelectedRows();\r\n                      this.runthisfunction(params.data._id);\r\n                      this.gridApi.updateRowData({ remove: selectedData });\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/admin/getall_vendor\").then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/deleteproductcategory/${id}`).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Delivery Zones\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      color=\"danger\"\r\n                      //  onClick={toggle}\r\n                    >\r\n                      Add Zone\r\n                    </Button>\r\n                    // <Button\r\n                    //   className=\"float-right\"\r\n                    //   color=\"primary\"\r\n                    //   onClick={() =>\r\n                    //     history.push(\"/app/freshlist/vendor/addVendor\")\r\n                    //   }\r\n                    // >\r\n                    //   Add Zone\r\n                    // </Button>\r\n                  )}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ZonesList;\r\n"],"sourceRoot":""}